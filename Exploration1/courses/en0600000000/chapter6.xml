<chapter type="" id="en0606000000"><title><content-text>Addressing the Network - IPv4</content-text></title>
<section type="ChapterIntroduction" id="en0606000000"><title><content-text>Chapter Introduction</content-text></title>
<topic type="" id="en0606000100"><title><content-text>Chapter Introduction</content-text></title>
<page type="OneColumn" id="en0606000101">
<content-media type="StaticGraphic" id="cm5322734807"><title><content-text></content-text></title><media ref="en0606000000/en0606000000/en0606000100/en0606000101/cm5322734807.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606000000/en0606000100/en0606000101/cm5322734807text.xml"/></content-media>

<content-text><p>Addressing is a key function of Network layer protocols that enables data communication between hosts on the same network or on different networks. Internet Protocol version 4 (IPv4) provides hierarchical addressing for packets that carry our data.</p><p>Designing, implementing and managing an effective IPv4 addressing plan ensures that our networks can operate effectively and efficiently.</p><p>This chapter examines in detail the structure of IPv4 addresses and their application to the construction and testing of IP networks and subnetworks.</p><p>In this chapter, you will learn to:</p><ul><li> Explain the structure IP addressing and demonstrate the ability to convert between 8-bit binary and decimal numbers.</li>  <li> Given an IPv4 address, classify by type and describe how it is used in the network.</li>  <li> Explain how addresses are assigned to networks by ISPs and within networks by administrators.</li>  <li> Determine the network portion of the host address and explain the role of the subnet mask in dividing networks.</li>  <li> Given IPv4 addressing information and design criteria, calculate the appropriate addressing components.</li>  <li> Use common testing utilities to verify and test network connectivity and operational status of the IP protocol stack on a host.</li></ul>
</content-text>
</page>
</topic>
</section>
<section type="" id="en0606010000"><title><content-text>IPv4 Addresses</content-text></title>
<topic type="" id="en0606010100"><title><content-text>The Anatomy of an IPv4 Address</content-text></title>
<page type="OneColumn" id="en0606010101">
<content-media type="InteractiveGraphicRollovers" id="cm5606431369"><title><content-text></content-text></title><media ref="en0606000000/en0606010000/en0606010100/en0606010101/cm5606431369.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606010000/en0606010100/en0606010101/cm5606431369text.xml"/></content-media>

<content-text><p>Each device on a network must be uniquely defined. At the Network layer, the packets of the communication need to be identified with the source and destination addresses of the two end systems. With IPv4, this means that each packet has a 32-bit source address and a 32-bit destination address in the Layer 3 header. </p><p>These addresses are used in the data network as binary patterns. Inside the devices, <content-link target="cg3587716314" type="glossary">digital logic</content-link> is applied for their interpretation. For us in the human network, a string of 32 bits is difficult to interpret and even more difficult to remember. Therefore, we represent IPv4 addresses using <content-link target="cg8162183002" type="glossary">dotted decimal</content-link> format. </p><p><b>Dotted Decimal</b></p><p>Binary patterns representing IPv4 addresses are expressed as dotted decimals by separating each byte of the binary pattern, called an octet, with a dot. It is called an octet because each decimal number represents one byte or 8 bits. </p><p>For example, the address:</p><p><b>10101100000100000000010000010100</b> </p><p>is expressed in dotted decimal as:</p><p><b>172.16.4.20</b></p><p>Keep in mind that devices use binary logic. The dotted decimal format is used to make it easier for people to use and remember addresses. </p><p><b>Network and Host Portions</b></p><p>For each IPv4 address, some portion of the high-order bits represents the network address. At Layer 3, we define a <i>network</i> as a group of hosts that have identical bit patterns in the network address portion of their addresses. </p><p>Although all 32 bits define the IPv4 host address, we have a variable number of bits that are called the host portion of the address. The number of bits used in this host portion determines the number of hosts that we can have within the network. </p><p> </p><p><b>Roll over the labels in the figure to see the different parts of the address.</b></p><p>For example, if we need to have at least 200 hosts in a particular network, we would need to use enough bits in the host portion to be able to represent at least 200 different bit patterns. </p><p>To assign a unique address to 200 hosts, we would use the entire last octet. With 8 bits, a total of 256 different bit patterns can be achieved. This would mean that the bits for the upper three octets would represent the network portion. </p><p><b>Note: </b>Calculating the number of hosts and determining which portion of the 32 bits refers to the network will be covered later in this chapter.</p></content-text>
</page>
</topic>
<topic type="" id="en0606010200"><title><content-text>Knowing the Numbers - Binary to Decimal Conversion</content-text></title>
<page type="OneColumn" id="en0606010201">
<content-media type="StaticGraphic" id="cm3006978745"><title><content-text></content-text></title><media ref="en0606000000/en0606010000/en0606010200/en0606010201/cm3006978745.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606010000/en0606010200/en0606010201/cm3006978745text.xml"/></content-media>

<content-text><p>To understand the operation of a device in a network, we need to look at addresses and other data the way the device does - in binary notation. This means that we need to have some skill in binary to decimal conversion. </p><p>Data represented in binary may represent many different forms of data to the human network. In this discussion, we refer to binary as it relates to IPv4 addressing. This means that we look at each byte (octet) as a decimal number in the range of 0 to 255. </p><p><b>Positional Notation</b></p><p>Learning to convert binary to decimal requires an understanding of the mathematical basis of a numbering system called <i>positional notation</i>. Positional notation means that a digit represents different values depending on the position it occupies. More specifically, the value that a digit represents is that value multiplied by the power of the base, or radix, represented by the position the digit occupies. Some examples will help to clarify how this system works.</p><p>For the decimal number 245, the value that the 2 represents is 2*10^2 (2 times 10 to the power of 2). The 2 is in what we commonly refer to as the "100s" position. Positional notation refers to this position as the base^2 position because the base, or radix, is 10 and the power is 2.</p><p>Using <content-link target="cg5088284958" type="glossary">positional notation</content-link> in the base 10 number system, 245 represents: </p><p>245 = (2 * 10^2) + (4 * 10^1) + (5 * 10^0) </p><p>or </p><p>245 = (2 * 100) + (4 * 10) + (5 * 1) </p><p><b>Binary Numbering System</b></p><p>In the binary numbering system, the <content-link target="cg3963269369" type="glossary">radix</content-link> is <b>2</b>. Therefore, each position represents increasing powers of 2. In 8-bit binary numbers, the positions represent these quantities:</p><p>2^7 2^6 2^5 2^4 2^3 2^2 2^1 2^0</p><p>128 64 32 16 8 4 2 1</p><p>The base 2 numbering system only has two digits: <b>0</b> and <b>1</b>. </p><p>When we interpret a byte as a decimal number, we have the quantity that position represents if the digit is a 1 and we do not have that quantity if the digit is a <b>0</b>, as shown in the figure. </p><p><b> 1 1 1 1 1 1 1 1</b></p><p><b>128 64 32 16 8 4 2 1</b></p><p>A <b>1 </b>in each position means that we add the value for that position to the total. This is the addition when there is a 1 in each position of an octet. The total is 255.</p><p><b>128 + 64 + 32 + 16 + 8 + 4 + 2 + 1 = 255</b></p><p>A <b>0 </b>in each position indicates that the value for that position is not added to the total. A <b>0 </b>in every position yields a total of 0.</p><p><b> 0 0 0 0 0 0 0 0</b></p><p><b>128 64 32 16 8 4 2 1</b></p><p> </p><p><b>0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 = 0</b></p><p> </p><p>Notice in the figure that a different combination of ones and zeros will yield a different decimal value.</p></content-text>
</page>
<page type="OneColumn" id="en0606010202">
<content-media type="StaticGraphic" id="cm8762775731"><title><content-text></content-text></title><media ref="en0606000000/en0606010000/en0606010200/en0606010202/cm8762775731.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606010000/en0606010200/en0606010202/cm8762775731text.xml"/></content-media>

<content-text><p><b>See the figure for the steps to convert a binary address to a decimal address.</b></p><p>In the example, the binary number: </p><p><b>10101100000100000000010000010100</b></p><p>Is converted to: </p><p><b>172.16.4.20</b></p><p>Keep these steps in mind:</p><ul><li>          Divide the 32 bits into 4 octets.</li>  <li>          Convert each octet to decimal.</li>  <li>          Add a "dot" between each decimal.</li></ul>
</content-text>
</page>
</topic>
<topic type="" id="en0606010300"><title><content-text>Practicing Binary to Decimal Conversions</content-text></title>
<page type="OneColumn" id="en0606010301">
<content-media type="AnimationPartialScreen" id="cm3264299295"><title><content-text></content-text></title><media ref="en0606000000/en0606010000/en0606010300/en0606010301/cm3264299295.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606010000/en0606010300/en0606010301/cm3264299295text.xml"/></content-media>

<content-text><p>The activity in the figure allows you to practice 8-bit binary conversion as much as necessary. We recommend that you work with this tool until you are able to do the conversion without error. </p></content-text>
</page>
</topic>
<topic type="" id="en0606010400"><title><content-text>Knowing the Numbers - Decimal to Binary Conversions</content-text></title>
<page type="OneColumn" id="en0606010401">
<content-media type="StaticGraphic" id="cm7749819237"><title><content-text></content-text></title><media ref="en0606000000/en0606010000/en0606010400/en0606010401/cm7749819237.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606010000/en0606010400/en0606010401/cm7749819237text.xml"/></content-media>

<content-text><p>Not only do we need to be able to convert binary to decimal, we also need to be able to convert decimal to binary. We often need to examine an individual octet of an address that is given in dotted decimal notation. Such is the case when the network bits and host bits divide an octet. </p><p>As an example, if a host with the 172.16.4.20 were using 28 bits for the network address, we would need to examine the binary in the last octet to discover that this host is on the network 172.16.4.16. This process of extracting the network address from a host address will be explained later.</p><p><b>Address Values are Between 0 and 255</b></p><p>Because our representation of addresses is limited to decimal values for a single octet, we will only examine the process of converting 8-bit binary to the decimal values of 0 to 255. </p><p>To begin the conversion process, we start by determining if the decimal number is equal to or greater than our largest decimal value represented by the <content-link target="cg5031384581" type="glossary">most-significant bit</content-link>. In the highest position, we determine if the value is equal to or greater than 128. If the value is smaller than 128, we place a 0 in the 128-bit position and move to the 64-bit position.</p><p>If the value in the 128-bit position is larger than or equal to 128, we place a 1 in the 128 position and subtract 128 from the number being converted. We then compare the remainder of this operation to the next smaller value, 64. We continue this process for all the remaining bit positions.</p><p><b>See the figure for an example of these steps. </b>We convert <b>172</b> to <b>10101100</b>.</p></content-text>
</page>
<page type="OneColumn" id="en0606010402">
<content-media type="AnimationStepped" id="cm4268476996"><title><content-text></content-text></title><media ref="en0606000000/en0606010000/en0606010400/en0606010402/cm4268476996.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606010000/en0606010400/en0606010402/cm4268476996text.xml"/></content-media>

<content-text><p><b>Follow the conversion steps to see how an IP address is converted to binary.</b></p></content-text>
</page>
<page type="OneColumn" id="en0606010403">
<content-media type="StaticGraphic" id="cm7262742785"><title><content-text></content-text></title><media ref="en0606000000/en0606010000/en0606010400/en0606010403/cm7262742785.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606010000/en0606010400/en0606010403/cm7262742785text.xml"/></content-media>

<content-text><p><b>Conversion Summary</b></p><p>The figure summarizes the entire conversion of <b>172.16.4.20</b> from dotted decimal notation to binary notation.</p></content-text>
</page>
</topic>
<topic type="" id="en0606010500"><title><content-text>Practicing Decimal to Binary Conversion</content-text></title>
<page type="OneColumn" id="en0606010501">
<content-media type="InteractiveGraphicRollovers" id="cm3029083634"><title><content-text></content-text></title><media ref="en0606000000/en0606010000/en0606010500/en0606010501/cm3029083634.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606010000/en0606010500/en0606010501/cm3029083634text.xml"/></content-media>

<content-text><p>The activity in the figure allows you to practice decimal conversion to 8-bit binary as much as necessary. We recommend that you work with this tool until you are able to do the conversion without error.</p></content-text>
</page>
</topic>
</section>
<section type="" id="en0606020000"><title><content-text>Addresses for Different Purposes</content-text></title>
<topic type="" id="en0606020100"><title><content-text>Types of Addresses in an IPv4 Network</content-text></title>
<page type="OneColumn" id="en0606020101">
<content-media type="InteractiveGraphicRollovers" id="cm2740478848"><title><content-text></content-text></title><media ref="en0606000000/en0606020000/en0606020100/en0606020101/cm2740478848.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606020000/en0606020100/en0606020101/cm2740478848text.xml"/></content-media>

<content-text><p>Within the address range of each IPv4 network, we have three types of addresses:</p><p><b>Network address</b> - The address by which we refer to the network</p><p><b>Broadcast address</b> - A special address used to send data to all hosts in the network</p><p><b>Host addresses</b> - The addresses assigned to the end devices in the network</p><p><b>Network Address</b></p><p>The network address is a standard way to refer to a network. For example, we could refer to the network shown in the figure as "the 10.0.0.0 network." This is a much more convenient and descriptive way to refer to the network than using a term like "the first network." All hosts in the 10.0.0.0 network will have the same network bits. </p><p><b>Within the IPv4 address range of a network, the lowest address is reserved for the network address</b>. This address has a <b>0</b> for each host bit in the host portion of the address. </p><p><b>Roll over the NETWORK ADDRESS tab in the figure.</b></p><p><b>Broadcast Address</b></p><p>The IPv4 <content-link target="cg6987468310" type="glossary">broadcast address</content-link> is a special address for each network that allows communication to all the hosts in that network. To send data to all hosts in a network, a host can send a single packet that is addressed to the broadcast address of the network. </p><p><b>The broadcast address uses the highest address in the network range.</b> This is the address in which the bits in the host portion are all 1s. For the network 10.0.0.0 with 24 network bits, the broadcast address would be 10.0.0.255. This address is also referred to as the <i>directed broadcast</i>. </p><p><b>Roll over the BROADCAST ADDRESS tab in the figure.</b></p><p><b>Host Addresses</b></p><p>As described previously, every end device requires a unique address to deliver a packet to that host. In IPv4 addresses, we assign the values between the network address and the broadcast address to the devices in that network. </p><p><b>Roll over the HOST ADDRESS tab in the figure.</b></p></content-text>
</page>
<page type="OneColumn" id="en0606020102">
<content-media type="InteractiveGraphicRollovers" id="cm5086154408"><title><content-text></content-text></title><media ref="en0606000000/en0606020000/en0606020100/en0606020102/cm5086154408.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606020000/en0606020100/en0606020102/cm5086154408text.xml"/></content-media>

<content-text><p><b>Network Prefixes</b></p><p>An important question is: How do we know how many bits represent the network portion and how many bits represent the host portion? When we express an IPv4 network address, we add a prefix length to the network address. <b>The prefix length is the number of bits in the address that gives us the network portion.</b> For example, in 172.16.4.0 /24, the <b>/24</b> is the prefix length - it tells us that the first 24 bits are the network address. This leaves the remaining 8 bits, the last octet, as the host portion. Later in this chapter, we will learn more about another entity that is used to specify the network portion of an IPv4 address to the network devices. It is called the subnet mask. The subnet mask consists of 32 bits, just as the address does, and uses 1s and 0s to indicate which bits of the address are network bits and which bits are hosts bits.</p><p>Networks are not always assigned a /24 prefix. Depending on the number of hosts on the network, the prefix assigned may be different. Having a different prefix number changes the host range and broadcast address for each network.</p><p><b>Roll over the addresses in the figure to view the results of using different prefixes on an address.</b></p><p>Notice that the network address could remain the same, but the host range and the broadcast address are different for the different prefix lengths. In this figure you can also see that the number of hosts that can be addressed on the network changes as well.</p><p> </p></content-text>
</page>
</topic>
<topic type="" id="en0606020200"><title><content-text>Calculating Network, Hosts and Broadcast Addresses</content-text></title>
<page type="OneColumn" id="en0606020201">
<content-media type="StaticGraphic" id="cm3532361781"><title><content-text></content-text></title><media ref="en0606000000/en0606020000/en0606020200/en0606020201/cm3532361781.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606020000/en0606020200/en0606020201/cm3532361781text.xml"/></content-media>

<content-text><p>At this point, you may be wondering: How do we calculate these addresses? This calculation process requires us to look at these addresses in binary. </p><p>In the example network divisions, we need to look at the octet of the address where the prefix divides the network portion from the host portion. In all of these examples, it is the last octet. While this is common, the prefix can also divide any of the octets. </p><p>To get started understanding this process of determining the address assignments, let's break some examples down into binary. </p><p><b>See the figure for an example of the address assignment for the 172.16.20.0 /25 network</b>.</p><p>In the first box, we see the representation of the network address. With a 25 bit prefix, the last 7 bits are host bits. To represent the network address, all of these host bits are '0'. This makes the last octet of the address 0. This makes the network address 172.16.20.0 /25.</p><p>In the second box, we see the calculation of the lowest host address. This is always one greater than the network address. In this case, the last of the seven host bits becomes a '1'. With the lowest bit of host address set to a 1, the lowest host address is 172.16.20.1.</p><p>The third box shows the calculation of the broadcast address of the network. Therefore, all seven host bits used in this network are all '1s'. From the calculation, we get 127 in the last octet. This gives us a broadcast address of 172.16.20.127.</p><p>The fourth box presents the calculation of the highest host address. The highest host address for a network is always one less than the broadcast. This means the lowest host bit is a '0 and all other host bits as "1s". As seen, this makes the highest host address in this network 172.16.20.126.</p><p>Although for this example we expanded all of the octets, we only need to examine the content of the divided octet.</p></content-text>
</page>
<page type="OneColumn" id="en0606020202">
<content-media type="AnimationPartialScreen" id="cm1910941697"><title><content-text></content-text></title><media ref="en0606000000/en0606020000/en0606020200/en0606020202/cm1910941697.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606020000/en0606020200/en0606020202/cm1910941697text.xml"/></content-media>

<content-text><p><b>Flash Practice Activity</b></p><p>In the activity in the figure, you will calculate the network address, host addresses, and broadcast address for given networks. Practice as much as necessary. We recommend that you work with this tool until you are able to do the conversion without error. </p></content-text>
</page>
</topic>
<topic type="" id="en0606020300"><title><content-text>Unicast, Broadcast, Multicast - Types of Communication</content-text></title>
<page type="OneColumn" id="en0606020301">
<content-media type="AnimationPartialScreen" id="cm9419589940"><title><content-text></content-text></title><media ref="en0606000000/en0606020000/en0606020300/en0606020301/cm9419589940.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606020000/en0606020300/en0606020301/cm9419589940text.xml"/></content-media>

<content-text><p>In an IPv4 network, the hosts can communicate one of three different ways:</p><p><b>Unicast</b> - the process of sending a packet from one host to an individual host</p><p><b>Broadcast</b> - the process of sending a packet from one host to all hosts in the network</p><p><b>Multicast</b> - the process of sending a packet from one host to a selected group of hosts</p><p>These three types of communication are used for different purposes in the data networks. In all three cases, the IPv4 address of the originating host is placed in the packet header as the source address. </p><p><b>Unicast Traffic</b></p><p>Unicast communication is used for the normal host-to-host communication in both a client/server and a peer-to-peer network. Unicast packets use the host address of the destination device as the destination address and can be routed through an internetwork. Broadcast and multicast, however, use special addresses as the destination address. Using these special addresses, broadcasts are generally restricted to the local network. The <content-link target="cg8185848451" type="glossary">scope</content-link> of multicast traffic also may be limited to the local network or routed through an internetwork.</p><p><b>Play the animation to see an example of unicast transmission.</b></p><p>In an IPv4 network, the unicast address applied to an end device is referred to as the host address. For unicast communication, the host addresses assigned to the two end devices are used as the source and destination IPv4 addresses. During the encapsulation process, the source host places its IPv4 address in the unicast packet header as the source host address and the IPv4 address of the destination host in the packet header as the destination address. The communication using a unicast packet can be forwarded through an internetwork using the same addresses.</p><p><b>Note: </b>In this course, all communications between devices is unicast communication unless otherwise noted. </p></content-text>
</page>
<page type="OneColumn" id="en0606020302">
<content-media type="AnimationPartialScreen" id="cm6341358330"><title><content-text></content-text></title><media ref="en0606000000/en0606020000/en0606020300/en0606020302/cm6341358330.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606020000/en0606020300/en0606020302/cm6341358330text.xml"/></content-media>

<content-text><p><b>Broadcast Transmission</b></p><p>Because broadcast traffic is used to send packets to all hosts in the network, a packet uses a special broadcast address. When a host receives a packet with the broadcast address as the destination, it processes the packet as it would a packet to its unicast address. </p><p>Broadcast transmission is used for the location of special services/devices for which the address is not known or when a host needs to provide information to all the hosts on the network. </p><p>Some examples for using broadcast transmission are:</p><ul><li>          Mapping upper layer addresses to lower layer addresses</li>  <li>          Requesting an address</li>  <li>          Exchanging routing information by routing protocols</li></ul>    <p>When a host needs information, the host sends a request, called a query, to the broadcast address. All hosts in the network receive and process this query. One or more of the hosts with the requested information will respond, typically using unicast. </p><p>Similarly, when a host needs to send information to the hosts on a network, it creates and sends a broadcast packet with the information.</p><p>Unlike unicast, where the packets can be routed throughout the internetwork, broadcast packets are usually restricted to the local network. This restriction is dependent on the configuration of the router that borders the network and the type of broadcast. There are two types of broadcasts: <content-link target="cg6038965512" type="glossary">directed broadcast</content-link> and limited broadcast.</p><p> </p><p><b>Directed Broadcast</b></p><p><b>A directed broadcast is sent to all hosts on a specific network.</b> This type of broadcast is useful for sending a broadcast to all hosts on a non-local network. For example, for a host outside of the network to communicate with the hosts within the 172.16.4.0 /24 network, the destination address of the packet would be 172.16.4.255. This is shown in the figure. Although routers do not forward directed broadcasts by default, they may be configured to do so.</p><p><b>Limited Broadcast</b> </p><p><b>The <content-link target="cg3937823901" type="glossary">limited broadcast</content-link> is used for communication that is limited to the hosts on the local network.</b> These packets use a destination IPv4 address 255.255.255.255. Routers do not forward this broadcast. Packets addressed to the limited broadcast address will only appear on the local network. For this reason, an IPv4 network is also referred to as a broadcast domain. Routers form the boundary for a broadcast domain. </p><p>As an example, a host within the 172.16.4.0 /24 network would broadcast to all the hosts in its network using a packet with a destination address of 255.255.255.255.</p><p><b>Play the animation to see an example of broadcast transmission.</b></p><p>As you learned earlier, when a packet is broadcast, it uses resources on the network and also forces every host on the network that receives it to process the packet. Therefore, broadcast traffic should be limited so that it does not adversely affect performance of the network or devices. Because routers separate broadcast domains, subdividing networks with excessive broadcast traffic can improve network performance.</p></content-text>
</page>
<page type="OneColumn" id="en0606020303">
<content-media type="AnimationPartialScreen" id="cm2985034510"><title><content-text></content-text></title><media ref="en0606000000/en0606020000/en0606020300/en0606020303/cm2985034510.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606020000/en0606020300/en0606020303/cm2985034510text.xml"/></content-media>

<content-text><p><b>Multicast Transmission</b></p><p>Multicast transmission is designed to conserve the bandwidth of the IPv4 network. It reduces traffic by allowing a host to send a single packet to a selected set of hosts. To reach multiple destination hosts using unicast communication, a source host would need to send an individual packet addressed to each host. With multicast, the source host can send a single packet that can reach thousands of destination hosts.</p><p>Some examples of multicast transmission are:</p><ul><li>          Video and audio broadcasts</li>  <li>          Routing information exchange by routing protocols</li>  <li>          Distribution of software</li>  <li>          News feeds</li></ul>    <p><b>Multicast Clients</b></p><p>Hosts that wish to receive particular multicast data are called multicast clients. The multicast clients use services initiated by a client program to subscribe to the multicast group. </p><p>Each <content-link target="cg6577687736" type="glossary">multicast group</content-link> is represented by a single IPv4 multicast destination address. When an IPv4 host subscribes to a multicast group, the host processes packets addressed to this multicast address as well as packets addressed to its uniquely allocated unicast address. As we will see, IPv4 has set aside a special block of addresses from 224.0.0.0 to 239.255.255.255 for multicast groups addressing.</p><p><b>The animation demonstrates clients accepting multicast packets.</b></p><p> </p></content-text>
</page>
<page type="OneColumn" id="en0606020304">
<content-media type="ActivityPKA" id="cm7984488180"><title><content-text></content-text></title><media ref="en0606000000/en0606020000/en0606020300/en0606020304/cm7984488180/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en0606000000/en0606020000/en0606020300/en0606020304/cm7984488180/icontext.xml"/></content-media>

<content-text><p>In this activity, you will be able to visualize unicasts, broadcasts, and multicasts by using Packet Tracer in simulation mode. </p><p>Broadcast: <content-link target="http://www.ietf.org/rfc/rfc0919.txt?number=919" type="external">http://www.ietf.org/rfc/rfc0919.txt?number=919 </content-link> </p><p>Multicast: <content-link target="http://www.cisco.com/en/US/tech/tk828/technologies_white_paper09186a0080092942.shtml" type="external">http://www.cisco.com/en/US/tech/tk828/technologies_white_paper09186a0080092942.shtml </content-link> <content-link target="http://www.cisco.com/univercd/cc/td/doc/cisintwk/ito_doc/ipmulti.htm#wp1020604" type="external">http://www.cisco.com/univercd/cc/td/doc/cisintwk/ito_doc/ipmulti.htm#wp1020604</content-link>  </p><p><b>Click the Packet Tracer icon to launch the Packet Tracer activity.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0606020400"><title><content-text>Reserved IPv4 Address Ranges</content-text></title>
<page type="OneColumn" id="en0606020401">
<content-media type="StaticGraphic" id="cm6441792629"><title><content-text></content-text></title><media ref="en0606000000/en0606020000/en0606020400/en0606020401/cm6441792629.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606020000/en0606020400/en0606020401/cm6441792629text.xml"/></content-media>

<content-text><p>Expressed in dotted decimal format, the IPv4 address range is 0.0.0.0 to 255.255.255.255. As you have already seen, not all of these addresses can be used as host addresses for unicast communication. </p><p><b>Experimental Addresses</b></p><p>One major block of addresses reserved for special purposes is the IPv4 experimental address range 240.0.0.0 to 255.255.255.254. Currently, these addresses are listed as <i>reserved for future use</i> (RFC 3330). This suggests that they could be converted to usable addresses. Currently, they cannot be used in IPv4 networks. However, these addresses could be used for research or experimentation. </p><p><b>Multicast Addresses</b></p><p>As previously shown, another major block of addresses reserved for special purposes is the IPv4 multicast address range 224.0.0.0 to 239.255.255.255. Additionally, the multicast address range is subdivided into different types of addresses: <content-link target="cg5478244055" type="glossary">reserved link local addresses</content-link> and globally scoped addresses, as shown in the graphic. One additional type of multicast address is the <content-link target="cg1406145657" type="glossary">administratively scoped addresses</content-link>, also called <content-link target="cg6318748466" type="glossary">limited scope addresses</content-link>.</p><p>The IPv4 multicast addresses 224.0.0.0 to 224.0.0.255 are reserved link local addresses. These addresses are to be used for multicast groups on a local network. Packets to these destinations are always transmitted with a time-to-live (TTL) value of 1. Therefore, a router connected to the local network should never forward them. A typical use of reserved <content-link target="cg1826790546" type="glossary">link-local addresses</content-link> is in routing protocols using multicast transmission to exchange routing information.</p><p>The <content-link target="cg1136746736" type="glossary">globally scoped addresses</content-link> are 224.0.1.0 to 238.255.255.255. They may be used to multicast data across the Internet. For example, 224.0.1.1 has been reserved for <content-link target="cg4584765934" type="glossary">Network Time Protocol (NTP)</content-link> to synchronize the time-of-day clocks of network devices. </p><p><b>Host Addresses</b></p><p>After accounting for the ranges reserved for experimental addresses and multicast addresses, this leaves an address range of 0.0.0.0 to 223.255.255.255 that could be used for IPv4 hosts. However, within this range are many addresses that are already reserved for special purposes. Although we have previously covered some of these addresses, the major reserved addresses are discussed in the next section.</p></content-text>
</page>
</topic>
<topic type="" id="en0606020500"><title><content-text>Public and Private Addresses</content-text></title>
<page type="OneColumn" id="en0606020501">
<content-media type="AnimationPartialScreen" id="cm4701142015"><title><content-text></content-text></title><media ref="en0606000000/en0606020000/en0606020500/en0606020501/cm4701142015.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606020000/en0606020500/en0606020501/cm4701142015text.xml"/></content-media>

<content-text><p>Although most IPv4 host addresses are <content-link target="cg7855411468" type="glossary">public addresses</content-link> designated for use in networks that are accessible on the Internet, there are blocks of addresses that are used in networks that require limited or no Internet access. These addresses are called private addresses.</p><p><b>Private Addresses</b></p><p>The private address blocks are:</p><p>10.0.0.0 to 10.255.255.255 (10.0.0.0 /8)</p><p>172.16.0.0 to 172.31.255.255 (172.16.0.0 /12)</p><p>192.168.0.0 to 192.168.255.255 (192.168.0.0 /16)</p><p>Private space address blocks, as shown in the figure, are set aside for use in private networks. The use of these addresses need not be unique among outside networks. <b>Hosts that do not require access to the Internet at large may make unrestricted use of private addresses.</b> However, the internal networks still must design network address schemes to ensure that the hosts in the private networks use IP addresses that are unique within their networking environment.</p><p>Many hosts in different networks may use the same private space addresses. Packets using these addresses as the source or destination should not appear on the public Internet. The router or firewall device at the perimeter of these private networks must block or translate these addresses. Even if these packets were to make their way to the Internet, the routers would not have routes to forward them to the appropriate private network.</p><p><b>Network Address Translation (NAT)</b></p><p>With services to translate <content-link target="cg5653505296" type="glossary">private addresses</content-link> to public addresses, hosts on a privately addressed network can have access to resources across the Internet. These services, called <content-link target="cg2959898231" type="glossary">Network Address Translation (NAT)</content-link>, can be implemented on a device at the edge of the private network. </p><p>NAT allows the hosts in the network to "borrow" a public address for communicating to outside networks. While there are some limitations and performance issues with NAT, clients for most applications can access services over the Internet without noticeable problems. </p><p><b>Note: </b>NAT will be covered in detail in a subsequent course.</p><p><b>Public Addresses</b></p><p>The vast majority of the addresses in the IPv4 unicast host range are public addresses. These addresses are designed to be used in the hosts that are publicly accessible from the Internet. Even within these address blocks, there are many addresses that are designated for other special purposes.</p></content-text>
</page>
<page type="FullScreen" id="en0606020502">
<content-media type="ActivityDnDSnapback" id="cm5713187416"><title><content-text></content-text></title><media ref="en0606000000/en0606020000/en0606020500/en0606020502/cm5713187416.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606020000/en0606020500/en0606020502/cm5713187416text.xml"/></content-media>

<content-text></content-text>
</page>
</topic>
<topic type="" id="en0606020600"><title><content-text>Special IPv4 Addresses</content-text></title>
<page type="OneColumn" id="en0606020601">
<content-media type="StaticGraphic" id="cm4349665033"><title><content-text></content-text></title><media ref="en0606000000/en0606020000/en0606020600/en0606020601/cm4349665033.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606020000/en0606020600/en0606020601/cm4349665033text.xml"/></content-media>

<content-text><p>There are certain addresses that cannot be assigned to hosts for various reasons. There are also special addresses that can be assigned to hosts but with restrictions on how those hosts can interact within the network.</p><p><b>Network and Broadcast Addresses</b></p><p>As explained earlier, within each network the first and last addresses cannot be assigned to hosts. These are the network address and the broadcast address, respectively.</p><p><b>Default Route</b></p><p>Also presented earlier, we represent the IPv4 default route as 0.0.0.0. The default route is used as a "catch all" route when a more specific route is not available. The use of this address also reserves all addresses in the 0.0.0.0 - 0.255.255.255 (0.0.0.0 /8) address block. </p><p><b>Loopback</b></p><p>One such reserved address is the IPv4 loopback address 127.0.0.1. <b>The loopback is a special address that hosts use to direct traffic to themselves.</b> The loopback address creates a shortcut method for TCP/IP applications and services that run on the same device to communicate with one another. By using the loopback address instead of the assigned IPv4 host address, two services on the same host can bypass the lower layers of the TCP/IP stack. You can also ping the loopback address to test the configuration of TCP/IP on the local host. </p><p>Although only the single 127.0.0.1 address is used, addresses 127.0.0.0 to 127.255.255.255 are reserved. Any address within this block will <content-link target="cg6564205451" type="glossary">loop back</content-link> within the local host. No address within this block should ever appear on any network.</p><p><b>Link-Local Addresses</b></p><p>IPv4 addresses in the address block 169.254.0.0 to 169.254.255.255 (169.254.0.0 /16) are designated as link-local addresses. <b>These addresses can be automatically assigned to the local host by the operating system in environments where no IP configuration is available.</b> These might be used in a small peer-to-peer network or for a host that could not automatically obtain an address from a Dynamic Host Configuration Protocol (DHCP) server.</p><p>Communication using IPv4 link-local addresses is only suitable for communication with other devices connected to the same network, as shown in the figure. A host <i>must not</i> send a packet with an IPv4 link-local destination address to any router for forwarding and should set the IPv4 TTL for these packets to 1. </p><p>Link-local addresses do not provide services outside of the local network. However, many client/server and peer-to-peer applications will work properly with IPv4 link-local addresses. </p><p><b>TEST-NET Addresses</b></p><p>The address block 192.0.2.0 to 192.0.2.255 (192.0.2.0 /24) is set aside for teaching and learning purposes. These addresses can be used in documentation and network examples. <b>Unlike the experimental addresses, network devices <i>will</i> accept these addresses in their configurations.</b> You may often find these addresses used with the domain names example.com or example.net in RFCs, vendor, and protocol documentation. Addresses within this block should not appear on the Internet. </p><p><b>Links:</b></p><p>Local-Link addresses <content-link target="http://www.ietf.org/rfc/rfc3927.txt?number=3927" type="external">http://www.ietf.org/rfc/rfc3927.txt?number=3927 </content-link> </p><p>Special-Use IPv4 Addresses <content-link target="http://www.ietf.org/rfc/rfc3330.txt?number=3330" type="external">http://www.ietf.org/rfc/rfc3330.txt?number=3330 </content-link> </p><p>Multicast allocation: <content-link target="http://www.iana.org/assignments/multicast-addresses" type="external">http://www.iana.org/assignments/multicast-addresses </content-link> </p></content-text>
</page>
</topic>
<topic type="" id="en0606020700"><title><content-text>Legacy IPv4 Addressing</content-text></title>
<page type="OneColumn" id="en0606020701">
<content-media type="StaticGraphic" id="cm6521601558"><title><content-text></content-text></title><media ref="en0606000000/en0606020000/en0606020700/en0606020701/cm6521601558.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606020000/en0606020700/en0606020701/cm6521601558text.xml"/></content-media>

<content-text><p><b>Historic Network Classes</b></p><p>Historically, RFC1700 grouped the unicast ranges into specific sizes called class A, class B, and class C addresses. It also defined class D (multicast) and class E (experimental) addresses, as previously presented. </p><p>The unicast address classes A, B, and C defined specifically-sized networks as well as specific address blocks for these networks, as shown in the figure. A company or organization was assigned an entire class A, class B, or class C address block. This use of address space is referred to as <i>classful addressing</i>. </p><p><b>Class A Blocks</b></p><p>A class A address block was designed to support extremely large networks with more than 16 million host addresses. Class A IPv4 addresses used a fixed /8 prefix with the first octet to indicate the network address. The remaining three octets were used for host addresses. </p><p>To reserve address space for the remaining address classes, all class A addresses required that the most significant bit of the high-order octet be a zero. This meant that there were only 128 possible class A networks, 0.0.0.0 /8 to 127.0.0.0 /8, before taking out the reserved address blocks. Even though the class A addresses reserved one-half of the address space, because of their limit of 128 networks, they could only be allocated to approximately 120 companies or organizations. </p><p><b>Class B Blocks</b></p><p>Class B address space was designed to support the needs of moderate to large size networks with more than 65,000 hosts. A class B IP address used the two high-order octets to indicate the network address. The other two octets specified host addresses. As with class A, address space for the remaining address classes needed to be reserved. </p><p>For class B addresses, the most significant two bits of the high-order octet were <b>10</b>. This restricted the address block for class B to 128.0.0.0 /16 to 191.255.0.0 /16. Class B had slightly more efficient allocation of addresses than class A because it equally divided 25% of the total IPv4 address space among approximately 16,000 networks.</p><p><b>Class C Blocks</b></p><p>The class C address space was the most commonly available of the historic address classes. This address space was intended to provide addresses for small networks with a maximum of 254 hosts. </p><p>Class C address blocks used a /24 prefix. This meant that a class C network used only the last octet as host addresses with the three high-order octets used to indicate the network address.</p><p>Class C address blocks set aside address space for class D (multicast) and class E (experimental) by using a fixed value of <b>110</b> for the three most significant bits of the high-order octet. This restricted the address block for class C to 192.0.0.0 /16 to 223.255.255.0 /16. Although it occupied only 12.5% of the total IPv4 address space, it could provide addresses to 2 million networks. </p><p><b>Limits to the Class-based System</b></p><p>Not all organizations' requirements fit well into one of these three classes. <b>Classful allocation of address space often wasted many addresses, which exhausted the availability of IPv4 addresses.</b> For example, a company that had a network with 260 hosts would need to be given a class B address with more than 65,000 addresses. </p><p>Even though this classful system was all but abandoned in the late 1990s, you will see remnants of it in networks today. For example, when you assign an IPv4 address to a computer, the operating system examines the address being assigned to determine if this address is a class A, class B, or class C. The operating system then assumes the prefix used by that class and makes the appropriate subnet mask assignment. </p><p>Another example is the assumption of the mask by some routing protocols. When some routing protocols receive an advertised route, it may assume the prefix length based on the class of the address. </p><p><b>Classless Addressing</b></p><p>The system that we currently use is referred to as <i>classless addressing</i>. With the classless system, address blocks appropriate to the number of hosts are assigned to companies or organizations without regard to the unicast class.</p></content-text>
</page>
</topic>
</section>
<section type="" id="en0606030000"><title><content-text>Assigning Addresses</content-text></title>
<topic type="" id="en0606030100"><title><content-text>Planning to Address the Network</content-text></title>
<page type="OneColumn" id="en0606030101">
<content-media type="InteractiveGraphicRollovers" id="cm1230785834"><title><content-text></content-text></title><media ref="en0606000000/en0606030000/en0606030100/en0606030101/cm1230785834.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606030000/en0606030100/en0606030101/cm1230785834text.xml"/></content-media>

<content-text><p>The allocation of Network layer address space within the corporate network needs to be well designed. Network administrators should not randomly select the addresses used in their networks. Nor should address assignment within the network be random. </p><p>The allocation of these addresses inside the networks should be planned and documented for the purpose of:</p><ul><li>          Preventing duplication of addresses</li>  <li>          Providing and controlling access</li>  <li>          Monitoring security and performance</li></ul>    <p><b>Preventing Duplication of Addresses</b></p><p>As you already know, each host in an internetwork must have a unique address. Without the proper planning and documentation of these network allocations, we could easily assign an address to more than one host. </p><p><b>Providing and Controlling Access</b></p><p>Some hosts provide resources to the internal network as well as to the external network. One example of these devices is servers. Access to these resources can be controlled by the Layer 3 address. If the addresses for these resources are not planned and documented, the security and accessibility of the devices are not easily controlled. For example, if a server has a random address assigned, blocking access to its address is difficult and clients may not be able to locate this resource.</p><p><b>Monitoring Security and Performance </b></p><p>Similarly, we need to monitor the security and performance of the network hosts and the network as a whole. As part of the monitoring process, we examine network traffic looking for addresses that are generating or receiving excessive packets. If we have proper planning and documentation of the network addressing, we can identify the device on the network that has a problematic address. </p><p><b>Assigning Addresses within a Network</b></p><p>As you have already learned, hosts are associated with an IPv4 network by a common network portion of the address. Within a network, there are different types of hosts. </p><p>Some examples of different types of hosts are:</p><ul><li>          End devices for users</li>  <li>          Servers and peripherals </li>  <li>          Hosts that are accessible from the Internet</li>  <li>          Intermediary devices</li></ul>    <p>Each of these different device types should be allocated to a logical block of addresses <i>within</i> the address range of the network.</p><p><b>Roll over the tabs to see different classifications of assigning addresses.</b></p></content-text>
</page>
<page type="OneColumn" id="en0606030102">
<content-media type="InteractiveGraphicRollovers" id="cm7362048017"><title><content-text></content-text></title><media ref="en0606000000/en0606030000/en0606030100/en0606030102/cm7362048017.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606030000/en0606030100/en0606030102/cm7362048017text.xml"/></content-media>

<content-text><p>An important part of planning an IPv4 addressing scheme is deciding when private addresses are to be used and where they are to be applied.</p><p>Considerations include:</p><ul><li>          Will there be more devices connected to the network than public addresses allocated by the network's ISP?</li>  <li>          Will the devices need to be accessed from outside the local network?</li>  <li>          If devices that may be assigned private addresses require access to the Internet, is the network capable of providing a Network Address Translation (NAT) service?</li></ul>    <p><b>Roll over the tabs in the figure to see private and public address assignments.</b></p><p> </p><p>If there are more devices than available public addresses, only those devices that will directly access the Internet - such as web servers - require a public address. A NAT service would allow those devices with private addresses to effectively share the remaining public addresses.</p></content-text>
</page>
</topic>
<topic type="" id="en0606030200"><title><content-text>Static or Dynamic Addressing for End User Devices</content-text></title>
<page type="OneColumn" id="en0606030201">
<content-media type="StaticGraphic" id="cm2490901565"><title><content-text></content-text></title><media ref="en0606000000/en0606030000/en0606030200/en0606030201/cm2490901565.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606030000/en0606030200/en0606030201/cm2490901565text.xml"/></content-media>

<content-text><p><b>Addresses for User Devices</b></p><p>In most data networks, the largest population of hosts includes the end devices such as PCs, IP phones, printers, and PDAs. Because this population represents the largest number of devices within a network, the largest number of addresses should be allocated to these hosts. </p><p>IP addresses can be assigned either statically or dynamically. </p><p><b>Static Assignment of Addresses</b></p><p>With a static assignment, the network administrator must manually configure the network information for a host, as shown in the figure. At a minimum, this includes entering the host IP address, subnet mask, and default gateway. </p><p>Static addresses have some advantages over dynamic addresses. For instance, they are useful for printers, servers, and other networking devices that need to be accessible to clients on the network. If hosts normally access a server at a particular IP address, it would cause problems if that address changed. Additionally, static assignment of addressing information can provide increased control of network resources. However, it can be time-consuming to enter the information on each host. </p><p>When using static IP addressing, it is necessary to maintain an accurate list of the IP address assigned to each device. These are permanent addresses and are not normally reused.</p></content-text>
</page>
<page type="OneColumn" id="en0606030202">
<content-media type="InteractiveGraphicRollovers" id="cm2587501913"><title><content-text></content-text></title><media ref="en0606000000/en0606030000/en0606030200/en0606030202/cm2587501913.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606030000/en0606030200/en0606030202/cm2587501913text.xml"/></content-media>

<content-text><p><b>Dynamic Assignment of Addresses</b></p><p>Because of the challenges associated with static address management, end user devices often have addresses dynamically assigned, using Dynamic Host Configuration Protocol (DHCP), as shown in the figure.</p><p>DHCP enables the automatic assignment of addressing information such as IP address, subnet mask, default gateway, and other configuration information. The configuration of the DHCP server requires that a block of addresses, called an <i>address pool</i>, be defined to be assigned to the DHCP clients on a network. Addresses assigned to this pool should be planned so that they exclude any addresses used for the other types of devices. </p><p>DHCP is generally the preferred method of assigning IP addresses to hosts on large networks because it reduces the burden on network support staff and virtually eliminates entry errors. </p><p>Another benefit of DHCP is that an address is not permanently assigned to a host but is only "leased" for a period of time. If the host is powered down or taken off the network, the address is returned to the pool for reuse. This feature is especially helpful for mobile users that come and go on a network.</p></content-text>
</page>
</topic>
<topic type="" id="en0606030300"><title><content-text>Assigning Addresses to Other Devices</content-text></title>
<page type="OneColumn" id="en0606030301">
<content-media type="StaticGraphic" id="cm9261960039"><title><content-text></content-text></title><media ref="en0606000000/en0606030000/en0606030300/en0606030301/cm9261960039.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606030000/en0606030300/en0606030301/cm9261960039text.xml"/></content-media>

<content-text><p><b>Addresses for Servers and Peripherals </b></p><p>Any network resource such as a server or a printer should have a static IPv4 address, as shown in the figure. The client hosts access these resources using the IPv4 addresses of these devices. Therefore, predictable addresses for each these servers and peripherals are necessary. </p><p>Servers and peripherals are a concentration point for network traffic. There are many packets sent to and from the IPv4 addresses of these devices. When monitoring network traffic with a tool like Wireshark, a network administrator should be able to rapidly identify these devices. Using a consistent numbering system for these devices makes the identification easier. </p><p><b>Addresses for Hosts that are Accessible from Internet</b></p><p>In most internetworks, only a few devices are accessible by hosts outside of the corporation. For the most part, these devices are usually servers of some type. As with all devices in a network that provide network resources, the IPv4 addresses for these devices should be static. </p><p>In the case of servers accessible by the Internet, each of these must have a public space address associated with it. Additionally, variations in the address of one of these devices will make this device inaccessible from the Internet. In many cases, these devices are on a network that is numbered using private addresses. This means that the router or firewall at the perimeter of the network must be configured to translate the internal address of the server into a public address. Because of this additional configuration in the perimeter intermediary device, it is even more important that these devices have a predictable address. </p><p><b>Addresses for Intermediary Devices</b></p><p>Intermediary devices are also a concentration point for network traffic. <b>Almost all traffic within or between networks passes through some form of intermediary device.</b> Therefore, these network devices provide an opportune location for network management, monitoring, and security. </p><p>Most intermediary devices are assigned Layer 3 addresses. either for the device management or for their operation. Devices such as hubs, switches, and wireless access points do not require IPv4 addresses to operate as intermediary devices. However, if we need to access these devices as hosts to configure, monitor, or troubleshoot network operation, they need to have addresses assigned. </p><p>Because we need to know how to communicate with intermediary devices, they should have predictable addresses. Therefore, their addresses are typically assigned manually. Additionally, the addresses of these devices should be in a different range within the network block than user device addresses. </p><p><b>Routers and Firewalls</b></p><p>Unlike the other intermediary devices mentioned, routers and firewall devices have an IPv4 address assigned to each interface. Each interface is in a different network and serves as the gateway for the hosts in that network. Typically, the router interface uses either the lowest or highest address in the network. This assignment should be uniform across all networks in the corporation so that network personnel will always know the gateway of the network no matter which network they are working on. </p><p>Router and firewall interfaces are the concentration point for traffic entering and leaving the network. Because the hosts in each network use a router or firewall device interface as the gateway out of the network, many packets flow through these interfaces. Therefore, these devices can play a major role in network security by filtering packets based on source and/or destination IPv4 addresses. Grouping the different types of devices into logical addressing groups makes the assignment and operation of this packet filtering more efficient.</p></content-text>
</page>
</topic>
<topic type="" id="en0606030400"><title><content-text>Who Assigns the Different Addresses?</content-text></title>
<page type="OneColumn" id="en0606030401">
<content-media type="StaticGraphic" id="cm6335657887"><title><content-text></content-text></title><media ref="en0606000000/en0606030000/en0606030400/en0606030401/cm6335657887.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606030000/en0606030400/en0606030401/cm6335657887text.xml"/></content-media>

<content-text><p>A company or organization that wishes to have network hosts accessible from the Internet must have a block of public addresses assigned. The use of these public addresses is regulated and the company or organization must have a block of addresses allocated to it. This is true for IPv4, IPv6, and multicast addresses. </p><p><b>Internet Assigned Numbers Authority (IANA) </b>( <content-link target="http://www.iana.net" type="external">http://www.iana.net</content-link>  ) is the master holder of the IP addresses. The IP multicast addresses and the IPv6 addresses are obtained directly from IANA. Until the mid-1990s, all IPv4 address space was managed directly by the IANA. At that time, the remaining IPv4 address space was allocated to various other registries to manage for particular purposes or for regional areas. These registration companies are called Regional Internet Registries (RIRs), as shown in the figure.</p><p>The major registries are:</p><ul><li>          AfriNIC (African Network Information Centre) - Africa Region <content-link target="http://www.afrinic.net" type="external">http://www.afrinic.net</content-link> </li>  <li>          APNIC (Asia Pacific Network Information Centre) - Asia/Pacific Region <content-link target="http://www.apnic.net" type="external">http://www.apnic.net</content-link> </li>  <li>          ARIN (American Registry for Internet Numbers) - North America Region <content-link target="http://www.arin.net" type="external">http://www.arin.net</content-link> </li>  <li>          LACNIC (Regional Latin-American and Caribbean IP Address Registry) - Latin America and some Caribbean Islands <content-link target="http://www.lacnic.net" type="external">http://www.lacnic.net</content-link> </li>  <li>          RIPE NCC (Reseaux IP Europeans) - Europe, the Middle East, and Central Asia <content-link target="http://www.ripe.net" type="external">http://www.ripe.net</content-link>  </li></ul>    <p>Links:</p><p>IPv4 address registries allocations:</p><p><content-link target="http://www.ietf.org/rfc/rfc1466.txt?number=1466" type="external">http://www.ietf.org/rfc/rfc1466.txt?number=1466 </content-link> </p><p><content-link target="http://www.ietf.org/rfc/rfc2050.txt?number=2050" type="external">http://www.ietf.org/rfc/rfc2050.txt?number=2050 </content-link> </p><p>IPV4 Addresses allocation: <content-link target="http://www.iana.org/ipaddress/ip-addresses.htm" type="external">http://www.iana.org/ipaddress/ip-addresses.htm </content-link> </p><p>IP Addressing lookup: <content-link target="http://www.arin.net/whois/" type="external">http://www.arin.net/whois/ </content-link> </p></content-text>
</page>
</topic>
<topic type="" id="en0606030500"><title><content-text>ISPs</content-text></title>
<page type="OneColumn" id="en0606030501">
<content-media type="StaticGraphic" id="cm2763147729"><title><content-text></content-text></title><media ref="en0606000000/en0606030000/en0606030500/en0606030501/cm2763147729.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606030000/en0606030500/en0606030501/cm2763147729text.xml"/></content-media>

<content-text><p><b>The Role of the ISP</b></p><p>Most companies or organizations obtain their IPv4 address blocks from an ISP. An ISP will generally supply a small number of usable IPv4 addresses (6 or 14) to their customers as a part of their services. Larger blocks of addresses can be obtained based on justification of needs and for additional service costs. </p><p>In a sense, the ISP loans or rents these addresses to the organization. If we choose to move our Internet connectivity to another ISP, the new ISP will provide us with addresses from the address blocks that have been provided to them, and our previous ISP returns the blocks loaned to us to their allocation to be loaned to another customer. </p><p><b>ISP Services</b></p><p>To get access to the services of the Internet, we have to connect our data network to the Internet using an Internet Service Provider (ISP). </p><p>ISPs have their own set of internal data networks to manage Internet connectivity and to provide related services. Among the other services that an ISP generally provides to its customers are DNS services, e-mail services, and a website. Depending on the level of service required and available, customers use different tiers of an ISP.</p><p><b>ISP Tiers</b></p><p>ISPs are designated by a hierarchy based on their level of connectivity to the Internet backbone. Each lower tier obtains connectivity to the backbone via a connection to a higher tier ISP, as shown in the figure. </p><p><b>Tier 1</b></p><p>At the top of the ISP hierarchy are Tier 1 ISPs. These ISPs are large national or international ISPs that are directly connected to the Internet backbone. The customers of Tier 1 ISPs are either lower-tiered ISPs or large companies and organizations. Because they are at the top of Internet connectivity, they engineer highly reliable connections and services. Among the technologies used to support this reliability are multiple connections to the Internet backbone.</p><p><b>The primary advantages for customers of Tier 1 ISPs are reliability and speed</b>. Because these customers are only one connection away from the Internet, there are fewer opportunities for failures or traffic bottlenecks. The drawback for Tier 1 ISP customers is its high cost. </p><p><b>Tier 2</b></p><p>Tier 2 ISPs acquire their Internet service from Tier 1 ISPs. <b>Tier 2 ISPs generally focus on business customers.</b> Tier 2 ISPs usually offer more services than the other two tiers of ISPs. These tier 2 ISPs tend to have the IT resources to operate their own services such as DNS, e-mail servers, and web servers. Other services that Tier 2 ISPs may offer include website development and maintenance, e-commerce/e-business, and VoIP. </p><p>The primary disadvantage of Tier 2 ISPs, as compared to Tier 1 ISPs, is slower Internet access. Because Tier 2 ISPs are at least one more connection away from the <content-link target="cg3467791471" type="glossary">Internet backbone</content-link>, they also tend to have lower reliability than Tier 1 ISPs. </p><p><b>Tier 3</b></p><p>Tier 3 ISPs purchase their Internet service from Tier 2 ISPs. <b>The focus of these ISPs is the retail and home markets in a specific locale.</b> Tier 3 customers typically do not need many of the services required by Tier 2 customers. Their primary need is connectivity and support. </p><p>These customers often have little or no computer or network expertise. Tier 3 ISPs often bundle Internet connectivity as a part of network and computer service contracts for their customers. While they may have reduced bandwidth and less reliability than Tier 1 and Tier 2 providers, they are often good choices for small to medium size companies.</p></content-text>
</page>
</topic>
<topic type="" id="en0606030600"><title><content-text>Overview of IPv6</content-text></title>
<page type="OneColumn" id="en0606030601">
<content-media type="InteractiveGraphicRollovers" id="cm6398766728"><title><content-text></content-text></title><media ref="en0606000000/en0606030000/en0606030600/en0606030601/cm6398766728.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606030000/en0606030600/en0606030601/cm6398766728text.xml"/></content-media>

<content-text><p>In the early 1990s, the Internet Engineering Task Force (IETF) grew concerned about the exhaustion of the IPv4 network addresses and began to look for a replacement for this protocol. This activity led to the development of what is now known as IPv6. </p><p>Creating expanded addressing capabilities was the initial motivation for developing this new protocol. Other issues were also considered during the development of IPv6, such as:</p><ul><li>          Improved packet handling</li>  <li>          Increased scalability and longevity</li>  <li>          QoS mechanisms</li>  <li>          Integrated security</li></ul>  <p>To provide these features, IPv6 offers:</p><ul><li>          128-bit hierarchical addressing - to expand addressing capabilities</li>  <li>          Header format simplification - to improve packet handling</li>  <li>          Improved support for extensions and options - for increased scalability/longevity and improved packet handling</li>  <li>          Flow labeling capability - as QoS mechanisms</li>  <li>          Authentication and privacy capabilities - to integrate security</li></ul>    <p><b>IPv6 is not merely a new Layer 3 protocol - it is a new protocol suite.</b> New protocols at various layers of the stack have been developed to support this new protocol. There is a new messaging protocol (ICMPv6) and new routing protocols. Because of the increased size of the IPv6 header, it also impacts the underlying network infrastructure. </p><p><b>Transition to IPv6</b></p><p>As you can see from this brief introduction, IPv6 has been designed with scalability to allow for years of internetwork growth. However, IPv6 is being implemented slowly and in select networks. Because of better tools, technologies, and address management in the last few years, IPv4 is is still very widely used, and likely to remain so for some time into the future. However, IPv6 may eventually replace IPv4 as the dominant Internet protocol. </p><p>Links:</p><p>IPv6: <content-link target="http://www.ietf.org/rfc/rfc2460.txt?number=2460" type="external">http://www.ietf.org/rfc/rfc2460.txt?number=2460 </content-link> </p><p>IPv6 addressing: <content-link target="http://www.ietf.org/rfc/rfc3513.txt?number=3513" type="external">http://www.ietf.org/rfc/rfc3513.txt?number=3513 </content-link> </p><p>IPv6 security: <content-link target="http://www.ietf.org/rfc/rfc2401.txt?number=2401" type="external">http://www.ietf.org/rfc/rfc2401.txt?number=2401 </content-link> </p><p>IPv6 security: <content-link target="http://www.ietf.org/rfc/rfc3168.txt?number=3168" type="external">http://www.ietf.org/rfc/rfc3168.txt?number=3168 </content-link> </p><p>IPv6 security: <content-link target="http://www.ietf.org/rfc/rfc4302.txt?number=4302" type="external">http://www.ietf.org/rfc/rfc4302.txt?number=4302 </content-link> </p><p>ICMPv6: <content-link target="http://www.ietf.org/rfc/rfc4443.txt?number=4443" type="external">http://www.ietf.org/rfc/rfc4443.txt?number=4443 </content-link> </p></content-text>
</page>
</topic>
</section>
<section type="" id="en0606040000"><title><content-text>Is It On My Network?</content-text></title>
<topic type="" id="en0606040100"><title><content-text>The Subnet Mask - Defining the Network and Host Portions</content-text></title>
<page type="OneColumn" id="en0606040101">
<content-media type="InteractiveGraphicRollovers" id="cm9943817763"><title><content-text></content-text></title><media ref="en0606000000/en0606040000/en0606040100/en0606040101/cm9943817763.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606040000/en0606040100/en0606040101/cm9943817763text.xml"/></content-media>

<content-text><p>As we learned earlier, an IPv4 address has a network portion and a host portion. We referred to the prefix length as the number of bits in the address giving us the network portion. The prefix is a way to define the network portion that is human readable. The data network must also have this network portion of the addresses defined. </p><p>To define the network and host portions of an address, the devices use a separate 32-bit pattern called a subnet mask, as shown in the figure. We express the subnet mask in the same dotted decimal format as the IPv4 address. The subnet mask is created by placing a binary <b>1</b> in each bit position that represents the network portion and placing a binary <b>0</b> in each bit position that represents the host portion. </p><p><b>The prefix and the subnet mask are different ways of representing the same thing - the network portion of an address. </b></p><p>As shown in the figure, a<b> /24</b> prefix is expressed as a subnet mask as <b>255.255.255.0</b> (<b>11111111.11111111.11111111.00000000</b>). The remaining bits (low order) of the subnet mask are zeroes, indicating the host address within the network.</p><p>The subnet mask is configured on a host in conjunction with the IPv4 address to define the network portion of that address. </p><p>For example, let's look at the host 172.16.4.35/27:</p><p><b>address </b></p><p><b>172.16.20.35 </b></p><p><b>10101100.00010000.00010100.00100011</b></p><p> </p><p><b>subnet mask  </b></p><p><b>255.255.255.224  </b></p><p><b>11111111.11111111.11111111.11100000</b></p><p> </p><p><b>network address </b></p><p><b>172.16.20.32 </b></p><p><b>10101100.00010000.00010100.00100000</b> </p><p> </p><p>Because the high order bits of the subnet masks are contiguous <b>1</b>s, there are only a limited number of subnet values within an octet. You will recall that we only need to expand an octet if the network and host division falls within that octet. Therefore, there are a limited number 8 bit patterns used in address masks. </p><p>These patterns are:</p><p><b>00000000 = 0</b></p><p><b>10000000 = 128</b></p><p><b>11000000 = 192</b></p><p><b>11100000 = 224</b></p><p><b>11110000 = 240</b></p><p><b>11111000 = 248</b></p><p><b>11111100 = 252</b></p><p><b>11111110 = 254</b></p><p><b>11111111 = 255</b></p><p>If the subnet mask for an octet is represented by <b>255</b>, then all the equivalent bits in that octet of the address are network bits. Similarly, if the subnet mask for an octet is represented by <b>0</b>, then all the equivalent bits in that octet of the address are host bits. In each of these cases, it is not necessary to expand this octet to binary to determine the network and host portions.</p></content-text>
</page>
</topic>
<topic type="" id="en0606040200"><title><content-text>ANDing - What Is In Our Network?</content-text></title>
<page type="OneColumn" id="en0606040201">
<content-media type="InteractiveGraphicRollovers" id="cm6418170729"><title><content-text></content-text></title><media ref="en0606000000/en0606040000/en0606040200/en0606040201/cm6418170729.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606040000/en0606040200/en0606040201/cm6418170729text.xml"/></content-media>

<content-text><p>Inside data network devices, digital logic is applied for their interpretation of the addresses. When an IPv4 packet is created or forwarded, the destination network address must be extracted from the destination address. This is done by a logic called AND. </p><p>The IPv4 host address is logically ANDed with its subnet mask to determine the network address to which the host is associated. When this ANDing between the address and the subnet mask is performed, the result yields the network address. </p><p><b>The <content-link target="cg6557364721" type="glossary">AND</content-link> Operation</b></p><p>ANDing is one of three basic binary operations used in digital logic. The other two are OR and NOT. While all three are used in data networks, AND is used in determining the network address. Therefore, our discussion here will be limited to logical AND. Logical AND is the comparison of two bits that yields the following results:</p><p>1 AND 1 = 1</p><p>1 AND 0 = 0</p><p>0 AND 1 = 0</p><p>0 AND 0 = 0</p><p>The result from anything ANDed with a <b>1</b> yields a result that is the original bit. That is, <b>0 AND 1 </b>is<b> 0</b> and <b>1 AND 1 </b>is<b> 1</b>. Consequently, anything ANDed with a <b>0</b> yields a <b>0</b>.These properties of ANDing are used with the subnet mask to "mask" the host bits of an IPv4 address. Each bit of the address is ANDed with the corresponding bit of the subnet mask. </p><p>Because all the bits of the subnet mask that represent host bits are 0s, the host portion of the resulting network address becomes all 0s. Recall that an IPv4 address with all 0s in the host portion represents the network address. </p><p>Likewise, all the bits of the subnet mask that indicate network portion are <b>1</b>s. When each of these <b>1</b>s is ANDed with the corresponding bit of the address, the resulting bits are identical to the original address bits.</p><p><b>Roll over the tabs in the figure to see the AND operation.</b></p><p><b>Reasons to Use AND</b></p><p>This ANDing between the host address and subnet mask is performed by devices in a data network for various reasons. </p><p><b>Routers use ANDing to determine an acceptable route for an incoming packet.</b> The router checks the destination address and attempts to associate this address with a next hop. As a packet arrives at a router, the router performs ANDing on the IP destination address in the incoming packet and with the subnet mask of potential routes. This yields a network address that is compared to the route from the routing table whose subnet mask was used. </p><p><b>An originating host must determine if a packet should be sent directly to a host in the local network or be directed to the gateway.</b> To make this determination, a host must first know its own network address. </p><p>A host extracts its network address by ANDing its address with its subnet mask. A logical AND is also performed by an originating host between the destination address of the packet and the subnet mask of the this host. This yields the network address of the destination. If this network address matches the network address of the local host, the packet is sent directly to the destination host. If the two network addresses do not match, the packet is sent to the gateway. </p><p><b>The Importance of AND</b></p><p>If the routers and end devices calculate these processes without our intervention, why do we need to learn how to AND? The more we understand and are able to predict about the operation of a network, the more equipped we are to design and/or administer one. </p><p>In network verification/troubleshooting, we often need to determine what IPv4 network a host is on or if two hosts are on the same IP network. We need to make this determination from the perspective of the network devices. Due to improper configuration, a host may see itself on a network that was not the intended one. This can create an operation that seems erratic unless diagnosed by examining the ANDing processes used by the host. </p><p>Also, a router may have many different routes that can satisfy the forwarding of packet to a given destination. The selection of the route used for any given packet is a complex operation. For example, the prefix forming these routes is not directly associated with the networks assigned to the host. This means that a route in the routing table may represent many networks. If there were issues with routing packets, you would need to determine how the router would make the routing decision. </p><p>Although there are subnet calculators available, it is helpful for a network administrator to know how to manually calculate subnets. </p><p><b>Note: No calculators of any kind are permitted during certification exams.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0606040300"><title><content-text>The ANDing Process</content-text></title>
<page type="OneColumn" id="en0606040301">
<content-media type="InteractiveGraphicRollovers" id="cm9299402018"><title><content-text></content-text></title><media ref="en0606000000/en0606040000/en0606040300/en0606040301/cm9299402018.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606040000/en0606040300/en0606040301/cm9299402018text.xml"/></content-media>

<content-text><p>The AND operation is applied to every bit in the binary address. </p><p><b>Play the animation in the figure to follow the AND steps for one example.</b></p></content-text>
</page>
</topic>
</section>
<section type="" id="en0606050000"><title><content-text>Calculating Addresses</content-text></title>
<topic type="" id="en0606050100"><title><content-text>Basic subnetting</content-text></title>
<page type="OneColumn" id="en0606050101">
<content-media type="StaticGraphic" id="cm5117404081"><title><content-text></content-text></title><media ref="en0606000000/en0606050000/en0606050100/en0606050101/cm5117404081.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606050000/en0606050100/en0606050101/cm5117404081text.xml"/></content-media>

<content-text><p>Subnetting allows for creating multiple logical networks from a single address block. Since we use a router to connect these networks together, each interface on a router must have a unique network ID. Every <content-link target="cg9255104909" type="glossary">node</content-link> on that link is on the same network.</p><p>We create the subnets by using one or more of the host bits as network bits. This is done by extending the mask to borrow some of the bits from the host portion of the address to create additional network bits. The more host bits used, the more subnets that can be defined. For each bit borrowed, we double the number of subnetworks available. For example, if we borrow 1 bit, we can define 2 subnets. If we borrow 2 bits, we can have 4 subnets. However, with each bit we borrow, fewer host addresses are available per subnet.</p><p>RouterA in the figure has two interfaces to interconnect two networks. Given an address block of 192.168.1.0 /24, we will create two subnets. We borrow one bit from the host portion by using a subnet mask of 255.255.255.128, instead of the original 255.255.255.0 mask. The most significant bit in the last octet is used to distinguish between the two subnets. For one of the subnets, this bit is a "0" and for the other subnet this bit is a "1". </p><p><b>Formula for calculating subnets</b></p><p>Use this formula to calculate the number of subnets: </p><p>2^n where n = the number of bits borrowed</p><p>In this example, the calculation looks like this:</p><p>2^1 = 2 subnets</p><p><b>The number of hosts</b></p><p>To calculate the number of hosts per network, we use the formula of 2^n - 2 where n = the number of bits left for hosts.</p><p>Applying this formula, (2^7 - 2 = 126) shows that each of these subnets can have 126 hosts.</p><p>For each subnet, examine the last octet in binary. The values in these octets for the two networks are:</p><p>Subnet 1: <span class="blue">0</span>0000000 = 0</p><p>Subnet 2: <span class="blue">1</span>0000000 = 128</p><p>See the figure for the addressing scheme for these networks.</p></content-text>
</page>
<page type="OneColumn" id="en0606050102">
<content-media type="StaticGraphic" id="cm9228499835"><title><content-text></content-text></title><media ref="en0606000000/en0606050000/en0606050100/en0606050102/cm9228499835.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606050000/en0606050100/en0606050102/cm9228499835text.xml"/></content-media>

<content-text><p><b>Example with 3 subnets</b></p><p>Next, consider an internetwork that requires three subnets. See the figure.</p><p>Again we start with the same 192.168.1.0 /24 address block. Borrowing a single bit would only provide two subnets. To provide more networks, we change the subnet mask to 255.255.255.192 and borrow two bits. This will provide four subnets. </p><p>Calculate the subnet with this formula: </p><p>2^2 = 4 subnets</p><p><b>The number of hosts</b></p><p>To calculate the number of hosts, begin by examining the last octet. Notice these subnets.</p><p>Subnet 0: 0 = <span class="blue">00</span>000000</p><p>Subnet 1: 64 = <span class="blue">01</span>000000</p><p>Subnet 2: 128 = <span class="blue">10</span>000000</p><p>Subnet 3: 192 = <span class="blue">11</span>000000</p><p>Apply the host calculation formula.</p><p>2^6 - 2 = 62 hosts per subnet</p><p>See the figure for the addressing scheme for these networks.</p></content-text>
</page>
<page type="OneColumn" id="en0606050103">
<content-media type="StaticGraphic" id="cm5651149144"><title><content-text></content-text></title><media ref="en0606000000/en0606050000/en0606050100/en0606050103/cm5651149144.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606050000/en0606050100/en0606050103/cm5651149144text.xml"/></content-media>

<content-text><p><b>Example with 6 subnets</b></p><p>Consider this example with five LANs and a WAN for a total of 6 networks. See the figure. </p><p>To accommodate 6 networks, subnet 192.168.1.0 /24 into address blocks using the formula:</p><p>2^3 = 8 </p><p>To get at least 6 subnets, borrow three host bits. A subnet mask of 255.255.255.224 provides the three additional network bits.</p><p><b>The number of hosts</b></p><p>To calculate the number of hosts, begin by examining the last octet. Notice these subnets.</p><p> 0 = <span class="blue">000</span>00000</p><p> 32 = <span class="blue">001</span>00000</p><p> 64 = <span class="blue">010</span>00000</p><p> 96 = <span class="blue">011</span>00000</p><p>128 = <span class="blue">100</span>00000</p><p>160 = <span class="blue">101</span>00000</p><p>192 = <span class="blue">110</span>00000</p><p>224 = <span class="blue">111</span>00000</p><p>Apply the host calculation formula:</p><p>2^5 - 2 = 30 hosts per subnet.</p><p>See the figure for the addressing scheme for these networks.</p></content-text>
</page>
</topic>
<topic type="" id="en0606050200"><title><content-text>Subnetting - Dividing Networks into Right Sizes</content-text></title>
<page type="OneColumn" id="en0606050201">
<content-media type="InteractiveGraphicHotspots" id="cm4961895962"><title><content-text></content-text></title><media ref="en0606000000/en0606050000/en0606050200/en0606050201/cm4961895962.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606050000/en0606050200/en0606050201/cm4961895962text.xml"/></content-media>

<content-text><p>Every network within the internetwork of a corporation or organization is designed to accommodate a finite number of hosts. </p><p>Some networks, such as point-to-point WAN links, only require a maximum of two hosts. Other networks, such as a user LAN in a large building or department, may need to accommodate hundreds of hosts. Network administrators need to devise the internetwork addressing scheme to accommodate the maximum number of hosts for each network. The number of hosts in each division should allow for growth in the number of hosts.</p><p><b>Determine the Total Number of Hosts</b></p><p>First, consider the total number of hosts required by the entire corporate internetwork. We must use a block of addresses that is large enough to accommodate all devices in all the corporate networks. This includes end user devices, servers, intermediate devices, and router interfaces. </p><p><b>See Step 1 of the figure. </b></p><p>Consider the example of a corporate internetwork that needs to accommodate 800 hosts in its four locations.</p><p><b>Determine the Number and Size of the Networks</b></p><p>Next, consider the number of networks and the size of each required based on common groupings of hosts. </p><p><b>See Step 2 of the figure. </b></p><p>We subnet our network to overcome issues with location, size, and control. In designing the addressing, we consider the factors for grouping the hosts that we discussed previously:</p><ul><li> Grouping based on common geographic location</li>  <li> Grouping hosts used for specific purposes</li>  <li> Grouping based on ownership</li></ul>    <p>Each WAN link is a network. We create subnets for the WAN that interconnect different geographic locations. When connecting the different locations, we use a router to account for the hardware differences between the LANs and the WAN. </p><p>Although hosts in a common geographic location typically comprise a single block of addresses, we may need to subnet this block to form additional networks at each location. We need to create subnetworks at the different locations that have hosts for common user needs. We may also have other groups of users that require many network resources, or we may have many users that require their own subnetwork. Additionally, we may have subnetworks for special hosts such as servers. Each of these factors needs to be considered in the network count. </p><p>We also have to consider any special security or administrative ownership needs that require additional networks.</p><p><b>One useful tool in this address planning process is a network diagram. A diagram allows us to see the networks and make a more accurate count</b>. </p><p>To accommodate 800 hosts in the company's four locations, we use binary arithmetic to allocate a /22 block (2^10-2=1022). </p><p><b>Allocating Addresses</b></p><p>Now that we have a count of the networks and the number of hosts for each network, we need to start allocating addresses from our overall block of addresses. </p><p><b>See Step 3 of the figure.</b></p><p>This process begins by allocating network addresses for locations of special networks. We start with the locations that require the most hosts and work down to the point-to-point links. This process ensures that large enough blocks of addresses are made available to accommodate the hosts and networks for these locations. </p><p>When making the divisions and assignment of available subnets, make sure that there are adequately-sized address blocks available for the larger demands. <b>Also, plan carefully to ensure that the address blocks assigned to the subnet do not overlap.</b></p></content-text>
</page>
<page type="OneColumn" id="en0606050202">
<content-media type="InteractiveGraphicRollovers" id="cm6092467109"><title><content-text></content-text></title><media ref="en0606000000/en0606050000/en0606050200/en0606050202/cm6092467109.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606050000/en0606050200/en0606050202/cm6092467109text.xml"/></content-media>

<content-text><p>Another helpful tool in this planning process is a spreadsheet. We can place the addresses in columns to visualize the allocation of the addresses. </p><p><b>See Step 1 of the figure.</b></p><p>In our example, we now allocate blocks of addresses to the four locations as well as the WAN links.</p><p>With the major blocks allocated, next we subnet any of the locations that require dividing. In our example, we divide the corporate HQ into two networks. </p><p><b>See Step 2 of the figure.</b></p><p>This further division of the addresses is often called <i>subnetting the subnets</i>. As with any subnetting, we need to carefully plan the address allocation so that we have available blocks of addresses. </p><p>The creation of new, smaller networks from a given address block is done by extending the length of the prefix; that is, adding <b>1</b>s to the subnet mask. Doing this allocates more bits to the network portion of the address to provide more patterns for the new subnet. For each bit we borrow, we double the number of networks we have. For example, if we use 1 bit, we have the potential to divide that block into two smaller networks. With a single bit pattern, we can produce two unique bit patterns, 1 and 0. If we borrow 2 bits, we can provide for 4 unique patterns to represent networks 00, 01, 10, and 11. , 3 bits would allow 8 blocks, </p><p><b>The total Number of Usable Hosts</b></p><p>Recall from the previous section that as we divide the address range into subnets, we lose two host addresses for each new network. These are the network address and broadcast address. </p><p>The formula for calculating the number of hosts in a network is:</p><p><b>Usable hosts = 2 <i>n</i> - 2 </b></p><p>Where <i>n</i> is the number of bits remaining to be used for hosts.</p><p>Links:</p><p>Subnet calculator: <content-link target="http://vlsm-calc.net" type="external">http://vlsm-calc.net </content-link> </p></content-text>
</page>
</topic>
<topic type="" id="en0606050300"><title><content-text>Subnetting - Subnetting a Subnet</content-text></title>
<page type="OneColumn" id="en0606050301">
<content-media type="AnimationStepped" id="cm1710320368"><title><content-text></content-text></title><media ref="en0606000000/en0606050000/en0606050300/en0606050301/cm1710320368.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606050000/en0606050300/en0606050301/cm1710320368text.xml"/></content-media>

<content-text><p>Subnetting a subnet, or using Variable Length Subnet Mask (VLSM) was designed to maximize addressing efficiency. When identifying the total number of hosts using traditional subnetting, we allocate the same number of addresses for each subnet. If all the subnets have the same requirements for the number hosts, these fixed size address blocks would be efficient. However, most often that is not the case. </p><p>For example, the topology in Figure 1 shows a subnet requirement of seven subnets, one for each of the four LANs and one for each of the three WANs. With the given address of 192.168.20.0, we need to borrow 3 bits from the host bits in the last octet to meet our subnet requirement of seven subnets. </p><p>These bits are borrowed bits by changing the corresponding subnet mask bits to "1s" to indicate that these bits are now being used as network bits. The last octet of the mask is then represented in binary by 11100000, which is 224. The new mask of 255.255.255.224 is represented with the /27 notation to represent a total of 27 bits for the mask. </p><p>In binary this subnet mask is represented as: <b>11111111.11111111.11111111.11100000</b></p><p>After borrowing three of the host bits to use as network bits, this leaves five host bits. These five bits will allow up to 30 hosts per subnet. </p><p>Although we have accomplished the task of dividing the network into an adequate number of networks, it was done with a significant waste of unused addresses. For example, only two addresses are needed in each subnet for the WAN links. There are 28 unused addresses in each of the three WAN subnets that have been locked into address these address blocks. Further, this limits future growth by reducing the total number of subnets available. This inefficient use of addresses is characteristic of <content-link target="cg5183923982" type="glossary">classful addressing</content-link>. </p><p>Applying a standard subnetting scheme to scenario is not very efficient and is wasteful. In fact, this example is a good model for showing how subnetting a subnet can be used to maximize address utilization.</p><p><b>Getting More Subnet for Less Hosts</b></p><p>Recall in previous examples we began with the original subnets and gained additional, smaller, subnets to use for the WAN links. Creating smaller each subnet is able to support 2 hosts leaves the original subnets free to be allotted to other devices and prevents many addresses from being wasted.</p><p>To create these smaller subnets for the WAN links, begin with 192.168.20.192. We can divide this subnet is to many smaller subnets. To provide address blocks for the WANS with two addresses each, we will borrow three additional host bits to be used as network bits. </p><span class="cmd"><p>Address: 192.168.20.192  In Binary:  <b>11000000.10101000.00010100.11000000</b></p></span><span class="cmd"><p>Mask: 255.255.255.252  30 Bits in binary:  <b>11111111.11111111.11111111.11111100</b></p></span><p>The topology in the figure 2 shows an addressing plan that breaks up the 192.168.20.192 /27 subnets into smaller subnets to provide addresses for the WANs. Doing this reduces the number addresses per subnet to a size appropriate for the WANs. With this addressing, we have subnets 4, 5, and 7 available for future networks, as well as several other subnets available for WANs.</p></content-text>
</page>
<page type="OneColumn" id="en0606050302">
<content-media type="AnimationStepped" id="cm4552769863"><title><content-text></content-text></title><media ref="en0606000000/en0606050000/en0606050300/en0606050302/cm4552769863.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606050000/en0606050300/en0606050302/cm4552769863text.xml"/></content-media>

<content-text><p>In Figure 1, we will look at addressing from another view. We will consider subnetting based on the number of hosts, including router interfaces and WAN connections. This scenario has the following requirements:</p><ul><li> AtlantaHQ 58 host addresses</li>  <li> PerthHQ  26 host addresses</li>  <li> SydneyHQ 10 host addresses</li>  <li> CorpusHQ 10 host addresses</li>  <li> WAN links 2 host addresses (each)</li></ul>    <p>It is clear from these requirements that using a standard subnetting scheme would, indeed, be wasteful. In this internetwork, standard subnetting would lock each subnet into blocks of 60 hosts, which would mean a significant waste of potential addresses. This waste is especially evident in figure 2 where we see that the PerthHQ LAN supports 26 users and the SydneyHQ and CorpusHQ LANs routers support only 10 users each. </p><p>Therefore, with the given address block of 192.168.15.0 /24, we will begin designing an addressing scheme to meet the requirements and save potential addresses. </p><p><b>Getting More</b></p><p>When creating an appropriate addressing scheme, always begin with the largest requirement. In this case, the AtlantaHQ, with 58 users, has the largest requirement. Starting with 192.168.15.0, we will need 6 host bits to accommodate the requirement of 58 hosts, this allows 2 additional bits for the network portion. The prefix for this network would be /26 and a subnet mask of 255.255.255.192.</p><p>Let's begin by subnetting the original address block of 192.168.15.0 /24. Using the Usable hosts = 2^n - 2 formula, we calculate that 6 host bits allow 62 hosts in the subnet. The 62 hosts would meet the required 58 hosts of the AtlantaHQ company router.</p><p> </p><span class="cmd"><p>Address: 192.168.15.0  In Binary:  <b>11000000.10101000.00001111.00000000</b></p></span><span class="cmd"><p>Mask: 255.255.255.192  26 Bits in binary: <b>11111111.11111111.11111111.11000000</b></p></span><p>The next page shows the process of identifying the next sequence of steps.</p></content-text>
</page>
<page type="OneColumn" id="en0606050303">
<content-media type="AnimationStepped" id="cm4667247534"><title><content-text></content-text></title><media ref="en0606000000/en0606050000/en0606050300/en0606050303/cm4667247534.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606050000/en0606050300/en0606050303/cm4667247534text.xml"/></content-media>

<content-text><p>The steps for implementing this subnetting scheme are described here.</p><p> </p><p><b>Assigning the AtlantaHQ LAN</b></p><p>See Steps 1 and 2 in the figure.</p><p>The <b>first step</b> shows a network-planning chart. The <b>second step</b> in the figure shows the entry for the AtlantaHQ. This entry is the results of calculating a subnet from the original 192.168.15.0 /24 block to accommodate the largest LAN, the AtlantaHQ LAN with 58 hosts. Doing this required borrowing an additional 2 host bits, to use a /26 bit mask. </p><p>By comparison, the following scheme shows how 192.168.15.0 would be subnetted using fixed block addressing to provide large enough address blocks:</p><p>Subnet 0: 192.168.15.0 /26 host address range 1 to 62</p><p>Subnet 1: 192.168.15.64 /26 host address range 65 to 126</p><p>Subnet 2: 192.168.15.128 /26 host address range 129 to 190</p><p>Subnet 3: 192.168.15.192 /26 host address range 193 to 254</p><p>The fixed blocks would allow only four subnets and therefore not allow enough address blocks for the majority of the subnets in this internetwork. Instead of continuing to use the next available subnet, we need to ensure we make the size of each subnet consistent with the host requirements. Using an addressing scheme directly correlated to the host requirements requires the use of a different method of subnetting.</p><p><b>Assigning the PerthHQ LAN</b></p><p>See Step 3 in the figure.</p><p>In the <b>third step</b>, we look at the requirements for the next largest subnet. This is the PerthHQ LAN, requiring 28 host addresses including the router interface. We should begin with next available address of 192.168.15.64 to create an address block for this subnet. By borrowing one more bit, we are able to meet the needs of PerthHQ while limiting the wasted addresses. The borrowed bit gives us a /27 mask with the following address range:</p><p>192.168.15.64 /27 host address range 65 to 94 </p><p>This block of address provides 30 addresses, which meets the requirement of 28 hosts and allows room for growth for this subnet. </p><p><b>Assigning the SydneyHQ LAN and CorpusHQ LAN</b></p><p>See Steps 4 and 5 in the figure.</p><p>The <b>fourth </b>and <b>fifth </b>steps provide the addressing for the next largest subnets: SydneyHQ and CorpusHQ LANs. In these two steps are each LAN has the same need for 10 host addresses. This subnetting requires us to borrow another bit, to extend the mask to /28. Starting with address 192.168.15.96, we get the following address blocks:</p><p>Subnet 0: 192.168.15.96 /28 host address range 97 to 110 </p><p>Subnet 1: 192.168.15.112 /28 host address range 113 to 126 </p><p>These blocks provide 14 addresses for the hosts and router interfaces on each LAN.</p><p><b>Assigning the WANs</b></p><p>See Steps 6, 7, and 8 in the figure.</p><p>The <b>last three steps</b> show subnetting for the WAN links. With these point-to-point WAN links only two addresses are required. To meet the requirement, we borrow 2 more bits to use a /30 mask. Using the next available addresses, we get the following address blocks:</p><p>Subnet 0: 192.168.15.128 /30 host address range 129 to 130</p><p>Subnet 1: 192.168.15.132 /30 host address range 133 to 134</p><p>Subnet 2: 192.168.15.136 /30 host address range 137 to 138</p></content-text>
</page>
<page type="OneColumn" id="en0606050304">
<content-media type="AnimationStepped" id="cm1257211771"><title><content-text></content-text></title><media ref="en0606000000/en0606050000/en0606050300/en0606050304/cm1257211771.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606050000/en0606050300/en0606050304/cm1257211771text.xml"/></content-media>

<content-text><p>The results shown in our addressing scheme using <content-link target="cg2793267461" type="glossary">VLSM</content-link> displays a wide array of correctly-allocated address blocks. As best practice, we began by documenting our requirements from the largest to the smallest. By starting with the largest requirement, we were able to determine that a fixed block addressing scheme would not allow for efficient use of the IPv4 addresses and, as shown in this example, would not provide enough addresses.</p><p>From the allocated address block, we borrowed bits to create the address ranges that would fit our topology. Figure 1 shows the assigned ranges. Figure 2 shows the topology with the addressing information.</p><p>Using VLSM to allocate the addresses made it possible to apply the subnetting guidelines for grouping hosts based on: </p><ul><li>Grouping based on common geographic location</li>  <li>Grouping hosts used for specific purposes</li>  <li>Grouping based on ownership</li></ul>    <p>In our example, we based the grouping on the number of hosts in a common geographic location. </p></content-text>
</page>
<page type="OneColumn" id="en0606050305">
<content-media type="AnimationStepped" id="cm5367091858"><title><content-text></content-text></title><media ref="en0606000000/en0606050000/en0606050300/en0606050305/cm5367091858.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606050000/en0606050300/en0606050305/cm5367091858text.xml"/></content-media>

<content-text><p><b>VLSM Chart</b></p><p>Address planning can also be accomplished using a variety of tools. One method is to use a VLSM chart to identify which blocks of addresses are available for use and which ones are already assigned. This method helps to prevent assigning addresses that have already been allocated. Using the network from our example, we can walk through the address planning using the VLSM chart, to see its use. </p><p>The first graphic shows the top portion of the chart. A complete chart for your use is available using the link below.</p><p><content-link target="VLSM_Subnetting_Chart.pdf" type="internalfile">VLSM_Subnetting_Chart.pdf</content-link> </p><p>This chart can be used to do address planning for networks with prefixes in the /25 - /30 range. These are the most commonly used network ranges for subnetting.</p><p>As before, we start with the subnet that has the largest number of hosts. In this case, it is AtlantaHQ with 58 hosts. </p><p><b>Choosing a block for the AtlantaHQ LAN</b></p><p>Following the chart header from left to right, we find the header that indicates a block size of sufficient size for the 58 hosts. This is the /26 column. In this column, we see that there are four blocks of this size:</p><p>.0 /26 host address range 1 to 62</p><p>.64 /26 host address range 65 to 126</p><p>.128 /26 host address range 129 to 190</p><p>.192 /26 host address range 193 to 254</p><p>Because no addresses have been allocated, we can choose any one of these blocks. Although there might be reasons for using a different block, we commonly use the first available block, the .0 /26. This allocation is shown in Figure 2.</p><p>Once we assign the address block, these addresses are considered used. Be sure to mark this block as well as any larger blocks that contain these addresses. By marking these, we can see which address cannot be used and which are still available. Looking at Figure 3, when we allocate the .0 /26 block to the AtlantaHQ, we mark all the blocks that contain these addresses. </p><p><b>Choosing a block for the PerthHQ LAN</b></p><p>Next, we need an address block for the PerthHQ LAN of 26 hosts. Moving across the chart header, we find the column that has the subnets of sufficient size for this LAN. Then we move down the chart to the first available block. In Figure 3, the section of the chart available for PerthHQ is highlighted. The borrowed bit makes the block of addresses available for this LAN. Although we could have chosen any of the available blocks, typically we proceed to the first available block that satisfies the need.</p><p>The address range for this block is:</p><p> </p><p>.64 /27 host address range 65 to 94 </p><p><b>Choosing blocks for the SydneyHQ LAN and the CorpusHQ LAN</b></p><p>As shown in Figure 4, we continue to mark the address blocks to prevent overlapping of address assignment. To meet the needs of the SydneyHQ LAN and CorpusHQ LAN, we again locate the next available blocks. This time we move to the /28 column and move down to the .96 and .112 blocks. Notice that the section of the chart available for SydneyHQ and Corpus HQ is highlighted.</p><p>These blocks are:</p><p>.96 /28 host address range 97 to 110 </p><p>.112 /28 host address range 113 to 126 </p><p><b>Choosing blocks for the WANs</b></p><p>The last addressing requirement is for the WAN connections between the networks. Looking at Figure 5, we move to the far right column for /30 prefix. We then move down and highlight three available blocks. These blocks will provide the 2 addresses per WAN. </p><p>These three blocks are:</p><p>.128 /30 host address range 129 to 130</p><p>.132 /30 host address range 133 to 134</p><p>.136 /30 host address range 137 to 138</p><p>Looking at Figure 6, the addresses assigned to the WAN are marked to indicate that the blocks containing these can no longer be assigned. Notice with the assignment of these WAN ranges that we have marked several larger blocks that cannot be assigned. These are:</p><p>.128 /25</p><p>.128 /26</p><p>.128 /27</p><p>.128 /28</p><p>.128 /29</p><p>.136 /29</p><p>Because these addresses are part of these larger blocks, the assignment of these blocks would overlap the use of these addresses. </p><p>As we have seen, the usage of VLSM enables us to maximize addressing while minimizing waste. The chart method shown is just one additional tool that network administrators and network technicians can use to create an addressing scheme that is less wasteful than the fixed size block approach.</p></content-text>
</page>
</topic>
<topic type="" id="en0606050400"><title><content-text>Determining the Network Address</content-text></title>
<page type="OneColumn" id="en0606050401">
<content-media type="ActivityCustom" id="cm2383994983"><title><content-text></content-text></title><media ref="en0606000000/en0606050000/en0606050400/en0606050401/cm2383994983.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606050000/en0606050400/en0606050401/cm2383994983text.xml"/></content-media>

<content-text><p>The activity in the figure provides practice in determining the network addresses. You will be presented with random masks and host addresses. For each pair of masks and host addresses, you will be required to enter the correct network address. You will then be shown if your answer is correct.</p></content-text>
</page>
</topic>
<topic type="" id="en0606050500"><title><content-text>Calculating the Number of Hosts</content-text></title>
<page type="OneColumn" id="en0606050501">
<content-media type="ActivityCustom" id="cm5912953991"><title><content-text></content-text></title><media ref="en0606000000/en0606050000/en0606050500/en0606050501/cm5912953991.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606050000/en0606050500/en0606050501/cm5912953991text.xml"/></content-media>

<content-text><p>The activity in the figure provides practice in determining the maximum number of hosts for a network. You will be presented with random masks and host addresses. For each pair of masks and host addresses, you will be required to enter the maximum number of hosts for the network described. You will then be shown if your answer is correct.</p></content-text>
</page>
</topic>
<topic type="" id="en0606050600"><title><content-text>Determining Valid Addresses for Hosts</content-text></title>
<page type="OneColumn" id="en0606050601">
<content-media type="ActivityCustom" id="cm8942370785"><title><content-text></content-text></title><media ref="en0606000000/en0606050000/en0606050600/en0606050601/cm8942370785.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606050000/en0606050600/en0606050601/cm8942370785text.xml"/></content-media>

<content-text><p>The activity in the figure provides practice in determining the hosts, network, and broadcast addresses for a network. You will be presented with random masks and host addresses. For each pair of masks and host addresses, you will be required to enter the hosts, network, and broadcast addresses. You will then be shown if your answer is correct.</p></content-text>
</page>
</topic>
<topic type="" id="en0606050700"><title><content-text>Assigning Addresses</content-text></title>
<page type="OneColumn" id="en0606050701">
<content-media type="ActivityPKA" id="cm4789182913"><title><content-text></content-text></title><media ref="en0606000000/en0606050000/en0606050700/en0606050701/cm4789182913/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en0606000000/en0606050000/en0606050700/en0606050701/cm4789182913/icontext.xml"/></content-media>

<content-text><p>In this activity, you will be given a pool of addresses and masks to assign a host with an address, a subnet mask, and a gateway to allow it to communicate in a network.</p><p><b>Click the Packet Tracer icon to launch the Packet Tracer activity.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0606050800"><title><content-text>Addressing in a Tiered Internetwork</content-text></title>
<page type="OneColumn" id="en0606050801">
<content-media type="ActivityPKA" id="cm1860420999"><title><content-text></content-text></title><media ref="en0606000000/en0606050000/en0606050800/en0606050801/cm1860420999/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en0606000000/en0606050000/en0606050800/en0606050801/cm1860420999/icontext.xml"/></content-media>

<content-text><p>In this activity, you will be given a topology and a list of possible IP addresses. You will assign the interfaces of a router with the appropriate IP address and subnet mask that would satisfy the host requirements of each network while leaving the minimum number of unused IP addresses possible.</p><p><b>Click the Packet Tracer icon to launch the Packet Tracer activity.</b></p></content-text>
</page>
</topic>
</section>
<section type="" id="en0606060000"><title><content-text>Testing the Network Layer</content-text></title>
<topic type="" id="en0606060100"><title><content-text>Ping 127.0.0.1 - Testing the Local Stack</content-text></title>
<page type="OneColumn" id="en0606060101">
<content-media type="StaticGraphic" id="cm6897124758"><title><content-text></content-text></title><media ref="en0606000000/en0606060000/en0606060100/en0606060101/cm6897124758.swf" mime="shockwave/flash" scale="false" type="file" width="400" height="200" external="en0606000000/en0606060000/en0606060100/en0606060101/cm6897124758text.xml"/></content-media>

<content-text><p>Ping is a utility for testing IP connectivity between hosts. Ping sends out requests for responses from a specified host address. Ping uses a Layer 3 protocol that is a part on the TCP/IP suite called Internet Control Message Protocol (ICMP). Ping uses an ICMP Echo Request datagram.</p><p>If the host at the specified address receives the Echo request, it responds with an ICMP Echo Reply datagram. For each packet sent, ping measures the time required for the reply. </p><p>As each response is received, ping provides a display of the time between the ping being sent and the response received. This is a measure of the network performance. Ping has a timeout value for the response. If a response is not received within that timeout, ping gives up and provides a message indicating that a response was not received.</p><p>After all the requests are sent, the ping utility provides an output with the summary of the responses. This output includes the success rate and average round-trip time to the destination.</p><p><b>Pinging the Local Loopback</b></p><p>There are some special testing and verification cases for which we can use ping. One case is for testing the internal configuration of IP on the local host. To perform this test, we ping the special reserve address of local loopback (127.0.0.1), as shown in the figure.</p><p>A response from 127.0.0.1 indicates that IP is properly installed on the host. This response comes from the Network layer. This response is <i>not</i>, however, an indication that the addresses, masks, or gateways are properly configured. Nor does it indicate anything about the status of the lower layer of the network stack. This simply tests IP down through the Network layer of the IP protocol. If we get an error message, it is an indication that TCP/IP is not operational on the host.</p></content-text>
</page>
</topic>
<topic type="" id="en0606060200"><title><content-text>Ping Gateway - Testing Connectivity to the Local LAN</content-text></title>
<page type="OneColumn" id="en0606060201">
<content-media type="StaticGraphic" id="cm8172887635"><title><content-text></content-text></title><media ref="en0606000000/en0606060000/en0606060200/en0606060201/cm8172887635.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606060000/en0606060200/en0606060201/cm8172887635text.xml"/></content-media>

<content-text><p>You can also use ping to test the host ability to communicate on the local network. This is generally done by pinging the IP address of the gateway of the host, as shown in the figure. A ping to the gateway indicates that the host and the router's interface serving as that gateway are both operational on the local network. </p><p>For this test, the gateway address is most often used, because the router is normally always operational. If the gateway address does not respond, you can try the IP address of another host that you are confident is operational in the local network. </p><p>If either the gateway or another host responds, then the local hosts can successfully communicate over the local network. If the gateway does not respond but another host does, this could indicate a problem with the router's interface serving as the gateway. </p><p>One possibility is that we have the wrong address for the gateway. Another possibility is that the router interface may be fully operational but have security applied to it that prevents it from processing or responding to ping requests. It is also possible that other hosts may have the same security restriction applied. </p></content-text>
</page>
</topic>
<topic type="" id="en0606060300"><title><content-text>Ping Remote Host - Testing Connectivity to Remote LAN</content-text></title>
<page type="OneColumn" id="en0606060301">
<content-media type="AnimationPartialScreen" id="cm6521824181"><title><content-text></content-text></title><media ref="en0606000000/en0606060000/en0606060300/en0606060301/cm6521824181.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606060000/en0606060300/en0606060301/cm6521824181text.xml"/></content-media>

<content-text><p>You can also use ping to test the ability of the local IP host to communicate across an internetwork. The local host can ping an operational host of a remote network, as shown in the figure.</p><p>If this ping is successful, you will have verified the operation of a large piece of the internetwork. It means that we have verified our host's communication on the local network, the operation of the router serving as our gateway, and all other routers that might be in the path between our network and the network of the remote host.</p><p>Additionally, you have verified the same functionality of the remote host. If, for any reason, the remote host could not use its local network to communicate outside its network, then it would not have responded. </p><p>Remember, many network administrators limit or prohibit the entry of ICMP datagrams into the corporate network. Therefore, the lack of a ping response could be due to security restrictions and not because of non-operational elements of the networks.</p></content-text>
</page>
<page type="OneColumn" id="en0606060302">
<content-media type="ActivityPKA" id="cm9344007122"><title><content-text></content-text></title><media ref="en0606000000/en0606060000/en0606060300/en0606060302/cm9344007122/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en0606000000/en0606060000/en0606060300/en0606060302/cm9344007122/icontext.xml"/></content-media>

<content-text><p>In this activity, you will examine the behavior of <span class="cmd"><b>ping</b> </span> in several common network situations. </p><p><b>Click the Packet Tracer icon to launch the Packet Tracer activity.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0606060400"><title><content-text>Traceroute (tracert) - Testing the Path</content-text></title>
<page type="OneColumn" id="en0606060401">
<content-media type="AnimationPartialScreen" id="cm3777024019"><title><content-text></content-text></title><media ref="en0606000000/en0606060000/en0606060400/en0606060401/cm3777024019.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606060000/en0606060400/en0606060401/cm3777024019text.xml"/></content-media>

<content-text><p>Ping is used to indicate the connectivity between two hosts. Traceroute (<span class="cmd"><b>tracert</b></span>) is a utility that allows us to observe the path between these hosts. The trace generates a list of hops that were successfully reached along the path. </p><p>This list can provide us with important verification and troubleshooting information. If the data reaches the destination, then the trace lists the interface on every router in the path. </p><p>If the data fails at some hop along the way, we have the address of the last router that responded to the trace. This is an indication of where the problem or security restrictions are.</p><p><b>Round Trip Time (RTT)</b></p><p>Using traceroute provides round trip time (RTT) for each hop along the path and indicates if a hop fails to respond. The round trip time (RTT) is the time a packet takes to reach the remote host and for the response from the host to return. An asterisk (*) is used to indicate a lost packet. </p><p>This information can be used to locate a problematic router in the path. If we get high response times or data losses from a particular hop, this is an indication that the resources of the router or its connections may be stressed.</p><p> </p><p><b>Time to Live (TTL)</b></p><p>Traceroute makes use of a function of the Time to Live (TTL) field in the Layer 3 header and ICMP Time Exceeded Message. The TTL field is used to limit the number of hops that a packet can cross. When a packet enters a router, the TTL field is decremented by 1. When the TTL reaches zero, a router will not forward the packet and the packet is dropped. </p><p>In addition to dropping the packet, the router normally sends an ICMP Time Exceeded message addressed to the originating host. This ICMP message will contain the IP address of the router that responded.</p><p><b>Play the animation in the figure to see how Traceroute takes advantage of TTL. </b></p><p>The first sequence of messages sent from <span class="cmd"><b>traceroute</b></span> will have a TTL field of one. This causes the TTL to time out the packet at the first router. This router then responds with an ICMP Message. Traceroute now has the address of the first hop.</p><p>Traceroute then progressively increments the TTL field (2, 3, 4...) for each sequence of messages. This provides the trace with the address of each hop as the packets timeout further down the path. The TTL field continues to be increased until the destination is reached or it is incremented to a predefined maximum.</p><p>Once the final destination is reached, the host responds with either an ICMP Port Unreachable message or an ICMP Echo Reply message instead of the ICMP Time Exceeded message.</p></content-text>
</page>
<page type="OneColumn" id="en0606060402">
<content-media type="ActivityPKA" id="cm7660489295"><title><content-text></content-text></title><media ref="en0606000000/en0606060000/en0606060400/en0606060402/cm7660489295/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en0606000000/en0606060000/en0606060400/en0606060402/cm7660489295/icontext.xml"/></content-media>

<content-text><p>In this activity, you will first investigate how traceroute (<span class="cmd"><b>tracert</b></span>) is actually built out of a series of ICMP echo requests. Then you will experiment with a routing loop, where a packet would circulate forever if not for its time to live field.</p><p><b>Click the Packet Tracer icon to launch the Packet Tracer activity.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0606060500"><title><content-text>ICMPv4 - The Protocol Supporting Testing and Messaging</content-text></title>
<page type="OneColumn" id="en0606060501">
<content-media type="AnimationPartialScreen" id="cm3982677085"><title><content-text></content-text></title><media ref="en0606000000/en0606060000/en0606060500/en0606060501/cm3982677085.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606060000/en0606060500/en0606060501/cm3982677085text.xml"/></content-media>

<content-text><p>Although IPv4 is not a reliable protocol, it does provide for messages to be sent in the event of certain errors. These messages are sent using services of the Internet Control Messaging Protocol (ICMPv4). The purpose of these messages is to provide feedback about issues related to the processing of IP packets under certain conditions, not to make IP reliable. ICMP messages are not required and are often not allowed for security reasons.</p><p><b>ICMP is the messaging protocol for the TCP/IP suite</b>. ICMP provides control and error messages and is used by the ping and traceroute utilities. Although ICMP uses the basic support of IP as if it were a higher-level protocol ICMP, it is actually a separate Layer 3 of the TCP/IP suite. </p><p>The types of ICMP messages - and the reasons why they are sent - are extensive. We will discuss some of the more common messages.</p><p>ICMP messages that may be sent include:</p><ul><li>          Host conformation</li>  <li>          Unreachable Destination or Service</li>  <li>          Time exceeded</li>  <li>          Route redirection</li>  <li>          Source quench</li></ul>    <p><b>Host Confirmation</b></p><p>An ICMP Echo Message can be used to determine if a host is operational. The local host sends an ICMP Echo Request to a host. The host receiving the echo message replies with the ICMP Echo Reply, as shown in the figure. This use of the ICMP Echo messages is the basis of the ping utility. </p><p><b>Unreachable Destination or Service</b></p><p>The ICMP Destination Unreachable can used to notify a host that the destination or service is unreachable. When a host or gateway receives a packet that it cannot deliver, it may send an ICMP Destination Unreachable packet to the host originating the packet. The Destination Unreachable packet will contain codes that indicate why the packet could not be delivered.</p><p>Among the Destination Unreachable codes are:</p><p>0 = net unreachable</p><p>1 = host unreachable</p><p>2 = protocol unreachable</p><p>3 = port unreachable</p><p>Codes for <i>net unreachable</i> and <i>host unreachable</i> are responses from a router when it cannot forward a packet. If a router receives a packet for which it does not have a route, it may respond with an ICMP Destination Unreachable with a code = 0, indicating net unreachable. If a router receives a packet for which it has an attached route but is unable to deliver the packet to the host on the attached network, the router may respond with an ICMP Destination Unreachable with a code = 1, indicating that the network is known but the host is unreachable.</p><p>The codes 2 and 3 (<i>protocol unreachable</i> and <i>port unreachable</i>) are used by an end host to indicate that the TCP segment or UDP datagram contained in a packet could not be delivered to the upper layer service. </p><p>When the end host receives a packet with a Layer 4 PDU that is to be delivered to an unavailable service, the host may respond to the source host with an ICMP Destination Unreachable with a code = 2 or code = 3, indicating that the service is not available. The service may not be available because no daemon is running providing the service or because security on the host is not allowing access to the service.</p><p><b>Time Exceeded</b></p><p>An ICMP Time Exceeded message is used by a router to indicate that a packet cannot be forwarded because the TTL field of the packet has expired. If a router receives a packet and decrements the TTL field in the packet to zero, it discards the packet. The router may also send an ICMP Time Exceeded message to the source host to inform the host of the reason the packet was dropped. </p><p><b>Route Redirection </b></p><p>A router may use the ICMP Redirect Message to notify the hosts on a network that a better route is available for a particular destination. This message may only be used when the source host is on the same physical network as both gateways. If a router receives a packet for which it has a route and for which the next hop is attached to the same interface as the packet arrived, the router may send an ICMP Redirect Message to the source host. This message will inform the source host of the next hop contained in a route in the routing table. </p><p><b>Source Quench</b></p><p>The ICMP Source Quench message can be used to tell the source to temporarily stop sending packets. If a router does not have enough buffer space to receive incoming packets, a router will discard the packets. If the router has to do so, it may also send an ICMP Source Quench message to source hosts for every message that it discards.</p><p>A destination host may also send a source quench message if datagrams arrive too fast to be processed. </p><p>When a host receives an ICMP Source Quench message, it reports it to the Transport layer. The source host can then use the TCP flow control mechanisms to adjust the transmission. </p><p>Links:</p><p>RFC 792 <content-link target="http://www.ietf.org/rfc/rfc0792.txt?number=792" type="external">http://www.ietf.org/rfc/rfc0792.txt?number=792 </content-link> </p><p>RFC 1122 <content-link target="http://www.ietf.org/rfc/rfc1122.txt?number=1122" type="external">http://www.ietf.org/rfc/rfc1122.txt?number=1122 </content-link> </p><p>RFC 2003 <content-link target="http://www.ietf.org/rfc/rfc2003.txt?number=2003" type="external">http://www.ietf.org/rfc/rfc2003.txt?number=2003</content-link> </p></content-text>
</page>
</topic>
</section>
<section type="" id="en0606070000"><title><content-text>Labs and Activities</content-text></title>
<topic type="" id="en0606070100"><title><content-text>Lab - Ping and Traceroute</content-text></title>
<page type="OneColumn" id="en0606070101">
<content-media type="ActivityLab" id="cm3198585694"><title><content-text></content-text></title><media ref="en0606000000/en0606070000/en0606070100/en0606070101/cm3198585694/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="en0606000000/en0606070000/en0606070100/en0606070101/cm3198585694/icontext.xml"/></content-media>

<content-text><p>This lab demonstrates the <span class="cmd"><b>ping</b></span> and <span class="cmd">t<b>racert</b></span> commands from a host. You will observe the steps of the operation of these commands in a network. </p><p><b>Click the Lab icon for more details</b></p></content-text>
</page>
<page type="OneColumn" id="en0606070102">
<content-media type="ActivityPKA" id="cm4485205354"><title><content-text></content-text></title><media ref="en0606000000/en0606070000/en0606070100/en0606070102/cm4485205354/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en0606000000/en0606070000/en0606070100/en0606070102/cm4485205354/icontext.xml"/></content-media>

<content-text><p>This Packet Tracer activity demonstrates the <span class="cmd"><b>ping</b></span> and <span class="cmd"><b>tracert</b></span> commands from a host. You will observe the steps of the operation of these commands in a network. of the operation of these commands in a network. </p><p><b>Click the Packet Tracer icon to launch the Packet Tracer activity.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0606070200"><title><content-text>Lab - Examining ICMP Packet</content-text></title>
<page type="OneColumn" id="en0606070201">
<content-media type="ActivityLab" id="cm6947081095"><title><content-text></content-text></title><media ref="en0606000000/en0606070000/en0606070200/en0606070201/cm6947081095/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="en0606000000/en0606070000/en0606070200/en0606070201/cm6947081095/icontext.xml"/></content-media>

<content-text><p>In this lab, you will use Wireshark to capture ICMP packets to observe the different ICMP codes.</p><p><b>Click the Lab icon for more details</b></p></content-text>
</page>
<page type="OneColumn" id="en0606070202">
<content-media type="ActivityPKA" id="cm5898335196"><title><content-text></content-text></title><media ref="en0606000000/en0606070000/en0606070200/en0606070202/cm5898335196/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en0606000000/en0606070000/en0606070200/en0606070202/cm5898335196/icontext.xml"/></content-media>

<content-text><p>This Packet Tracer activity will examine ICMP packets issued from hosts on a network.</p><p><b>Click the Packet Tracer icon to launch the Packet Tracer activity.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0606070300"><title><content-text>Activity: IPv4 Address Subnetting Part 1</content-text></title>
<page type="OneColumn" id="en0606070301">
<content-media type="ActivityLab" id="cm2711406609"><title><content-text></content-text></title><media ref="en0606000000/en0606070000/en0606070300/en0606070301/cm2711406609/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="en0606000000/en0606070000/en0606070300/en0606070301/cm2711406609/icontext.xml"/></content-media>

<content-text><p>This activity is designed to teach how to compute major network IP address information from a given IP address. </p><p><b>Click the Activity icon for more details</b></p></content-text>
</page>
</topic>
<topic type="" id="en0606070400"><title><content-text>Activity: IPv4 Address Subnetting Part 2</content-text></title>
<page type="OneColumn" id="en0606070401">
<content-media type="ActivityLab" id="cm4275866325"><title><content-text></content-text></title><media ref="en0606000000/en0606070000/en0606070400/en0606070401/cm4275866325/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="en0606000000/en0606070000/en0606070400/en0606070401/cm4275866325/icontext.xml"/></content-media>

<content-text><p>This activity is designed to teach you how to compute subnet information for a given IP address and subnetwork mask.</p><p><b>Click the Activity icon for more details</b></p></content-text>
</page>
</topic>
<topic type="" id="en0606070500"><title><content-text>Lab: Subnet and Router Configuration</content-text></title>
<page type="OneColumn" id="en0606070501">
<content-media type="ActivityLab" id="cm6696821814"><title><content-text></content-text></title><media ref="en0606000000/en0606070000/en0606070500/en0606070501/cm6696821814/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="en0606000000/en0606070000/en0606070500/en0606070501/cm6696821814/icontext.xml"/></content-media>

<content-text><p>In this lab activity, you will design and apply an IP addressing scheme for a given topology. After cabling the network you will then configure each device using the appropriate basic configuration commands. When the configuration is complete the appropriate IOS commands will be used to verify that the network is working properly.</p><p><b>Click the Lab icon for more details.</b></p></content-text>
</page>
<page type="OneColumn" id="en0606070502">
<content-media type="ActivityPKA" id="cm8863247933"><title><content-text></content-text></title><media ref="en0606000000/en0606070000/en0606070500/en0606070502/cm8863247933/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en0606000000/en0606070000/en0606070500/en0606070502/cm8863247933/icontext.xml"/></content-media>

<content-text><p>In this Packet Tracer activity, you will design and apply an IP addressing scheme for a given topology. After cabling the network you will then configure each device using the appropriate basic configuration commands. When the configuration is complete the appropriate IOS commands will be used to verify that the network is working properly.</p><p><b>Click the Packet Tracer icon to launch the Packet Tracer activity.</b></p></content-text>
</page>
</topic>
</section>
<section type="ChapterSummary" id="en0606080000"><title><content-text>Chapter Summaries</content-text></title>
<topic type="" id="en0606080100"><title><content-text>Summary and Review</content-text></title>
<page type="OneColumn" id="en0606080101">
<content-media type="StaticGraphic" id="cm2445561727"><title><content-text></content-text></title><media ref="en0606000000/en0606080000/en0606080100/en0606080101/cm2445561727.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606080000/en0606080100/en0606080101/cm2445561727text.xml"/></content-media>

<content-text><p>IPv4 addresses are hierarchical with network, subnetwork, and host portions. An IPv4 address can represent a complete network, a specific host, or the broadcast address of the network.</p><p>Different addresses are used for unicast, multicast, and broadcast data communications.</p><p>Addressing authorities and ISPs allocate address ranges to users, who in turn can assign these addresses to their network devices statically or dynamically. The allocated address range can be divided into subnetworks by calculating and applying subnet masks.</p><p>Careful addressing planning is required to make best use of the available address space. Size, location, use, and access requirements are all considerations in the address planning process.</p><p>Once implemented, an IP network needs to be tested to verify its connectivity and operational performance.</p></content-text>
</page>
<page type="FullScreen" id="en0606080102">
<content-media type="ChapterSummary" id="cm6831891038"><title><content-text></content-text></title><media ref="en0606000000/en0606080000/en0606080100/en0606080102/cm6831891038.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606080000/en0606080100/en0606080102/cm6831891038text.xml"/></content-media>

<content-text></content-text>
</page>
<page type="OneColumn" id="en0606080103">
<content-media type="ActivityPKA" id="cm4074756703"><title><content-text></content-text></title><media ref="en0606000000/en0606080000/en0606080100/en0606080103/cm4074756703/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en0606000000/en0606080000/en0606080100/en0606080103/cm4074756703/icontext.xml"/></content-media>

<content-text><p>In this activity, you will apply your newly learned skill of subnetting to the ongoing goal of building an increasingly sophisticated model of the Exploration lab topology. </p><p><content-link target="E1_PTAct_6_8_1_Directions.pdf" type="internalfile">Packet Tracer Skills Integration Instructions (PDF)</content-link> </p><p><b>Click the Packet Tracer icon to launch the Packet Tracer activity.</b></p></content-text>
</page>
<page type="OneColumn" id="en0606080104">
<content-media type="StaticGraphic" id="cm1956373222"><title><content-text></content-text></title><media ref="en0606000000/en0606080000/en0606080100/en0606080104/cm1956373222.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0606000000/en0606080000/en0606080100/en0606080104/cm1956373222text.xml"/></content-media>

<content-text><p><b>To Learn More</b></p><p> </p><p><b>Reflection Questions</b></p><p>Discuss the requirements of an IPv4 addressing plan for an organization whose operations are spread over a number of locations. The organization has a number of different functional areas at most locations that require servers, printers, and mobile devices in addition to regular desktop PCs and laptops. What other address space issues would have to be considered if the organization required Internet access for its users as well as access to specific servers by its customers?</p><p>Discuss and consider how an organization could rearrange its current /20 IPv4 addressing plan if it needed to expand its network to have more, smaller subnetworks, each with a varying number of potential hosts.</p></content-text>
</page>
</topic>
</section>
<section type="ChapterQuiz" id="en0606090000"><title><content-text>Chapter Quiz</content-text></title>
<topic type="" id="en0606090100"><title><content-text>Chapter Quiz</content-text></title>
<page type="FullScreen" id="en0606090101">
<content-media type="ChapterQuiz" id="cm4830411745"><title><content-text></content-text></title><media ref="en0606000000/en0606090000/en0606090100/en0606090101/cm4830411745/" mime="" scale="true" type="directory" width="100%" height="100%" external="en0606000000/en0606090000/en0606090100/en0606090101/cm4830411745/icontext.xml"/></content-media>

<content-text></content-text>
</page>
</topic>
</section>
</chapter>
