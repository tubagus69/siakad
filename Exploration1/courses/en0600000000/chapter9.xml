<chapter type="" id="en0609000000"><title><content-text>Ethernet</content-text></title>
<section type="ChapterIntroduction" id="en0609000000"><title><content-text>Chapter Introduction</content-text></title>
<topic type="" id="en0609000100"><title><content-text>Chapter Introduction</content-text></title>
<page type="OneColumn" id="en0609000101">
<content-media type="StaticGraphic" id="cm4283082981"><title><content-text></content-text></title><media ref="en0609000000/en0609000000/en0609000100/en0609000101/cm4283082981.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609000000/en0609000100/en0609000101/cm4283082981text.xml"/></content-media>

<content-text><p>Up to this point in the course, each chapter focused on the different functions of each layer of the OSI and TCP/IP protocol models as well as how protocols are used to support network communication. Several key protocols - TCP, UDP, and IP - are continually referenced in these discussions because they provide the foundation for how the smallest of networks to the largest, the Internet, work today. These protocols comprise the TCP/IP protocol stack and since the Internet was built using these protocols, Ethernet is now the predominant LAN technology in the world. </p><p>Internet Engineering Task Force (IETF) maintains the functional protocols and services for the TCP/IP protocol suite in the upper layers. However, the functional protocols and services at the OSI Data Link layer and Physical layer are described by various engineering organizations (IEEE, ANSI, ITU) or by private companies (proprietary protocols). Since Ethernet is comprised of standards at these lower layers, generalizing, it may best be understood in reference to the OSI model. The OSI model separates the Data Link layer functionalities of addressing, framing and accessing the media from the Physical layer standards of the media. Ethernet standards define both the Layer 2 protocols and the Layer 1 technologies. Although Ethernet specifications support different media, bandwidths, and other Layer 1 and 2 variations, the basic frame format and address scheme is the same for all varieties of Ethernet. </p><p>This chapter examines the characteristics and operation of Ethernet as it has evolved from a shared media, contention-based data communications technology to today's high bandwidth, full-duplex technology.</p><p><b>Learning Objectives</b></p><p>Upon completion of this chapter, you will be able to:</p><ul><li> Describe the evolution of Ethernet</li>  <li> Explain the fields of the Ethernet Frame</li>  <li> Describe the function and characteristics of the media access control method used by Ethernet protocol</li>  <li> Describe the Physical and Data Link layer features of Ethernet</li>  <li> Compare and contrast Ethernet hubs and switches</li>  <li> Explain the Address Resolution Protocol (ARP)</li></ul>
</content-text>
</page>
</topic>
</section>
<section type="" id="en0609010000"><title><content-text>Overview of Ethernet</content-text></title>
<topic type="" id="en0609010100"><title><content-text>Ethernet - Standards and Implementation</content-text></title>
<page type="OneColumn" id="en0609010101">
<content-media type="StaticGraphic" id="cm2405469978"><title><content-text></content-text></title><media ref="en0609000000/en0609010000/en0609010100/en0609010101/cm2405469978.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609010000/en0609010100/en0609010101/cm2405469978text.xml"/></content-media>

<content-text><p><b>IEEE Standards</b></p><p> </p><p>The first LAN in the world was the original version of Ethernet. Robert Metcalfe and his coworkers at Xerox designed it more than thirty years ago. The first Ethernet standard was published in 1980 by a consortium of Digital Equipment Corporation, Intel, and Xerox (DIX). Metcalfe wanted Ethernet to be a shared standard from which everyone could benefit, and therefore it was released as an open standard. The first products that were developed from the Ethernet standard were sold in the early 1980s. </p><p>In 1985, the Institute of Electrical and Electronics Engineers (IEEE) standards committee for Local and Metropolitan Networks published standards for LANs. These standards start with the number 802. The standard for Ethernet is 802.3. The IEEE wanted to make sure that its standards were compatible with those of the International Standards Organization (ISO) and OSI model. To ensure compatibility, the IEEE 802.3 standards had to address the needs of Layer 1 and the lower portion of Layer 2 of the OSI model. As a result, some small modifications to the original Ethernet standard were made in 802.3. </p><p>Ethernet operates in the lower two layers of the OSI model: the of the Data Link layer and the Physical layer.</p></content-text>
</page>
</topic>
<topic type="" id="en0609010200"><title><content-text>Ethernet - Layer 1 and Layer 2</content-text></title>
<page type="OneColumn" id="en0609010201">
<content-media type="StaticGraphic" id="cm3806623951"><title><content-text></content-text></title><media ref="en0609000000/en0609010000/en0609010200/en0609010201/cm3806623951.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609010000/en0609010200/en0609010201/cm3806623951text.xml"/></content-media>

<content-text><p>Ethernet operates across two layers of the OSI model. The model provides a reference to which Ethernet can be related but it is actually implemented in the lower half of the Data Link layer, which is known as the Media Access Control (MAC) sublayer, and the Physical layer only.</p><p>Ethernet at Layer 1 involves signals, bit streams that travel on the media, physical components that put signals on media, and various topologies. Ethernet Layer 1 performs a key role in the communication that takes place between devices, but each of its functions has limitations. </p><p>As the figure shows, Ethernet at Layer 2 addresses these limitations. The Data Link sublayers contribute significantly to technological compatibility and computer communications. The MAC sublayer is concerned with the physical components that will be used to communicate the information and prepares the data for transmission over the media..</p><p>The Logical Link Control (LLC) sublayer remains relatively independent of the physical equipment that will be used for the communication process.</p></content-text>
</page>
</topic>
<topic type="" id="en0609010300"><title><content-text>Logical Link Control - Connecting to the Upper Layers</content-text></title>
<page type="OneColumn" id="en0609010301">
<content-media type="StaticGraphic" id="cm3967547454"><title><content-text></content-text></title><media ref="en0609000000/en0609010000/en0609010300/en0609010301/cm3967547454.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609010000/en0609010300/en0609010301/cm3967547454text.xml"/></content-media>

<content-text><p>Ethernet separates the functions of the Data Link layer into two distinct sublayers: the Logical Link Control (LLC) sublayer and the Media Access Control (MAC) sublayer. The functions described in the OSI model for the Data Link layer are assigned to the LLC and MAC sublayers. The use of these sublayers contributes significantly to compatibility between diverse end devices. </p><p>For Ethernet, the IEEE 802.2 standard describes the LLC sublayer functions, and the 802.3 standard describes the MAC sublayer and the Physical layer functions. Logical Link Control handles the communication between the upper layers and the networking software, and the lower layers, typically the hardware. The LLC sublayer takes the network protocol data, which is typically an IPv4 packet, and adds control information to help deliver the packet to the destination node. Layer 2 communicates with the upper layers through LLC.</p><p>LLC is implemented in software, and its implementation is independent of the physical equipment. In a computer, the LLC can be considered the driver software for the Network Interface Card (NIC). The NIC driver is a program that interacts directly with the hardware on the NIC to pass the data between the media and the Media Access Control sublayer. </p><p><content-link target="http://standards.ieee.org/getieee802/download/802.2-1998.pdf" type="external">http://standards.ieee.org/getieee802/download/802.2-1998.pdf</content-link> </p><p><content-link target="http://standards.ieee.org/regauth/llc/llctutorial.html" type="external">http://standards.ieee.org/regauth/llc/llctutorial.html</content-link> </p><p><content-link target="http://www.wildpackets.com/support/compendium/reference/sap_numbers" type="external">http://www.wildpackets.com/support/compendium/reference/sap_numbers</content-link> </p></content-text>
</page>
</topic>
<topic type="" id="en0609010400"><title><content-text>MAC - Getting Data to the Media</content-text></title>
<page type="OneColumn" id="en0609010401">
<content-media type="StaticGraphic" id="cm8480811405"><title><content-text></content-text></title><media ref="en0609000000/en0609010000/en0609010400/en0609010401/cm8480811405.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609010000/en0609010400/en0609010401/cm8480811405text.xml"/></content-media>

<content-text><p>Media Access Control (MAC) is the lower Ethernet sublayer of the Data Link layer. Media Access Control is implemented by hardware, typically in the computer Network Interface Card (NIC).</p><p>The Ethernet MAC sublayer has two primary responsibilities:</p><ul><li>          Data Encapsulation</li>  <li>          Media Access Control</li></ul>    <p><b>Data Encapsulation</b></p><p>Data encapsulation provides three primary functions:</p><ul><li>          Frame delimiting </li>  <li>          Addressing</li>  <li>          Error detection</li></ul>    <p>The data encapsulation process includes frame assembly before transmission and frame parsing upon reception of a frame. In forming the frame, the MAC layer adds a header and trailer to the Layer 3 PDU. The use of frames aids in the transmission of bits as they are placed on the media and in the grouping of bits at the receiving node. </p><p>The framing process provides important delimiters that are used to identify a group of bits that make up a frame. This process provides synchronization between the transmitting and receiving nodes. </p><p>The encapsulation process also provides for Data Link layer addressing. Each Ethernet header added in the frame contains the physical address (MAC address) that enables a frame to be delivered to a destination node.</p><p>An additional function of data encapsulation is error detection. Each Ethernet frame contains a trailer with a cyclic redundancy check (CRC) of the frame contents. After reception of a frame, the receiving node creates a CRC to compare to the one in the frame. If these two CRC calculations match, the frame can be trusted to have been received without error.</p><p><b>Media Access Control</b></p><p>The MAC sublayer controls the placement of frames on the media and the removal of frames from the media. As its name implies, it manages the media access control. This includes the initiation of frame transmission and recovery from transmission failure due to collisions. </p><p><b>Logical Topology</b></p><p>The underlying logical topology of Ethernet is a multi-access bus. This means that all the nodes (devices) in that network segment share the medium. This further means that all the nodes in that segment receive all the frames transmitted by any node on that segment.</p><p>Because all the nodes receive all the frames, each node needs to determine if a frame is to be accepted and processed by that node. This requires examining the addressing in the frame provided by the MAC address.</p><p>Ethernet provides a method for determining how the nodes share access to the media. The media access control method for classic Ethernet is Carrier Sense Multiple Access with Collision Detection (CSMA/CD). This method is described later in the chapter.</p><p><content-link target="http://standards.ieee.org/regauth/groupmac/tutorial.html" type="external">http://standards.ieee.org/regauth/groupmac/tutorial.html</content-link> </p></content-text>
</page>
</topic>
<topic type="" id="en0609010500"><title><content-text>Physical Implementations of Ethernet</content-text></title>
<page type="OneColumn" id="en0609010501">
<content-media type="StaticGraphic" id="cm5823205669"><title><content-text></content-text></title><media ref="en0609000000/en0609010000/en0609010500/en0609010501/cm5823205669.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609010000/en0609010500/en0609010501/cm5823205669text.xml"/></content-media>

<content-text><p>Most of the traffic on the Internet originates and ends with Ethernet connections. Since its inception in the 1970s, Ethernet has evolved to meet the increased demand for high-speed LANs. When optical fiber media was introduced, Ethernet adapted to this new technology to take advantage of the superior bandwidth and low error rate that fiber offers. Today, the same protocol that transported data at 3 Mbps can carry data at 10 <content-link target="cg1217747468" type="glossary">Gbps</content-link>. </p><p>The success of Ethernet is due to the following factors:</p><ul><li>          Simplicity and ease of maintenance </li>  <li>          Ability to incorporate new technologies </li>  <li>          Reliability </li>  <li>          Low cost of installation and upgrade </li></ul>    <p>The introduction of Gigabit Ethernet has extended the original LAN technology to distances that make Ethernet a <content-link target="cg7622067576" type="glossary">Metropolitan Area Network (MAN)</content-link> and WAN standard.</p><p>As a technology associated with the Physical layer, Ethernet specifies and implements encoding and decoding schemes that enable frame bits to be carried as signals across the media. Ethernet devices make use of a broad range of cable and connector specifications. </p><p>In today's networks, Ethernet uses UTP copper cables and optical fiber to interconnect network devices via intermediary devices such as hubs and switches. With all of the various media types that Ethernet supports , the Ethernet frame structure remains consistent across all of its physical implementations. It is for this reason that it can evolve to meet today's networking requirements.</p></content-text>
</page>
</topic>
</section>
<section type="" id="en0609020000"><title><content-text>Ethernet - Communication through the LAN</content-text></title>
<topic type="" id="en0609020100"><title><content-text>Historic Ethernet</content-text></title>
<page type="OneColumn" id="en0609020101">
<content-media type="StaticGraphic" id="cm9533142399"><title><content-text></content-text></title><media ref="en0609000000/en0609020000/en0609020100/en0609020101/cm9533142399.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609020000/en0609020100/en0609020101/cm9533142399text.xml"/></content-media>

<content-text><p>The foundation for Ethernet technology was first established in 1970 with a program called Alohanet. Alohanet was a digital radio network designed to transmit information over a shared radio frequency between the Hawaiian Islands. </p><p>Alohanet required all stations to follow a protocol in which an unacknowledged transmission required re-transmitting after a short period of waiting. The techniques for using a shared medium in this way were later applied to wired technology in the form of Ethernet.</p><p>Ethernet was designed to accommodate multiple computers that were Interconnected on a shared bus topology. </p><p>The first version of Ethernet incorporated a media access method known as Carrier Sense Multiple Access with Collision Detection (CSMA/CD). CSMA/CD managed the problems that result when multiple devices attempt to communicate over a shared physical medium.</p></content-text>
</page>
<page type="OneColumn" id="en0609020102">
<content-media type="StaticGraphic" id="cm4862140445"><title><content-text></content-text></title><media ref="en0609000000/en0609020000/en0609020100/en0609020102/cm4862140445.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609020000/en0609020100/en0609020102/cm4862140445text.xml"/></content-media>

<content-text><p><b>Early Ethernet Media</b></p><p>The first versions of Ethernet used coaxial cable to connect computers in a bus topology. Each computer was directly connected to the backbone. These early versions of Ethernet were known as Thicknet, (10BASE5) and Thinnet (10BASE2).</p><p>10BASE5, or Thicknet, used a thick coaxial that allowed for cabling distances of up to 500 meters before the signal required a repeater. 10BASE2, or Thinnet, used a thin coaxial cable that was smaller in diameter and more flexible than Thicknet and allowed for cabling distances of 185 meters.</p><p>The ability to migrate the original implementation of Ethernet to current and future Ethernet implementations is based on the practically unchanged structure of the Layer 2 frame. Physical media, media access, and media control have all evolved and continue to do so. But the Ethernet frame header and trailer have essentially remained constant. </p><p>The early implementations of Ethernet were deployed in a low-bandwidth LAN environment where access to the shared media was managed by CSMA, and later CSMA/CD. In additional to being a logical bus topology at the Data Link layer, Ethernet also used a physical bus topology. This topology became more problematic as LANs grew larger and LAN services made increasing demands on the infrastructure.</p><p>The original thick coaxial and thin coaxial physical media were replaced by early categories of UTP cables. Compared to the coaxial cables, the UTP cables were easier to work with, lightweight, and less expensive. </p><p>The physical topology was also changed to a star topology using hubs. Hubs concentrate connections. In other words, they take a group of nodes and allow the network to see them as a single unit. When a frame arrives at one port, it is copied to the other ports so that all the segments on the LAN receive the frame. Using the hub in this bus topology increased network reliability by allowing any single cable to fail without disrupting the entire network. However, repeating the frame to all other ports did not solve the issue of collisions. Later in this chapter, you will see how issues with collisions in Ethernet networks are managed with the introduction of switches into the network. </p></content-text>
</page>
</topic>
<topic type="" id="en0609020200"><title><content-text>Ethernet Collision Management</content-text></title>
<page type="OneColumn" id="en0609020201">
<content-media type="InteractiveGraphicRollovers" id="cm5113750950"><title><content-text></content-text></title><media ref="en0609000000/en0609020000/en0609020200/en0609020201/cm5113750950.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609020000/en0609020200/en0609020201/cm5113750950text.xml"/></content-media>

<content-text><p><b>Legacy Ethernet</b></p><p>In 10BASE-T networks, typically the central point of the network segment was a hub. This created a shared media. Because the media is shared, only one station could successfully transmit at a time. This type of connection is described as a <i>half-duplex</i> communication.</p><p>As more devices were added to an Ethernet network, the amount of frame collisions increased significantly. During periods of low communications activity, the few collisions that occur are managed by CSMA/CD, with little or no impact on performance. As the number of devices and subsequent data traffic increase, however, the rise in collisions can have a significant impact on the user's experience.</p><p>A good analogy is when we leave for work or school early in the morning, the roads are relatively clear and not congested. Later when more cars are on the roads, there can be collisions and traffic slows down. </p><p><b>Current Ethernet</b></p><p>A significant development that enhanced LAN performance was the introduction of switches to replace hubs in Ethernet-based networks. This development closely corresponded with the development of 100BASE-TX Ethernet. Switches can control the flow of data by isolating each port and sending a frame only to its proper destination (if the destination is known), rather than send every frame to every device. </p><p>The switch reduces the number of devices receiving each frame, which in turn reduces or minimizes the possibility of collisions. This, and the later introduction of <i>full-duplex </i>communications (having a connection that can carry both transmitted and received signals at the same time), has enabled the development of 1Gbps Ethernet and beyond.</p></content-text>
</page>
</topic>
<topic type="" id="en0609020300"><title><content-text>Moving to 1Gbps and Beyond</content-text></title>
<page type="OneColumn" id="en0609020301">
<content-media type="StaticGraphic" id="cm6749144514"><title><content-text></content-text></title><media ref="en0609000000/en0609020000/en0609020300/en0609020301/cm6749144514.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609020000/en0609020300/en0609020301/cm6749144514text.xml"/></content-media>

<content-text><p>The applications that cross network links on a daily basis tax even the most robust networks. For example, the increasing use of Voice over IP (VoIP) and multimedia services requires connections that are faster than 100 Mbps Ethernet.</p><p>Gigabit Ethernet is used to describe Ethernet implementations that provide bandwidth of 1000 Mbps (1 Gbps) or greater. This capacity has been built on the full-duplex capability and the UTP and fiber-optic media technologies of earlier Ethernet.</p><p>The increase in network performance is significant when potential throughput increases from 100 Mbps to 1 Gbps and above. </p><p>Upgrading to 1 Gbps Ethernet does not always mean that the existing network infrastructure of cables and switches has to be completely replaced. Some of the equipment and cabling in modern, well-designed and installed networks may be capable of working at the higher speeds with only minimal upgrading. This capability has the benefit of reducing the total cost of ownership of the network.</p></content-text>
</page>
<page type="OneColumn" id="en0609020302">
<content-media type="StaticGraphic" id="cm5174098373"><title><content-text></content-text></title><media ref="en0609000000/en0609020000/en0609020300/en0609020302/cm5174098373.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609020000/en0609020300/en0609020302/cm5174098373text.xml"/></content-media>

<content-text><p><b>Ethernet Beyond the LAN</b></p><p>The increased cabling distances enabled by the use of fiber-optic cable in Ethernet-based networks has resulted in a blurring of the distinction between LANs and WANs. Ethernet was initially limited to LAN cable systems within single buildings, and then extended to between buildings. It can now be applied across a city in what is known as a Metropolitan Area Network (MAN).</p></content-text>
</page>
</topic>
</section>
<section type="" id="en0609030000"><title><content-text>The Ethernet Frame</content-text></title>
<topic type="" id="en0609030100"><title><content-text>The Frame - Encapsulating the Packet</content-text></title>
<page type="OneColumn" id="en0609030101">
<content-media type="StaticGraphic" id="cm9722967833"><title><content-text></content-text></title><media ref="en0609000000/en0609030000/en0609030100/en0609030101/cm9722967833.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609030000/en0609030100/en0609030101/cm9722967833text.xml"/></content-media>

<content-text><p>The Ethernet frame structure adds headers and trailers around the Layer 3 PDU to encapsulate the message being sent.</p><p>Both the Ethernet header and trailer have several sections of information that are used by the Ethernet protocol. Each section of the frame is called a field. There are two styles of Ethernet framing: IEEE 802.3 (original) and the revised IEEE 802.3 (Ethernet).</p><p>The differences between framing styles are minimal. The most significant difference between the IEEE 802.3 (original) and the revised IEEE 802.3 is the addition of a Start Frame Delimiter (SFD) and a small change to the Type field to include the Length, as shown in the figure.</p><p><b>Ethernet Frame Size</b></p><p>The original Ethernet standard defined the minimum frame size as 64 bytes and the maximum as 1518 bytes. This includes all bytes from the Destination <content-link target="cg7998434488" type="glossary">MAC Address</content-link> field through the Frame Check Sequence (FCS) field. The Preamble and Start Frame Delimiter fields are not included when describing the size of a frame. The IEEE 802.3ac standard, released in 1998, extended the maximum allowable frame size to 1522 bytes. The frame size was increased to accommodate a technology called <content-link target="cg8500927344" type="glossary">Virtual Local Area Network (VLAN)</content-link>. VLANs are created within a switched network and will be presented in a later course.</p><p>If the size of a transmitted frame is less than the minimum or greater than the maximum, the receiving device drops the frame. Dropped frames are likely to be the result of collisions or other unwanted signals and are therefore considered invalid.</p></content-text>
</page>
<page type="OneColumn" id="en0609030102">
<content-media type="InteractiveGraphicRollovers" id="cm5413720724"><title><content-text></content-text></title><media ref="en0609000000/en0609030000/en0609030100/en0609030102/cm5413720724.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609030000/en0609030100/en0609030102/cm5413720724text.xml"/></content-media>

<content-text><p><b>Roll over each field name to see its description.</b></p><p> </p><p><b>Preamble and Start Frame Delimiter Fields</b></p><p>The Preamble (7 bytes) and Start Frame Delimiter (SFD) (1 byte) fields are used for synchronization between the sending and receiving devices. These first eight bytes of the frame are used to get the attention of the receiving nodes. Essentially, the first few bytes tell the receivers to get ready to receive a new frame. </p><p><b>Destination MAC Address Field</b></p><p>The Destination MAC Address field (6 bytes) is the identifier for the intended recipient. As you will recall, this address is used by Layer 2 to assist devices in determining if a frame is addressed to them. The address in the frame is compared to the MAC address in the device. If there is a match, the device accepts the frame.</p><p><b>Source MAC Address Field</b></p><p>The Source MAC Address field (6 bytes) identifies the frame's originating NIC or interface. Switches also use this address to add to their lookup tables. The role of switches will be discussed later in the chapter. </p><p><b>Length/Type Field</b></p><p>The Length/Type field (2 bytes) defines the exact length of the frame's data field. This is used later as part of the FCS to ensure that the message was received properly. Either a length or a type may be entered here. However, only one or the other may be used in a given implementation. If the purpose of the field is to designate a type, the Type field describes which protocol is implemented.</p><p>The field labeled Length/Type was only listed as Length in the early IEEE versions and only as Type in the DIX version. These two uses of the field were officially combined in a later IEEE version because both uses were common. The Ethernet II Type field is incorporated into the current 802.3 frame definition. Ethernet II is the Ethernet frame format that is used in TCP/IP networks. When a node receives a frame, it must examine the Length/Type field to determine which higher-layer protocol is present. If the two-octet value is equal to or greater than 0x0600 hexadecimal or 1536 decimal, then the contents of the Data Field are decoded according to the protocol indicated. </p><p><b>Data and Pad Fields</b></p><p>The Data and Pad fields (46 - 1500 bytes) contains the encapsulated data from a higher layer, which is a generic Layer 3 PDU, or more commonly, an IPv4 packet. All frames must be at least 64 bytes long. If a small packet is encapsulated, the Pad is used to increase the size of the frame to this minimum size. </p></content-text>
</page>
<page type="OneColumn" id="en0609030103">
<content-media type="StaticGraphic" id="cm8759901469"><title><content-text></content-text></title><media ref="en0609000000/en0609030000/en0609030100/en0609030103/cm8759901469.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609030000/en0609030100/en0609030103/cm8759901469text.xml"/></content-media>

<content-text><p><b>Frame Check Sequence Field</b></p><p>The Frame Check Sequence (FCS) field (4 bytes) is used to detect errors in a frame. It uses a cyclic redundancy check (CRC). The sending device includes the results of a CRC in the FCS field of the frame. </p><p>The receiving device receives the frame and generates a CRC to look for errors. If the calculations match, no error occurred. Calculations that do not match are an indication that the data has changed; therefore, the frame is dropped. A change in the data could be the result of a disruption of the electrical signals that represent the bits.</p><p> </p></content-text>
</page>
</topic>
<topic type="" id="en0609030200"><title><content-text>The Ethernet MAC Address</content-text></title>
<page type="OneColumn" id="en0609030201">
<content-media type="StaticGraphic" id="cm3035467020"><title><content-text></content-text></title><media ref="en0609000000/en0609030000/en0609030200/en0609030201/cm3035467020.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609030000/en0609030200/en0609030201/cm3035467020text.xml"/></content-media>

<content-text><p>Initially, Ethernet was implemented as part of a bus topology. Every network device was connected to the same, shared media. In low traffic or small networks, this was an acceptable deployment. The main problem to solve was how to identify each device. The signal could be sent to every device, but how would each device identify if it were the intended receiver of the message? </p><p>A unique identifier called a Media Access Control (MAC) address was created to assist in determining the source and destination address within an Ethernet network. Regardless of which variety of Ethernet was used, the naming convention provided a method for device identification at a lower level of the OSI model.</p><p>As you will recall, MAC addressing is added as part of a Layer 2 PDU. An Ethernet MAC address is a 48-bit binary value expressed as 12 hexadecimal digits.</p></content-text>
</page>
<page type="OneColumn" id="en0609030202">
<content-media type="StaticGraphic" id="cm2568458161"><title><content-text></content-text></title><media ref="en0609000000/en0609030000/en0609030200/en0609030202/cm2568458161.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609030000/en0609030200/en0609030202/cm2568458161text.xml"/></content-media>

<content-text><p><b>MAC Address Structure</b></p><p>The MAC address value is a direct result of IEEE-enforced rules for vendors to ensure globally unique addresses for each Ethernet device. The rules established by IEEE require any vendor that sells Ethernet devices to register with IEEE. The IEEE assigns the vendor a 3-byte code, called the Organizationally Unique Identifier (OUI). </p><p>IEEE requires a vendor to follow two simple rules: </p><ul><li>          All MAC addresses assigned to a NIC or other Ethernet device must use that vendor's assigned OUI as the first 3 bytes.</li>  <li>          All MAC addresses with the same OUI must be assigned a unique value (vendor code or serial number) in the last 3 bytes.</li></ul>    <p>The MAC address is often referred to as a <i>burned-in address</i> (BIA) because it is burned into ROM (Read-Only Memory) on the NIC. This means that the address is encoded into the ROM chip permanently - it cannot be changed by software. </p><p>However, when the computer starts up, the NIC copies the address into RAM. When examining frames, it is the address in <content-link target="cg5348350795" type="glossary">RAM</content-link> that is used as the source address to compare with the destination address. The MAC address is used by the NIC to determine if a message should be passed to the upper layers for processing. </p><p><b>Network Devices</b></p><p>When the source device is forwarding the message to an Ethernet network, the header information within the destination MAC address is attached. The source device sends the data through the network. Each NIC in the network views the information to see if the MAC address matches its physical address. If there is no match, the device discards the frame. When the frame reaches the destination where the MAC of the NIC matches the destination MAC of the frame, the NIC passes the frame up the OSI layers, where the decapsulation process take place. </p><p>All devices connected to an Ethernet LAN have MAC-addressed interfaces. Different hardware and software manufacturers might represent the MAC address in different hexadecimal formats. The address formats might be similar to 00-05-9A-3C-78-00, 00:05:9A:3C:78:00, or 0005.9A3C.7800. MAC addresses are assigned to workstations, servers, printers, switches, and routers - any device that must originate and/or receive data on the network.</p></content-text>
</page>
</topic>
<topic type="" id="en0609030300"><title><content-text>Hexadecimal Numbering and Addressing</content-text></title>
<page type="OneColumn" id="en0609030301">
<content-media type="StaticGraphic" id="cm5743356254"><title><content-text></content-text></title><media ref="en0609000000/en0609030000/en0609030300/en0609030301/cm5743356254.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609030000/en0609030300/en0609030301/cm5743356254text.xml"/></content-media>

<content-text><p><b>Hexadecimal Numbering</b></p><p>Hexadecimal ("Hex") is a convenient way to represent binary values. Just as decimal is a base ten numbering system and binary is base two, hexadecimal is a base sixteen system.</p><p>The base 16 numbering system uses the numbers 0 to 9 and the letters A to F. The figure shows the equivalent decimal, binary, and hexadecimal values for binary 0000 to 1111. It is easier for us to express a value as a single hexadecimal digit than as four bits. </p><p><b>Understanding Bytes</b></p><p>Given that 8 bits (a byte) is a common binary grouping, binary 00000000 to 11111111 can be represented in hexadecimal as the range 00 to FF. Leading zeroes are always displayed to complete the 8-bit representation. For example, the binary value 0000 1010 is shown in hexadecimal as 0A.</p><p><b>Representing Hexadecimal Values</b></p><p><b>Note: </b>It is important to distinguish hexadecimal values from decimal values regarding the characters 0 to 9, as shown in the figure. </p><p>Hexadecimal is usually represented in text by the value preceded by 0x (for example 0x73) or a subscript 16. Less commonly, it may be followed by an H, for example 73H. However, because subscript text is not recognized in command line or programming environments, the technical representation of hexadecimal is preceded with "0x" (zero X). Therefore, the examples above would be shown as 0x0A and 0x73 respectively.</p><p>Hexadecimal is used to represent Ethernet MAC addresses and IP Version 6 addresses. You have seen hexadecimal used in the Packets Byte pane of Wireshark where it is used to represent the binary values within frames and packets. </p><p><b>Hexadecimal Conversions</b></p><p>Number conversions between decimal and hexadecimal values are straightforward, but quickly dividing or multiplying by 16 is not always convenient. If such conversions are required, it is usually easier to convert the decimal or hexadecimal value to binary, and then to convert the binary value to either decimal or hexadecimal as appropriate. </p><p>With practice, it is possible to recognize the binary bit patterns that match the decimal and hexadecimal values. The figure shows these patterns for selected 8-bit values.</p></content-text>
</page>
<page type="OneColumn" id="en0609030302">
<content-media type="StaticGraphic" id="cm2714049525"><title><content-text></content-text></title><media ref="en0609000000/en0609030000/en0609030300/en0609030302/cm2714049525.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609030000/en0609030300/en0609030302/cm2714049525text.xml"/></content-media>

<content-text><p><b>Viewing the MAC</b></p><p>A tool to examine the MAC address of our computer is the ipconfig /all or ifconfig. In the graphic, notice the MAC address of this computer. If you have access, you may wish to try this on your own computer.</p><p>You may want to research the OUI of the MAC address to determine the manufacturer of you NIC</p></content-text>
</page>
</topic>
<topic type="" id="en0609030400"><title><content-text>Another Layer of Addressing</content-text></title>
<page type="OneColumn" id="en0609030401">
<content-media type="StaticGraphic" id="cm7617914499"><title><content-text></content-text></title><media ref="en0609000000/en0609030000/en0609030400/en0609030401/cm7617914499.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609030000/en0609030400/en0609030401/cm7617914499text.xml"/></content-media>

<content-text><p><b>Data Link Layer</b></p><p>OSI Data Link layer (Layer 2) physical addressing, implemented as an Ethernet MAC address, is used to transport the frame across the local media. Although providing unique host addresses, physical addresses are non-hierarchical. They are associated with a particular device regardless of its location or to which network it is connected.</p><p>These Layer 2 addresses have no meaning outside the local network media. A packet may have to traverse a number of different Data Link technologies in local and wide area networks before it reaches its destination. A source device therefore has no knowledge of the technology used in intermediate and destination networks or of their Layer 2 addressing and frame structures.</p><p><b>Network Layer</b></p><p>Network layer (Layer 3) addresses, such as IPv4 addresses, provide the ubiquitous, logical addressing that is understood at both source and destination. To arrive at its eventual destination, a packet carries the destination Layer 3 address from its source. However, as it is framed by the different Data Link layer protocols along the way, the Layer 2 address it receives each time applies only to that local portion of the journey and its media.</p><p>In short:</p><ul><li>          The Network layer address enables the packet to be forwarded toward its destination.</li>  <li>          The Data Link layer address enables the packet to be carried by the local media across each segment.</li></ul>
</content-text>
</page>
</topic>
<topic type="" id="en0609030500"><title><content-text>Ethernet Unicast, Multicast & Broadcast</content-text></title>
<page type="OneColumn" id="en0609030501">
<content-media type="AnimationPartialScreen" id="cm4953746630"><title><content-text></content-text></title><media ref="en0609000000/en0609030000/en0609030500/en0609030501/cm4953746630.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609030000/en0609030500/en0609030501/cm4953746630text.xml"/></content-media>

<content-text><p>In Ethernet, different MAC addresses are used for Layer 2 <b>unicast</b>, <b>multicast</b>, and <b>broadcast</b> communications. </p><p> </p><p><b>Unicast</b></p><p>A unicast MAC address is the unique address used when a frame is sent from a single transmitting device to single destination device.</p><p>In the example shown in the figure, a host with IP address 192.168.1.5 (source) requests a web page from the server at IP addresses 192.168.1.200. For a unicast packet to be sent and received, a destination IP address must be in the IP packet header. A corresponding destination MAC address must also be present in the Ethernet frame header. The IP address and MAC address combine to deliver data to one specific destination host.</p></content-text>
</page>
<page type="OneColumn" id="en0609030502">
<content-media type="AnimationPartialScreen" id="cm6551580565"><title><content-text></content-text></title><media ref="en0609000000/en0609030000/en0609030500/en0609030502/cm6551580565.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609030000/en0609030500/en0609030502/cm6551580565text.xml"/></content-media>

<content-text><p><b>Broadcast</b></p><p> </p><p>With a broadcast, the packet contains a destination IP address that has all ones (1s) in the host portion. This numbering in the address means that all hosts on that local network (broadcast domain) will receive and process the packet. Many network protocols, such as Dynamic Host Configuration Protocol (DHCP) and <content-link target="cg3985005157" type="glossary">Address Resolution Protocol (ARP)</content-link>, use broadcasts. How ARP uses broadcasts to map Layer 2 to Layer 3 addresses is discussed later in this chapter.</p><p>As shown in the figure, a broadcast IP address for a network needs a corresponding broadcast MAC address in the Ethernet frame. On Ethernet networks, the broadcast MAC address is 48 ones displayed as Hexadecimal FF-FF-FF-FF-FF-FF. </p></content-text>
</page>
<page type="OneColumn" id="en0609030503">
<content-media type="AnimationPartialScreen" id="cm2942714352"><title><content-text></content-text></title><media ref="en0609000000/en0609030000/en0609030500/en0609030503/cm2942714352.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609030000/en0609030500/en0609030503/cm2942714352text.xml"/></content-media>

<content-text><p><b>Multicast</b></p><p>Recall that multicast addresses allow a source device to send a packet to a group of devices. Devices that belong to a multicast group are assigned a multicast group IP address. The range of multicast addresses is from 224.0.0.0 to 239.255.255.255. Because multicast addresses represent a group of addresses (sometimes called a host group), they can only be used as the destination of a packet. The source will always have a unicast address. </p><p>Examples of where multicast addresses would be used are in remote gaming, where many players are connected remotely but playing the same game, and distance learning through video conferencing, where many students are connected to the same class. </p><p>As with the unicast and broadcast addresses, the multicast IP address requires a corresponding multicast MAC address to actually deliver frames on a local network. The multicast MAC address is a special value that begins with 01-00-5E in hexadecimal. The value ends by converting the lower 23 bits of the IP multicast group address into the remaining 6 hexadecimal characters of the Ethernet address. The remaining bit in the MAC address is always a "0".</p><p>An example, as shown in the graphic, is hexadecimal 01-00-5E-00-00-0A. Each hexadecimal character is 4 binary bits. </p><p><content-link target="http://www.iana.org/assignments/ethernet-numbers" type="external">http://www.iana.org/assignments/ethernet-numbers</content-link> </p><p><content-link target="http://www.cisco.com/univercd/cc/td/doc/product/webscale/uce/acns51/deploy51/51ipmul.htm" type="external">http://www.cisco.com/univercd/cc/td/doc/product/webscale/uce/acns51/deploy51/51ipmul.htm</content-link> </p><p><content-link target="http://www.cisco.com/univercd/cc/td/doc/cisintwk/ito_doc/ipmulti.htm" type="external">http://www.cisco.com/univercd/cc/td/doc/cisintwk/ito_doc/ipmulti.htm</content-link> </p></content-text>
</page>
</topic>
</section>
<section type="" id="en0609040000"><title><content-text>Ethernet Media Access Control</content-text></title>
<topic type="" id="en0609040100"><title><content-text>Media Access Control in Ethernet</content-text></title>
<page type="OneColumn" id="en0609040101">
<content-media type="StaticGraphic" id="cm6963618950"><title><content-text></content-text></title><media ref="en0609000000/en0609040000/en0609040100/en0609040101/cm6963618950.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609040000/en0609040100/en0609040101/cm6963618950text.xml"/></content-media>

<content-text><p>In a shared media environment, all devices have guaranteed access to the medium, but they have no prioritized claim on it. If more than one device transmits simultaneously, the physical signals collide and the network must recover in order for communication to continue. </p><p>Collisions are the cost that Ethernet pays to get the low overhead associated with each transmission.</p><p>Ethernet uses Carrier Sense Multiple Access with Collision Detection (CSMA/CD) to detect and handle collisions and manage the resumption of communications.</p><p>Because all computers using Ethernet send their messages on the same media, a distributed coordination scheme (CSMA) is used to detect the electrical activity on the cable. A device can then determine when it can transmit. When a device detects that no other computer is sending a frame, or carrier signal, the device will transmit, if it has something to send.</p></content-text>
</page>
</topic>
<topic type="" id="en0609040200"><title><content-text>CSMA/CD - The Process</content-text></title>
<page type="OneColumn" id="en0609040201">
<content-media type="AnimationPartialScreen" id="cm4650031624"><title><content-text></content-text></title><media ref="en0609000000/en0609040000/en0609040200/en0609040201/cm4650031624.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609040000/en0609040200/en0609040201/cm4650031624text.xml"/></content-media>

<content-text><p><b>Carrier Sense</b></p><p>In the CSMA/CD access method, all network devices that have messages to send must listen before transmitting. </p><p>If a device detects a signal from another device, it will wait for a specified amount of time before attempting to transmit. </p><p>When there is no traffic detected, a device will transmit its message. While this transmission is occurring, the device continues to listen for traffic or collisions on the LAN. After the message is sent, the device returns to its default listening mode. </p><p><b>Multi-access</b></p><p>If the distance between devices is such that the <content-link target="cg4811270693" type="glossary">latency</content-link> of one device's signals means that signals are not detected by a second device, the second device may start to transmit, too. The media now has two devices transmitting their signals at the same time. Their messages will propagate across the media until they encounter each other. At that point, the signals mix and the message is destroyed. Although the messages are corrupted, the jumble of remaining signals continues to propagate across the media.</p><p><b>Collision Detection</b></p><p>When a device is in listening mode, it can detect when a collision occurs on the shared media. The detection of a collision is made possible because all devices can detect an increase in the amplitude of the signal above the normal level.</p><p>Once a collision occurs, the other devices in listening mode - as well as all the transmitting devices - will detect the increase in the signal amplitude. Once detected, every device transmitting will continue to transmit to ensure that all devices on the network detect the collision. </p><p><b>Jam Signal and Random Backoff</b></p><p>Once the collision is detected by the transmitting devices, they send out a jamming signal. This jamming signal is used to notify the other devices of a collision, so that they will invoke a backoff algorithm. This backoff algorithm causes all devices to stop transmitting for a random amount of time, which allows the collision signals to subside. </p><p>After the delay has expired on a device, the device goes back into the "listening before transmit" mode. A random backoff period ensures that the devices that were involved in the collision do not try to send their traffic again at the same time, which would cause the whole process to repeat. But, this also means that a third device may transmit before either of the two involved in the original collision have a chance to re-transmit. </p></content-text>
</page>
<page type="OneColumn" id="en0609040202">
<content-media type="StaticGraphic" id="cm7313588853"><title><content-text></content-text></title><media ref="en0609000000/en0609040000/en0609040200/en0609040202/cm7313588853.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609040000/en0609040200/en0609040202/cm7313588853text.xml"/></content-media>

<content-text><p><b>Hubs and Collision Domains</b></p><p>Given that collisions will occur occasionally in any shared media topology - even when employing CSMA/CD - we need to look at the conditions that can result in an increase in collisions. Because of the rapid growth of the Internet:</p><ul><li>          More devices are being connected to the network.</li>  <li>          Devices access the network media more frequently.</li>  <li>          Distances between devices are increasing.</li></ul>    <p>Recall that hubs were created as intermediary network devices that enable more nodes to connect to the shared media. Also known as multi-port repeaters, hubs retransmit received data signals to all connected devices, except the one from which it received the signals. Hubs do not perform network functions such as directing data based on addresses. </p><p>Hubs and repeaters are intermediary devices that extend the distance that Ethernet cables can reach. Because hubs operate at the Physical layer, dealing only with the signals on the media, collisions can occur between the devices they connect and within the hubs themselves.</p><p>Further, using hubs to provide network access to more users reduces the performance for each user because the fixed capacity of the media has to be shared between more and more devices.</p><p>The connected devices that access a common media via a hub or series of directly connected hubs make up what is known as a <i>collision domain</i>. A <content-link target="cg4706684502" type="glossary">collision domain</content-link> is also referred to as a <i>network segment</i>. Hubs and repeaters therefore have the effect of increasing the size of the collision domain.</p><p>As shown in the figure, the interconnection of hubs form a physical topology called an extended star. The extended star can create a greatly expanded collision domain.</p><p>An increased number of collisions reduces the network's efficiency and effectiveness until the collisions become a nuisance to the user.</p><p>Although CSMA/CD is a frame collision management system, it was designed to manage collisions for only limited numbers of devices and on networks with light network usage. Therefore, other mechanisms are required when large numbers of users require access and when more active network access is needed.</p><p>We will see that using switches in place of hubs can begin to alleviate this problem.</p><p><content-link target="http://standards.ieee.org/getieee802/802.3.html" type="external">http://standards.ieee.org/getieee802/802.3.html</content-link> </p></content-text>
</page>
<page type="OneColumn" id="en0609040203">
<content-media type="ActivityPKA" id="cm9904602297"><title><content-text></content-text></title><media ref="en0609000000/en0609040000/en0609040200/en0609040203/cm9904602297/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en0609000000/en0609040000/en0609040200/en0609040203/cm9904602297/icontext.xml"/></content-media>

<content-text><p>In this Packet Tracer Activity, you will build large collision domains to view the effects of collisions on data transmission and network operation.</p><p><b>Click the Packet Tracer icon to launch the Packet Tracer activity</b></p></content-text>
</page>
</topic>
<topic type="" id="en0609040300"><title><content-text>Ethernet Timing</content-text></title>
<page type="OneColumn" id="en0609040301">
<content-media type="StaticGraphic" id="cm3236907617"><title><content-text></content-text></title><media ref="en0609000000/en0609040000/en0609040300/en0609040301/cm3236907617.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609040000/en0609040300/en0609040301/cm3236907617text.xml"/></content-media>

<content-text><p>Faster Physical layer implementations of Ethernet introduce complexities to the management of collisions.</p><p><b>Latency</b></p><p>As discussed, each device that wants to transmit must first "listen" to the media to check for traffic. If no traffic exists, the station will begin to transmit immediately. The electrical signal that is transmitted takes a certain amount of time (latency) to propagate (travel) down the cable. Each hub or repeater in the signal's path adds latency as it forwards the bits from one port to the next.</p><p>This accumulated delay increases the likelihood that collisions will occur because a listening node may transition into transmitting while the hub or repeater is processing the message. Because the signal had not reached this node while it was listening, it thought that the media was available. This condition often results in collisions. </p></content-text>
</page>
<page type="OneColumn" id="en0609040302">
<content-media type="StaticGraphic" id="cm7135965537"><title><content-text></content-text></title><media ref="en0609000000/en0609040000/en0609040300/en0609040302/cm7135965537.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609040000/en0609040300/en0609040302/cm7135965537text.xml"/></content-media>

<content-text><p><b>Timing and Synchronization</b></p><p>In half-duplex mode, if a collision has not occurred, the sending device will transmit 64 bits of timing synchronization information, which is known as the Preamble. </p><p>The sending device will then transmit the complete frame.</p><p>Ethernet with throughput speeds of 10 Mbps and slower are <i>asynchronous</i>. An asynchronous communication in this context means that each receiving device will use the 8 bytes of timing information to synchronize the receive circuit to the incoming data and then discard the 8 bytes.</p><p>Ethernet implementations with throughput of 100 Mbps and higher are <i>synchronous</i>. Synchronous communication in this context means that the timing information is not required. However, for compatibility reasons, the Preamble and Start Frame Delimiter (SFD) fields are still present.</p></content-text>
</page>
<page type="OneColumn" id="en0609040303">
<content-media type="StaticGraphic" id="cm9684654230"><title><content-text></content-text></title><media ref="en0609000000/en0609040000/en0609040300/en0609040303/cm9684654230.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609040000/en0609040300/en0609040303/cm9684654230text.xml"/></content-media>

<content-text><p><b>Bit Time</b></p><p>For each different media speed, a period of time is required for a bit to be placed and sensed on the media. This period of time is referred to as the bit time. On 10-Mbps Ethernet, one bit at the MAC layer requires 100 nanoseconds (nS) to transmit. At 100 Mbps, that same bit requires 10 nS to transmit. And at 1000 Mbps, it only takes 1 nS to transmit a bit. As a rough estimate, 20.3 centimeters (8 inches) per nanosecond is often used for calculating the propagation delay on a UTP cable. The result is that for 100 meters of UTP cable, it takes just under 5 bit times for a 10BASE-T signal to travel the length the cable.</p><p>For CSMA/CD Ethernet to operate, the sending device must become aware of a collision before it has completed transmission of a minimum-sized frame. At 100 Mbps, the device timing is barely able to accommodate 100 meter cables. At 1000 Mbps, special adjustments are required because nearly an entire minimum-sized frame would be transmitted before the first bit reached the end of the first 100 meters of UTP cable. For this reason, half-duplex mode is not permitted in 10-Gigabit Ethernet. </p><p>These timing considerations have to be applied to the <i>interframe spacing </i>and <i>backoff times</i> (both of which are discussed in the next section) to ensure that when a device transmits its next frame, the risk of a collision is minimized.</p><p><b>Slot Time</b></p><p>In half-duplex Ethernet, where data can only travel in one direction at once, <i>slot time</i> becomes an important parameter in determining how many devices can share a network. For all speeds of Ethernet transmission at or below 1000 Mbps, the standard describes how an individual transmission may be no smaller than the slot time.</p><p>Determining <content-link target="cg5287267468" type="glossary">slot time</content-link> is a trade-off between the need to reduce the impact of collision recovery (backoff and retransmission times) and the need for network distances to be large enough to accommodate reasonable network sizes. The compromise was to choose a maximum network diameter (about 2500 meters) and then to set the minimum frame length long enough to ensure detection of all worst-case collisions.</p><p>Slot time for 10- and 100-Mbps Ethernet is 512 bit times, or 64 octets. Slot time for 1000-Mbps Ethernet is 4096 bit times, or 512 octets.</p><p>The slot time ensures that if a collision is going to occur, it will be detected within the first 512 bits (4096 for Gigabit Ethernet) of the frame transmission. This simplifies the handling of frame retransmissions following a collision.</p><p>Slot time is an important parameter for the following reasons:</p><ul><li> The 512-bit slot time establishes the minimum size of an Ethernet frame as 64 bytes. Any frame less than 64 bytes in length is considered a "collision fragment" or "<content-link target="cg2331760120" type="glossary">runt frame</content-link>" and is automatically discarded by receiving stations.</li>  <li> The slot time establishes a limit on the maximum size of a network's segments. If the network grows too big, late collisions can occur. Late collisions are considered a failure in the network because the collision is detected too late by a device during the frame transmission to be automatically handled by CSMA/CD.</li></ul>    <p>Slot time is calculated assuming maximum cable lengths on the largest legal network architecture. All hardware propagation delay times are at the legal maximum and the 32-bit jam signal is used when collisions are detected. </p><p><b>The actual calculated slot time is just longer than the theoretical amount of time required to travel between the furthest points of the collision domain, collide with another transmission at the last possible instant, and then have the collision fragments return to the sending station and be detected.</b> See the figure.</p><p>For the system to work properly, the first device must learn about the collision before it finishes sending the smallest legal frame size.</p><p>To allow 1000 Mbps Ethernet to operate in half-duplex mode, the extension field was added to the frame when sending small frames purely to keep the transmitter busy long enough for a <content-link target="cg3909314749" type="glossary">collision fragment</content-link> to return. This field is present only on 1000-Mbps, half-duplex links and allows minimum-sized frames to be long enough to meet slot time requirements. Extension bits are discarded by the receiving device. </p></content-text>
</page>
</topic>
<topic type="" id="en0609040400"><title><content-text>Interframe Spacing and Backoff</content-text></title>
<page type="OneColumn" id="en0609040401">
<content-media type="StaticGraphic" id="cm4131251331"><title><content-text></content-text></title><media ref="en0609000000/en0609040000/en0609040400/en0609040401/cm4131251331.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609040000/en0609040400/en0609040401/cm4131251331text.xml"/></content-media>

<content-text><p><b>Interframe Spacing</b></p><p>The Ethernet standards require a minimum spacing between two non-colliding frames. This gives the media time to stabilize after the transmission of the previous frame and time for the devices to process the frame. Referred to as the <i>interframe spacing</i>, this time is measured from the last bit of the FCS field of one frame to the first bit of the Preamble of the next frame. </p><p>After a frame has been sent, all devices on a 10 Mbps Ethernet network are required to wait a minimum of 96 bit times (9.6 microseconds) before any device can transmit its next frame. On faster versions of Ethernet, the spacing remains the same - 96 bit times - but the interframe spacing time period grows correspondingly shorter. </p><p>Synchronization delays between devices may result in the loss of some of frame preamble bits. This in turn may cause minor reduction of the interframe spacing when hubs and repeaters regenerate the full 64 bits of timing information (the Preamble and SFD) at the start of every frame forwarded. On higher speed Ethernet some time sensitive devices could potentially fail to recognize individual frames resulting in communication failure.</p></content-text>
</page>
<page type="OneColumn" id="en0609040402">
<content-media type="StaticGraphic" id="cm9981791278"><title><content-text></content-text></title><media ref="en0609000000/en0609040000/en0609040400/en0609040402/cm9981791278.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609040000/en0609040400/en0609040402/cm9981791278text.xml"/></content-media>

<content-text><p><b>Jam Signal</b></p><p>As you will recall, Ethernet allows all devices to compete for transmitting time. In the event that two devices transmit simultaneously, the network CSMA/CD attempts to resolve the issue. But remember, when a larger number of devices are added to the network, it is possible for the collisions to become increasingly difficult to resolve. </p><p>As soon as a collision is detected, the sending devices transmit a 32-bit "jam" signal that will enforce the collision. This ensures all devices in the LAN to detect the collision. </p><p>It is important that the jam signal not be detected as a valid frame; otherwise the collision would not be identified. The most commonly observed data pattern for a jam signal is simply a repeating 1, 0, 1, 0 pattern, the same as the Preamble. </p><p>The corrupted, partially transmitted messages are often referred to as collision fragments or runts. Normal collisions are less than 64 octets in length and therefore fail both the minimum length and the FCS tests, making them easy to identify. </p></content-text>
</page>
<page type="OneColumn" id="en0609040403">
<content-media type="StaticGraphic" id="cm2501977966"><title><content-text></content-text></title><media ref="en0609000000/en0609040000/en0609040400/en0609040403/cm2501977966.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609040000/en0609040400/en0609040403/cm2501977966text.xml"/></content-media>

<content-text><p><b>Backoff Timing</b></p><p>After a collision occurs and all devices allow the cable to become idle (each waits the full interframe spacing), the devices whose transmissions collided must wait an additional - and potentially progressively longer - period of time before attempting to retransmit the collided frame. The waiting period is intentionally designed to be random so that two stations do not delay for the same amount of time before retransmitting, which would result in more collisions. This is accomplished in part by expanding the interval from which the random retransmission time is selected on each retransmission attempt. The waiting period is measured in increments of the parameter slot time. </p><p>If media congestion results in the MAC layer unable to send the frame after 16 attempts, it gives up and generates an error to the Network layer. Such an occurrence is rare in a properly operating network and would happen only under extremely heavy network loads or when a physical problem exists on the network.</p><p> </p><p>The methods described in this section allowed Ethernet to provide greater service in a shared media topology based on the use of hubs. In the coming switching section, we will see how, with the use of switches, the need for CSMA/CD starts to diminish or, in some cases, is removed altogether.</p></content-text>
</page>
</topic>
</section>
<section type="" id="en0609050000"><title><content-text>Ethernet Physical Layer</content-text></title>
<topic type="" id="en0609050100"><title><content-text>Overview of  Ethernet Physical Layer</content-text></title>
<page type="OneColumn" id="en0609050101">
<content-media type="StaticGraphic" id="cm7178994009"><title><content-text></content-text></title><media ref="en0609000000/en0609050000/en0609050100/en0609050101/cm7178994009.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609050000/en0609050100/en0609050101/cm7178994009text.xml"/></content-media>

<content-text><p>The differences between standard Ethernet, Fast Ethernet, Gigabit Ethernet, and 10 Gigabit Ethernet occur at the Physical layer, often referred to as the <i>Ethernet PHY</i>. </p><p>Ethernet is covered by the IEEE 802.3 standards. Four data rates are currently defined for operation over optical fiber and twisted-pair cables: </p><ul><li>          10 Mbps - 10Base-T Ethernet </li>  <li>          100 Mbps - Fast Ethernet </li>  <li>          1000 Mbps - Gigabit Ethernet </li>  <li>          10 Gbps - 10 Gigabit Ethernet </li></ul>    <p>While there are many different implementations of Ethernet at these various data rates, only the more common ones will be presented here. The figure shows some of the <content-link target="cg8397016540" type="glossary">Ethernet PHY</content-link> characteristics.</p><p>The portion of Ethernet that operates on the Physical layer will be discussed in this section, beginning with 10Base-T and continuing to 10 Gbps varieties. </p></content-text>
</page>
</topic>
<topic type="" id="en0609050200"><title><content-text>10 and 100 Mbps Ethernet</content-text></title>
<page type="OneColumn" id="en0609050201">
<content-media type="StaticGraphic" id="cm2760324568"><title><content-text></content-text></title><media ref="en0609000000/en0609050000/en0609050200/en0609050201/cm2760324568.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609050000/en0609050200/en0609050201/cm2760324568text.xml"/></content-media>

<content-text><p>The principal 10 Mbps implementations of Ethernet include:</p><ul><li> 10BASE5 using Thicknet coaxial cable</li>  <li> 10BASE2 using Thinnet coaxial cable</li>  <li> 10BASE-T using Cat3/Cat5 unshielded twisted-pair cable</li></ul>    <p>The early implementations of Ethernet, 10BASE5, and 10BASE2 used coaxial cable in a physical bus. These implementations are no longer used and are not supported by the newer 802.3 standards. </p><p><b>10 Mbps Ethernet - 10BASE-T </b></p><p>10BASE-T uses Manchester-encoding over two unshielded twisted-pair cables. The early implementations of 10BASE-T used Cat3 cabling. However, Cat5 or later cabling is typically used today. </p><p>10 Mbps Ethernet is considered to be classic Ethernet and uses a physical star topology. Ethernet 10BASE-T links could be up to 100 meters in length before requiring a hub or repeater.</p><p>10BASE-T uses two pairs of a four-pair cable and is terminated at each end with an 8-pin RJ-45 connector. The pair connected to pins 1 and 2 are used for transmitting and the pair connected to pins 3 and 6 are used for receiving. The figure shows the RJ45 pinout used with 10BASE-T Ethernet.</p><p>10BASE-T is generally not chosen for new LAN installations. However, there are still many 10BASE-T Ethernet networks in existence today. The replacement of hubs with switches in 10BASE-T networks has greatly increased the throughput available to these networks and has given Legacy Ethernet greater longevity. The 10BASE-T links connected to a switch can support either half-duplex or full-duplex operation. </p></content-text>
</page>
<page type="OneColumn" id="en0609050202">
<content-media type="StaticGraphic" id="cm5196444968"><title><content-text></content-text></title><media ref="en0609000000/en0609050000/en0609050200/en0609050202/cm5196444968.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609050000/en0609050200/en0609050202/cm5196444968text.xml"/></content-media>

<content-text><p><b>100 Mbps - Fast Ethernet </b></p><p>In the mid to late 1990s, several new 802.3 standards were established to describe methods for transmitting data over Ethernet media at 100 Mbps. These standards used different encoding requirements for achieving these higher data rates. </p><p> </p><p>100 Mbps Ethernet, also known as Fast Ethernet, can be implemented using twisted-pair copper wire or fiber media. The most popular implementations of 100 Mbps Ethernet are:</p><ul><li> 100BASE-TX using Cat5 or later UTP</li>  <li> 100BASE-FX using fiber-optic cable</li></ul>    <p>Because the higher frequency signals used in Fast Ethernet are more susceptible to noise, two separate encoding steps are used by 100-Mbps Ethernet to enhance signal integrity.</p><p><b>100BASE-TX </b></p><p>100BASE-TX was designed to support transmission over either two pairs of Category 5 UTP copper wire or two strands of optical fiber. The 100BASE-TX implementation uses the same two pairs and pinouts of UTP as 10BASE-T. However, 100BASE-TX requires Category 5 or later UTP. The 4B/5B encoding is used for 100BASE-T Ethernet.</p><p>As with 10BASE-TX, 100Base-TX is connected as a physical star. The figure shows an example of a physical star topology. However, unlike 10BASE-T, 100BASE-TX networks typically use a switch at the center of the star instead of a hub. At about the same time that 100BASE-TX technologies became mainstream, LAN switches were also being widely deployed. These concurrent developments led to their natural combination in the design of 100BASE-TX networks.</p><p><b>100BASE-FX </b></p><p>The 100BASE-FX standard uses the same signaling procedure as 100BASE-TX, but over optical fiber media rather than UTP copper. Although the encoding, decoding, and clock recovery procedures are the same for both media, the signal transmission is different - electrical pulses in copper and light pulses in optical fiber. 100BASE-FX uses Low Cost Fiber Interface Connectors (commonly called the duplex SC connector). </p><p>Fiber implementations are point-to-point connections, that is, they are used to interconnect two devices. These connections may be between two computers, between a computer and a switch, or between two switches.</p></content-text>
</page>
</topic>
<topic type="" id="en0609050300"><title><content-text>1000 Mbps Ethernet</content-text></title>
<page type="OneColumn" id="en0609050301">
<content-media type="StaticGraphic" id="cm3119112658"><title><content-text></content-text></title><media ref="en0609000000/en0609050000/en0609050300/en0609050301/cm3119112658.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609050000/en0609050300/en0609050301/cm3119112658text.xml"/></content-media>

<content-text><p><b>1000 Mbps - Gigabit Ethernet </b></p><p>The development of Gigabit Ethernet standards resulted in specifications for UTP copper, single-mode fiber, and multimode fiber. On Gigabit Ethernet networks, bits occur in a fraction of the time that they take on 100 Mbps networks and 10 Mbps networks. With signals occurring in less time, the bits become more susceptible to noise, and therefore timing is critical. The question of performance is based on how fast the network adapter or interface can change voltage levels and how well that voltage change can be detected reliably 100 meters away, at the receiving NIC or interface. </p><p>At these higher speeds, encoding and decoding data is more complex. Gigabit Ethernet uses two separate encoding steps. Data transmission is more efficient when codes are used to represent the binary bit stream. Encoding the data enables synchronization, efficient usage of bandwidth, and improved signal-to-noise ratio characteristics.</p><p><b>1000BASE-T Ethernet</b></p><p>1000BASE-T Ethernet provides full-duplex transmission using all four pairs in Category 5 or later UTP cable. Gigabit Ethernet over copper wire enables an increase from 100 Mbps per wire pair to 125 Mbps per wire pair, or 500 Mbps for the four pairs. Each wire pair signals in full duplex, doubling the 500 Mbps to 1000 Mbps. </p><p>1000BASE-T uses 4D-PAM5 line encoding to obtain 1 Gbps data throughput. This encoding scheme enables the transmission signals over four wire pairs simultaneously. It translates an 8-bit byte of data into a simultaneous transmission of four code symbols (4D), which are sent over the media, one on each pair, as 5-level Pulse Amplitude Modulated (PAM5) signals. This means that every symbol corresponds to two bits of data. Because the information travels simultaneously across the four paths, the circuitry has to divide frames at the transmitter and reassemble them at the receiver. The figure shows a representation of the circuitry used by 1000BASE-T Ethernet.</p><p>1000BASE-T allows the transmission and reception of data in both directions - on the same wire and at the same time. This traffic flow creates permanent collisions on the wire pairs. These collisions result in complex voltage patterns. The hybrid circuits detecting the signals use sophisticated techniques such as echo cancellation, Layer 1 Forward Error Correction (FEC), and prudent selection of voltage levels. Using these techniques, the system achieves the 1-Gigabit throughput. </p><p>To help with synchronization, the Physical layer encapsulates each frame with start-of-stream and end-of-stream delimiters. Loop timing is maintained by continuous streams of IDLE symbols sent on each wire pair during the interframe spacing. </p><p>Unlike most digital signals where there are usually a couple of discrete voltage levels, 1000BASE-T uses many voltage levels. In idle periods, nine voltage levels are found on the cable. During data transmission periods, up to 17 voltage levels are found on the cable. With this large number of states, combined with the effects of noise, the signal on the wire looks more analog than digital. Like analog, the system is more susceptible to noise due to cable and termination problems. </p></content-text>
</page>
<page type="OneColumn" id="en0609050302">
<content-media type="StaticGraphic" id="cm9211417428"><title><content-text></content-text></title><media ref="en0609000000/en0609050000/en0609050300/en0609050302/cm9211417428.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609050000/en0609050300/en0609050302/cm9211417428text.xml"/></content-media>

<content-text><p><b>1000BASE-SX and 1000BASE-LX Ethernet Using Fiber-Optics</b></p><p>The fiber versions of Gigabit Ethernet - 1000BASE-SX and 1000BASE-LX - offer the following advantages over UTP: noise immunity, small physical size, and increased unrepeated distances and bandwidth. </p><p>All 1000BASE-SX and 1000BASE-LX versions support full-duplex binary transmission at 1250 Mbps over two strands of optical fiber. The transmission coding is based on the 8B/10B encoding scheme. Because of the overhead of this encoding, the data transfer rate is still 1000 Mbps.</p><p>Each data frame is encapsulated at the Physical layer before transmission, and link synchronization is maintained by sending a continuous stream of IDLE code groups during the interframe spacing. </p><p>The principal differences among the 1000BASE-SX and 1000BASE-LX fiber versions are the link media, connectors, and wavelength of the optical signal. These differences are shown in the figure.</p></content-text>
</page>
</topic>
<topic type="" id="en0609050400"><title><content-text>Ethernet - Future Options</content-text></title>
<page type="OneColumn" id="en0609050401">
<content-media type="StaticGraphic" id="cm2849326867"><title><content-text></content-text></title><media ref="en0609000000/en0609050000/en0609050400/en0609050401/cm2849326867.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609050000/en0609050400/en0609050401/cm2849326867text.xml"/></content-media>

<content-text><p>The IEEE 802.3ae standard was adapted to include 10 Gbps, full-duplex transmission over fiber-optic cable. The 802.3ae standard and the 802.3 standards for the original Ethernet are very similar. 10-Gigabit Ethernet (10GbE) is evolving for use not only in LANs, but also for use in WANs and MANs.</p><p>Because the frame format and other Ethernet Layer 2 specifications are compatible with previous standards, 10GbE can provide increased bandwidth to individual networks that is interoperable with the existing network infrastructure. </p><p>10Gbps can be compared to other varieties of Ethernet in these ways:</p><ul><li>          Frame format is the same, allowing interoperability between all varieties of legacy, fast, gigabit, and 10 gigabit Ethernet, with no reframing or protocol conversions necessary. </li>  <li>          Bit time is now 0.1 nS. All other time variables scale accordingly. </li>  <li>          Because only full-duplex fiber connections are used, there is no media contention and CSMA/CD is not necessary. </li>  <li>          The IEEE 802.3 sublayers within OSI Layers 1 and 2 are mostly preserved, with a few additions to accommodate 40 km fiber links and interoperability with other fiber technologies. </li></ul>    <p>With 10Gbps Ethernet, flexible, efficient, reliable, relatively low cost end-to-end Ethernet networks become possible. </p><p><b>Future Ethernet Speeds</b></p><p>Although 1-Gigabit Ethernet is now widely available and 10-Gigabit products are becoming more available, the IEEE and the 10-Gigabit Ethernet Alliance are working on 40-, 100-, or even 160-Gbps standards. The technologies that are adopted will depend on a number of factors, including the rate of maturation of the technologies and standards, the rate of adoption in the market, and the cost of emerging products. </p></content-text>
</page>
</topic>
</section>
<section type="" id="en0609060000"><title><content-text>Hubs and Switches</content-text></title>
<topic type="" id="en0609060100"><title><content-text>Legacy Ethernet - Using Hubs</content-text></title>
<page type="OneColumn" id="en0609060101">
<content-media type="StaticGraphic" id="cm1041355921"><title><content-text></content-text></title><media ref="en0609000000/en0609060000/en0609060100/en0609060101/cm1041355921.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609060000/en0609060100/en0609060101/cm1041355921text.xml"/></content-media>

<content-text><p>In previous sections, we have seen how classic Ethernet uses shared media and contention-based media access control. Classic Ethernet uses hubs to interconnect nodes on the LAN segment. Hubs do not perform any type of traffic filtering. Instead, the hub forwards all the bits to every device connected to the hub. This forces all the devices in the LAN to share the bandwidth of the media.</p><p>Additionally, this classic Ethernet implementation often results in high levels of collisions on the LAN. Because of these performance issues, this type of Ethernet LAN has limited use in today's networks. Ethernet implementations using hubs are now typically used only in small LANs or in LANs with low bandwidth requirements.</p><p>Sharing media among devices creates significant issues as the network grows. The figure illustrates some of the issues presented here.</p><p><b>Scalability</b></p><p>In a hub network, there is a limit to the amount of bandwidth that devices can share. With each device added to the shared media, the average bandwidth available to each device decreases. With each increase in the number of devices on the media, performance is degraded. </p><p><b>Latency</b></p><p>Network latency is the amount of time it takes a signal to reach all destinations on the media. Each node in a hub-based network has to wait for an opportunity to transmit in order to avoid collisions. Latency can increase significantly as the distance between nodes is extended. Latency is also affected by a delay of the signal across the media as well as the delay added by the processing of the signals through hubs and repeaters.<b> Increasing the length of media or the number of hubs and repeaters connected to a segment results in increased latency.</b> With greater latency, it is more likely that nodes will not receive initial signals, thereby increasing the collisions present in the network.</p><p><b>Network Failure</b></p><p>Because classic Ethernet shares the media, any device in the network could potentially cause problems for other devices. If any device connected to the hub generates detrimental traffic, the communication for all devices on the media could be impeded. This harmful traffic could be due to incorrect speed or full-duplex settings on a NIC. </p><p><b>Collisions</b></p><p>According to CSMA/CD, a node should not send a packet unless the network is clear of traffic. If two nodes send packets at the same time, a collision occurs and the packets are lost. Then both nodes send a jam signal, wait for a random amount of time, and retransmit their packets. Any part of the network where packets from two or more nodes can interfere with each other is considered a collision domain. A network with a larger number of nodes on the same segment has a larger collision domain and typically has more traffic. As the amount of traffic in the network increases, the likelihood of collisions increases.</p><p>Switches provide an alternative to the contention-based environment of classic Ethernet. </p></content-text>
</page>
</topic>
<topic type="" id="en0609060200"><title><content-text> Ethernet - Using Switches</content-text></title>
<page type="OneColumn" id="en0609060201">
<content-media type="AnimationPartialScreen" id="cm7109429606"><title><content-text></content-text></title><media ref="en0609000000/en0609060000/en0609060200/en0609060201/cm7109429606.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609060000/en0609060200/en0609060201/cm7109429606text.xml"/></content-media>

<content-text><p>In the last few years, switches have quickly become a fundamental part of most networks. <b>Switches allow the segmentation of the LAN into separate collision domains.</b> Each port of the switch represents a separate collision domain and provides the full media bandwidth to the node or nodes connected on that port. With fewer nodes in each collision domain, there is an increase in the average bandwidth available to each node, and collisions are reduced.</p><p>A LAN may have a centralized switch connecting to hubs that still provide the connectivity to nodes. Or, a LAN may have all nodes connected directly to a switch. Theses topologies are shown in the figure.</p><p>In a LAN where a hub is connected to a switch port, there is still shared bandwidth, which may result in collisions within the shared environment of the hub. However, the switch will isolate the segment and limit collisions to traffic between the hub's ports. </p></content-text>
</page>
<page type="OneColumn" id="en0609060202">
<content-media type="AnimationPartialScreen" id="cm1812808956"><title><content-text></content-text></title><media ref="en0609000000/en0609060000/en0609060200/en0609060202/cm1812808956.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609060000/en0609060200/en0609060202/cm1812808956text.xml"/></content-media>

<content-text><p><b>Nodes are Connected Directly</b></p><p>In a LAN where all nodes are connected directly to the switch, the throughput of the network increases dramatically. The three primary reasons for this increase are:</p><ul><li>          Dedicated bandwidth to each port</li>  <li>          Collision-free environment</li>  <li>          Full-duplex operation</li></ul>    <p>These physical star topologies are essentially point to point links.</p><p><b>Click the performance factors in the figure.</b></p><p><b>Dedicated Bandwidth</b></p><p>Each node has the full media bandwidth available in the connection between the node and the switch. Because a hub replicates the signals it receives and sends them to all other ports, classic Ethernet hubs form a logical bus. This means that all the nodes have to share the same bandwidth of this bus. With switches, each device effectively has a dedicated point-to-point connection between the device and the switch, without media contention. </p><p>As an example, compare two 100 Mbps LANs, each with 10 nodes. In network segment A, the 10 nodes are connected to a hub. Each node shares the available 100 Mbps bandwidth. This provides an average of 10 Mbps to each node. In network segment B, the 10 nodes are connected to a switch. In this segment, all 10 nodes have the full 100 Mbps bandwidth available to them. </p><p>Even in this small network example, the increase in bandwidth is significant. As the number of nodes increases, the discrepancy between the available bandwidth in the two implementations increases significantly. </p><p><b>Collision-Free Environment </b></p><p>A dedicated point-to-point connection to a switch also removes any media contention between devices, allowing a node to operate with few or no collisions. In a moderately-sized classic Ethernet network using hubs, approximately 40% to 50% of the bandwidth is consumed by collision recovery. In a switched Ethernet network - where there are virtually no collisions - the overhead devoted to collision recovery is virtually eliminated. This provides the switched network with significantly better throughput rates.</p><p><b>Full-Duplex Operation</b></p><p>Switching also allows a network to operate as a full-duplex Ethernet environment. Before switching existed, Ethernet was half-duplex only. This meant that at any given time, a node could either transmit or receive. With full-duplex enabled in a switched Ethernet network, the devices connected directly to the switch ports can transmit and receive simultaneously, at the full media bandwidth. </p><p>The connection between the device and the switch is collision-free. This arrangement effectively doubles the transmission rate when compared to half-duplex. For example, if the speed of the network is 100 Mbps, each node can transmit a frame at 100 Mbps and, at the same time, receive a frame at 100 Mbps. </p><p><b>Using Switches Instead of Hubs</b></p><p>Most modern Ethernet use switches to the end devices and operate full duplex. Because switches provide so much greater throughput than hubs and increase performance so dramatically, it is fair to ask: why not use switches in every Ethernet LAN? There are three reasons why hubs are still being used:</p><ul><li> Availability - LAN switches were not developed until the early 1990s and were not readily available until the mid 1990s. Early Ethernet networks used UTP hubs and many of them remain in operation to this day.</li>  <li> Economics - Initially, switches were rather expensive. As the price of switches has dropped, the use of hubs has decreased and cost is becoming less of a factor in deployment decisions. </li>  <li> Requirements - The early LAN networks were simple networks designed to exchange files and share printers. For many locations, the early networks have evolved into the converged networks of today, resulting in a substantial need for increased bandwidth available to individual users. In some circumstances, however, a shared media hub will still suffice and these products remain on the market.</li></ul>    <p>The next section explores the basic operation of switches and how a switch achieves the enhanced performance upon which our networks now depend. A later course will present more details and additional technologies related to switching.</p><p><content-link target="packetTracerInstructions.pdf" type="external">Packet Tracer Integration Challenge Directions</content-link> </p></content-text>
</page>
<page type="OneColumn" id="en0609060203">
<content-media type="ActivityPKA" id="cm4550138961"><title><content-text></content-text></title><media ref="en0609000000/en0609060000/en0609060200/en0609060203/cm4550138961/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en0609000000/en0609060000/en0609060200/en0609060203/cm4550138961/icontext.xml"/></content-media>

<content-text><p>In this activity, we provide a model for comparing the collisions found in hub-based networks with the collision-free behavior of switches.</p><p><b>Click the Packet Tracer icon for more details.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0609060300"><title><content-text>Switches - Selective Forwarding</content-text></title>
<page type="OneColumn" id="en0609060301">
<content-media type="StaticGraphic" id="cm5288099961"><title><content-text></content-text></title><media ref="en0609000000/en0609060000/en0609060300/en0609060301/cm5288099961.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609060000/en0609060300/en0609060301/cm5288099961text.xml"/></content-media>

<content-text><p>Ethernet switches selectively forward individual frames from a receiving port to the port where the destination node is connected. This <content-link target="cg7724903685" type="glossary">selective forwarding</content-link> process can be thought of as establishing a momentary point-to-point connection between the transmitting and receiving nodes. The connection is made only long enough to forward a single frame. During this instant, the two nodes have a full bandwidth connection between them and represent a logical point-to-point connection.</p><p>To be technically accurate, this temporary connection is not made between the two nodes simultaneously. In essence, this makes the connection between hosts a point-to-point connection. In fact, any node operating in full-duplex mode can transmit anytime it has a frame, without regard to the availability of the receiving node. This is because a LAN switch will buffer an incoming frame and then forward it to the proper port when that port is idle. This process is referred to as store and forward.</p><p>With <content-link target="cg6979837527" type="glossary">store and forward</content-link> switching, the switch receives the entire frame, checks the FSC for errors, and forwards the frame to the appropriate port for the destination node. Because the nodes do not have to wait for the media to be idle, the nodes can send and receive at full media speed without losses due to collisions or the overhead associated with managing collisions.</p><p><b>Forwarding is Based on the Destination MAC</b></p><p>The switch maintains a table, called a <i>MAC table</i>. that matches a destination MAC address with the port used to connect to a node. For each incoming frame, the destination MAC address in the frame header is compared to the list of addresses in the MAC table. If a match is found, the port number in the table that is paired with the MAC address is used as the exit port for the frame.</p><p>The MAC table can be referred to by many different names. It is often called the <i>switch table</i>. Because switching was derived from an older technology called <content-link target="cg5845849849" type="glossary">transparent bridging</content-link>, the table is sometimes called the <content-link target="cg5352285170" type="glossary">bridge</content-link> table. For this reason, many processes performed by LAN switches can contain <i>bridge</i> or <i>bridging</i> in their names.</p><p>A bridge is a device used more commonly in the early days of LAN to connect - or bridge - two physical network segments. Switches can be used to perform this operation as well as allowing end device connectivity to the LAN. Many other technologies have been developed around LAN switching. Many of these technologies will be presented in a later course. One place where bridges are prevalent is in Wireless networks. We use Wireless Bridges to interconnect two wireless network segments. Therefore, you may find both terms - <i>switching </i>and <i>bridging</i> - in use by the networking industry.</p></content-text>
</page>
<page type="OneColumn" id="en0609060302">
<content-media type="StaticGraphic" id="cm4875160972"><title><content-text></content-text></title><media ref="en0609000000/en0609060000/en0609060300/en0609060302/cm4875160972.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609060000/en0609060300/en0609060302/cm4875160972text.xml"/></content-media>

<content-text><p><b>Switch Operation </b></p><p>To accomplish their purpose, Ethernet LAN switches use five basic operations: </p><ul><li>          Learning </li>  <li>          Aging </li>  <li>          Flooding </li>  <li>          Selective Forwarding </li>  <li>          Filtering </li></ul>    <p><b>Learning</b></p><p>The MAC table must be populated with MAC addresses and their corresponding ports. The Learning process allows these mappings to be dynamically acquired during normal operation. </p><p>As each frame enters the switch, the switch examines the source MAC address. Using a lookup procedure, the switch determines if the table already contains an entry for that MAC address. If no entry exists, the switch creates a new entry in the MAC table using the source MAC address and pairs the address with the port on which the entry arrived. The switch now can use this mapping to forward frames to this node.</p><p><b>Aging</b></p><p>The entries in the MAC table acquired by the Learning process are time stamped. This timestamp is used as a means for removing old entries in the MAC table. After an entry in the MAC table is made, a procedure begins a countdown, using the timestamp as the beginning value. After the value reaches 0, the entry in the table will be refreshed when the switch next receives a frame from that node on the same port. </p><p><b>Flooding</b></p><p>If the switch does not know to which port to send a frame because the destination MAC address is not in the MAC table, the switch sends the frame to all ports except the port on which the frame arrived. The process of sending a frame to all segments is known as <i>flooding</i><b>.</b> The switch does not forward the frame to the port on which it arrived because any destination on that segment will have already received the frame. Flooding is also used for frames sent to the broadcast MAC address.</p><p><b>Selective Forwarding</b></p><p>Selective forwarding is the process of examining a frame's destination MAC address and forwarding it out the appropriate port. This is the central function of the switch. When a frame from a node arrives at the switch for which the switch has already learned the MAC address, this address is matched to an entry in the MAC table and the frame is forwarded to the corresponding port. Instead of <content-link target="cg3185394806" type="glossary">flooding</content-link> the frame to all ports, the switch sends the frame to the destination node via its nominated port. This action is called <i>forwarding</i>.</p><p><b>Filtering</b></p><p>In some cases, a frame is not forwarded. This process is called frame <i>filtering</i><b>.</b> One use of filtering has already been described: a switch does not forward a frame to the same port on which it arrived. A switch will also drop a corrupt frame. If a frame fails a CRC check, the frame is dropped. An additional reason for filtering a frame is security. A switch has security settings for blocking frames to and/or from selective MAC addresses or specific ports. </p></content-text>
</page>
</topic>
<topic type="" id="en0609060400"><title><content-text>Ethernet - Comparing  Hubs and Switches</content-text></title>
<page type="FullScreen" id="en0609060401">
<content-media type="ActivityCustom" id="cm2589689584"><title><content-text></content-text></title><media ref="en0609000000/en0609060000/en0609060400/en0609060401/cm2589689584.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609060000/en0609060400/en0609060401/cm2589689584text.xml"/></content-media>

<content-text><p>In this interactive activity, you are given the destination and source MAC addresses of a frame, a switching table, and the source node of a frame.</p><p>Using this information, you are to determine how the switch processes the frame by indicating to which ports the frame will be forwarded and how the switch will handle the frame.</p><p>Then check your answers.</p><p>You have the opportunity to use practice problems provided by the activity or you can try entering your own examples.</p></content-text>
</page>
<page type="OneColumn" id="en0609060402">
<content-media type="ActivityPKA" id="cm6973866985"><title><content-text></content-text></title><media ref="en0609000000/en0609060000/en0609060400/en0609060402/cm6973866985/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en0609000000/en0609060000/en0609060400/en0609060402/cm6973866985/icontext.xml"/></content-media>

<content-text><p>In this activity, you will have the opportunity to visualize and experiment with the behavior of switches in a network.</p><p><b>Click the Packet Tracer icon for more details.</b></p></content-text>
</page>
</topic>
</section>
<section type="" id="en0609070000"><title><content-text>Address Resolution Protocol (ARP)</content-text></title>
<topic type="" id="en0609070100"><title><content-text>The ARP Process - Mapping IP to MAC Addresses</content-text></title>
<page type="OneColumn" id="en0609070101">
<content-media type="InteractiveGraphicRollovers" id="cm9035552740"><title><content-text></content-text></title><media ref="en0609000000/en0609070000/en0609070100/en0609070101/cm9035552740.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609070000/en0609070100/en0609070101/cm9035552740text.xml"/></content-media>

<content-text><p>The ARP protocol provides two basic functions:</p><ul><li> Resolving IPv4 addresses to MAC addresses</li>  <li> Maintaining a cache of mappings</li></ul>    <p><b>Resolving IPv4 Addresses to MAC Addresses</b></p><p>For a frame to be placed on the LAN media, it must have a destination MAC address. When a packet is sent to the Data Link layer to be encapsulated into a frame, the node refers to a table in its memory to find the Data Link layer address that is mapped to the destination IPv4 address. This table is called the <i>ARP table</i> or the <i>ARP cache</i>. The <content-link target="cg6429430019" type="glossary">ARP table</content-link> is stored in the RAM of the device. </p><p>Each entry, or row, of the ARP table has a pair of values: an IP Address and a MAC address. We call the relationship between the two values a map - it simply means that you can locate an IP address in the table and discover the corresponding MAC address. The ARP table caches the mapping for the devices on the local LAN. </p><p>To begin the process, a transmitting node attempts to locate in the ARP table the MAC address mapped to an IPv4 destination. If this map is cached in the table, the node uses the MAC address as the destination MAC in the frame that encapsulates the IPv4 packet. The frame is then encoded onto the networking media. </p><p><b>Maintaining the ARP Table</b></p><p>The ARP table is maintained dynamically. There are two ways that a device can gather MAC addresses. One way is to monitor the traffic that occurs on the local network segment. As a node receives frames from the media, it can record the source IP and MAC address as a mapping in the ARP table. As frames are transmitted on the network, the device populates the ARP table with address pairs. </p><p>Another way a device can get an address pair is to broadcast an ARP request. ARP sends a Layer 2 broadcast to all devices on the Ethernet LAN. The frame contains an ARP request packet with the IP address of the destination host. The node receiving the frame that identifies the IP address as its own responds by sending an ARP reply packet back to the sender as a unicast frame. This response is then used to make a new entry in the ARP table.</p><p>These dynamic entries in the MAC table are timestamped in much the same way that MAC table entries are timestamped in switches. If a device does not receive a frame from a particular device by the time the timestamp expires, the entry for this device is removed from the ARP table.</p><p>Additionally, static map entries can be entered in an ARP table, but this is rarely done. Static ARP table entries do expire over time and must be manually removed.</p><p><b>Creating the Frame</b></p><p>What does a node do when it needs to create a frame and the <content-link target="cg8233101947" type="glossary">ARP cache</content-link> does not contain a map of an IP address to a destination MAC address? When ARP receives a request to map an IPv4 address to a MAC address, it looks for the cached map in its ARP table. If an entry is not found, the encapsulation of the IPv4 packet fails and the Layer 2 processes notify ARP that it needs a map. </p><p>The ARP processes then send out an ARP request packet to discover the MAC address of the destination device on the local network. If a device receiving the request has the destination IP address, it responds with an ARP reply. A map is created in the ARP table. Packets for that IPv4 address can now be encapsulated in frames.</p><p>If no device responds to the ARP request, the packet is dropped because a frame cannot be created. This encapsulation failure is reported to the upper layers of the device. If the device is an intermediary device, like a router, the upper layers may choose to respond to the source host with an error in an ICMPv4 packet. </p><p>Click the step numbers in the figure to see the process used to get the MAC address of node on the local physical network.</p><p>In the lab, you will use Wireshark to observe ARP requests and responses across a network.</p></content-text>
</page>
</topic>
<topic type="" id="en0609070200"><title><content-text>The ARP Process - Destinations outside the Local Network</content-text></title>
<page type="OneColumn" id="en0609070201">
<content-media type="InteractiveGraphicHotspots" id="cm1549364794"><title><content-text></content-text></title><media ref="en0609000000/en0609070000/en0609070200/en0609070201/cm1549364794.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609070000/en0609070200/en0609070201/cm1549364794text.xml"/></content-media>

<content-text><p>All frames must be delivered to a node on the local network segment. If the destination IPv4 host is on the local network, the frame will use the MAC address of this device as the destination MAC address. </p><p>If the destination IPv4 host is not on the local network, the source node needs to deliver the frame to the router interface that is the gateway or next hop used to reach that destination. The source node will use the MAC address of the gateway as the destination address for frames containing an IPv4 packet addressed to hosts on other networks. </p><p>The gateway address of the router interface is stored in the IPv4 configuration of the hosts. When a host creates a packet for a destination, it compares the destination IP address and its own IP address to determine if the two IP addresses are located on the same Layer 3 network. If the receiving host is not on the same network, the source uses the ARP process to determine a MAC address for the router interface serving as the gateway. </p><p>In the event that the gateway entry is not in the table, the normal ARP process will send an ARP request to retrieve the MAC address associated with the IP address of the router interface.</p><p>Click the step numbers in the figure to see the process used to get the MAC address of the gateway.</p></content-text>
</page>
<page type="OneColumn" id="en0609070202">
<content-media type="StaticGraphic" id="cm4411399781"><title><content-text></content-text></title><media ref="en0609000000/en0609070000/en0609070200/en0609070202/cm4411399781.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609070000/en0609070200/en0609070202/cm4411399781text.xml"/></content-media>

<content-text><p><b>Proxy ARP</b></p><p>There are circumstances under which a host might send an ARP request seeking to map an IPv4 address outside of the range of the local network. In these cases, the device sends ARP requests for IPv4 addresses not on the local network instead of requesting the MAC address associated with the IPv4 address of the gateway. To provide a MAC address for these hosts, a router interface may use a proxy ARP to respond on behalf of these remote hosts. This means that the ARP cache of the requesting device will contain the MAC address of the gateway mapped to any IP addresses not on the local network. Using proxy ARP, a router interface acts as if it is the host with the IPv4 address requested by the ARP request. By "faking" its identity, the router accepts responsibility for routing packets to the "real" destination. </p><p>One such use of this process is when an older implementation of IPv4 cannot determine whether the destination host is on the same logical network as the source. In these implementations, ARP always sends ARP requests for the destination IPv4 address. If proxy ARP is disabled on the router interface, these hosts cannot communicate out of the local network. </p><p>Another case where a proxy ARP is used is when a host believes that it is directly connected to the same logical network as the destination host. This generally occurs when a host is configured with an improper mask. </p><p>As shown in the figure, Host A has been improperly configured with a /16 subnet mask. This host believes that it is directly connected to all of the 172.16.0.0 /16 network instead of to the 172.16.10.0 /24 subnet. </p><p>When attempts are made to communicate with any IPv4 host in the range of 172.16.0.1 to 172.16.255.254, Host A will send an ARP request for that IPv4 address. The router can use a proxy ARP to respond to requests for the IPv4 address of Host C (172.16.20.100) and Host D (172.16.20.200). Host A will subsequently have entries for these addresses mapped to the MAC address of the e0 interface of the router (00-00-0c-94-36-ab).</p><p>Yet another use for a proxy ARP is when a host is not configured with a default gateway. Proxy ARP can help devices on a network reach remote subnets without the need to configure routing or a default gateway. </p><p>By default, Cisco routers have proxy ARP enabled on LAN interfaces.</p><p><content-link target="http://www.cisco.com/warp/public/105/5.html" type="external">http://www.cisco.com/warp/public/105/5.html</content-link> </p></content-text>
</page>
</topic>
<topic type="" id="en0609070300"><title><content-text>The ARP Process - Removing Address Mappings</content-text></title>
<page type="OneColumn" id="en0609070301">
<content-media type="StaticGraphic" id="cm1550076925"><title><content-text></content-text></title><media ref="en0609000000/en0609070000/en0609070300/en0609070301/cm1550076925.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609070000/en0609070300/en0609070301/cm1550076925text.xml"/></content-media>

<content-text><p>For each device, an ARP cache timer removes ARP entries that have not been used for a specified period of time. The times differ depending on the device and its operating system. For example, some Windows operating systems store ARP cache entries for 2 minutes. If the entry is used again during that time, the ARP timer for that entry is extended to 10 minutes.</p><p>Commands may also be used to manually remove all or some of the entries in the ARP table. After an entry has been removed, the process for sending an ARP request and receiving an ARP reply must occur again to enter the map in the ARP table.</p><p>In the lab for this section, you will use the <span class="cmd"><b>arp</b></span> command to view and to clear the contents of a computer's ARP cache. Note that this command, despite its name, does not invoke the execution of the Address Resolution Protocol in any way. It is merely used to display, add, or remove the entries of the ARP table. ARP service is integrated within the IPv4 protocol and implemented by the device. Its operation is transparent to both upper layer applications and users.</p></content-text>
</page>
</topic>
<topic type="" id="en0609070400"><title><content-text>ARP Broadcasts - Issues</content-text></title>
<page type="OneColumn" id="en0609070401">
<content-media type="StaticGraphic" id="cm5410841021"><title><content-text></content-text></title><media ref="en0609000000/en0609070000/en0609070400/en0609070401/cm5410841021.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609070000/en0609070400/en0609070401/cm5410841021text.xml"/></content-media>

<content-text><p><b>Overhead on the Media</b></p><p>As a broadcast frame, an ARP request is received and processed by every device on the local network. On a typical business network, these broadcasts would probably have minimal impact on network performance. However, if a large number of devices were to be powered up and all start accessing network services at the same time, there could be some reduction in performance for a short period of time. For example, if all students in a lab logged into classroom computers and attempted to access the Internet at the same time, there could be delays.</p><p>However, after the devices send out the initial ARP broadcasts and have learned the necessary MAC addresses, any impact on the network will be minimized.</p><p><b>Security</b></p><p>In some cases, the use of ARP can lead to a potential security risk. <content-link target="cg2427778747" type="glossary">ARP spoofing</content-link>, or <content-link target="cg1400562814" type="glossary">ARP poisoning</content-link>, is a technique used by an attacker to inject the wrong MAC address association into a network by issuing fake ARP requests. An attacker forges the MAC address of a device and then frames can be sent to the wrong destination.</p><p>Manually configuring static ARP associations is one way to prevent ARP spoofing. Authorized MAC addresses can be configured on some network devices to restrict network access to only those devices listed.</p></content-text>
</page>
</topic>
</section>
<section type="" id="en0609080000"><title><content-text>Chapter Labs</content-text></title>
<topic type="" id="en0609080100"><title><content-text>Lab- Address Resolution Protocol (ARP)</content-text></title>
<page type="OneColumn" id="en0609080101">
<content-media type="ActivityLab" id="cm8359050288"><title><content-text></content-text></title><media ref="en0609000000/en0609080000/en0609080100/en0609080101/cm8359050288/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="en0609000000/en0609080000/en0609080100/en0609080101/cm8359050288/icontext.xml"/></content-media>

<content-text><p>This lab introduces the Windows <span class="cmd"><b>arp</b></span> utility command to examine and change ARP cache entries on a host computer. Then Wireshark is used to capture and analyze ARP exchanges between network devices.</p><p><b>Click the lab icon for more details.</b></p></content-text>
</page>
<page type="OneColumn" id="en0609080102">
<content-media type="ActivityPKA" id="cm4930193388"><title><content-text></content-text></title><media ref="en0609000000/en0609080000/en0609080100/en0609080102/cm4930193388/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en0609000000/en0609080000/en0609080100/en0609080102/cm4930193388/icontext.xml"/></content-media>

<content-text><p>In this activity, you will use Packet Tracer to examine and change ARP cache entries on a host computer.</p><p><b>Click the Packet Tracer icon to launch the Packet Tracer activity.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0609080200"><title><content-text>Lab - Cisco Switch MAC Table Examination</content-text></title>
<page type="OneColumn" id="en0609080201">
<content-media type="ActivityLab" id="cm8612290910"><title><content-text></content-text></title><media ref="en0609000000/en0609080000/en0609080200/en0609080201/cm8612290910/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="en0609000000/en0609080000/en0609080200/en0609080201/cm8612290910/icontext.xml"/></content-media>

<content-text><p>In this lab, you will connect to a switch via a Telnet session, log in, and use the required operating system commands to examine the stored MAC addresses and their association to switch ports.</p><p><b>Click the lab icon for more details.</b></p></content-text>
</page>
<page type="OneColumn" id="en0609080202">
<content-media type="ActivityPKA" id="cm7542523959"><title><content-text></content-text></title><media ref="en0609000000/en0609080000/en0609080200/en0609080202/cm7542523959/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en0609000000/en0609080000/en0609080200/en0609080202/cm7542523959/icontext.xml"/></content-media>

<content-text><p>In this activity, you will use Packet tracer to examine the stored MAC addresses and their association to switch ports.</p><p><b>Click the Packet Tracer icon to launch the Packet Tracer activity.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0609080300"><title><content-text>Lab - Intermediary Device as an End Device</content-text></title>
<page type="OneColumn" id="en0609080301">
<content-media type="ActivityLab" id="cm3671041105"><title><content-text></content-text></title><media ref="en0609000000/en0609080000/en0609080300/en0609080301/cm3671041105/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="en0609000000/en0609080000/en0609080300/en0609080301/cm3671041105/icontext.xml"/></content-media>

<content-text><p>This lab uses Wireshark to capture and analyze frames to determine which network nodes originated the frames. A Telnet session between a host computer and switch is then captured and analyzed for frame content.</p><p><b>Click the lab icon for more details.</b></p></content-text>
</page>
<page type="OneColumn" id="en0609080302">
<content-media type="ActivityPKA" id="cm1094206415"><title><content-text></content-text></title><media ref="en0609000000/en0609080000/en0609080300/en0609080302/cm1094206415/" mime="application/packettracer" scale="false" type="directory" width="0" height="0" external="en0609000000/en0609080000/en0609080300/en0609080302/cm1094206415/icontext.xml"/></content-media>

<content-text><p>In this activity, you will use Packet Tracer to analyze frames originating from a switch.</p><p><b>Click the Packet Tracer icon to launch the Packet Tracer activity.</b></p></content-text>
</page>
</topic>
</section>
<section type="ChapterSummary" id="en0609090000"><title><content-text>Chapter Summary</content-text></title>
<topic type="" id="en0609090100"><title><content-text>Summary and Review</content-text></title>
<page type="OneColumn" id="en0609090101">
<content-media type="StaticGraphic" id="cm5126041192"><title><content-text></content-text></title><media ref="en0609000000/en0609090000/en0609090100/en0609090101/cm5126041192.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609090000/en0609090100/en0609090101/cm5126041192text.xml"/></content-media>

<content-text><p>Ethernet is an effective and widely used TCP/IP Network Access protocol. Its common frame structure has been implemented across a range of media technologies, both copper and fiber, making the most common LAN protocol in use today.</p><p>As an implementation of the IEEE 802.2/3 standards, the Ethernet frame provides MAC addressing and error checking. Being a shared media technology, early Ethernet had to apply a CSMA/CD mechanism to manage the use of the media by multiple devices. Replacing hubs with switches in the local network has reduced the probability of frame collisions in half-duplex links. Current and future versions, however, inherently operate as full-duplex communications links and do not need to manage media contention to the same detail.</p><p>The Layer 2 addressing provided by Ethernet supports unicast, multicast, and broadcast communications. Ethernet uses the Address Resolution Protocol to determine the MAC addresses of destinations and map them against known Network layer addresses.</p></content-text>
</page>
<page type="FullScreen" id="en0609090102">
<content-media type="StaticGraphic" id="cm4976640251"><title><content-text></content-text></title><media ref="en0609000000/en0609090000/en0609090100/en0609090102/cm4976640251.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609090000/en0609090100/en0609090102/cm4976640251text.xml"/></content-media>

<content-text></content-text>
</page>
<page type="OneColumn" id="en0609090103">
<content-media type="ActivityPKA" id="cm5290611412"><title><content-text></content-text></title><media ref="en0609000000/en0609090000/en0609090100/en0609090103/cm5290611412/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en0609000000/en0609090000/en0609090100/en0609090103/cm5290611412/icontext.xml"/></content-media>

<content-text><p>In this activity, you will continue to build a more complex model of the Exploration lab network. </p><p><content-link target="E1_PTAct_9_9_1_Directions.pdf" type="internalfile">Packet Tracer Skills Integration Instructions (PDF)</content-link> </p><p><b>Click the Packet Tracer icon to launch the Packet Tracer activity.</b></p></content-text>
</page>
<page type="OneColumn" id="en0609090104">
<content-media type="StaticGraphic" id="cm2866283056"><title><content-text></content-text></title><media ref="en0609000000/en0609090000/en0609090100/en0609090104/cm2866283056.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0609000000/en0609090000/en0609090100/en0609090104/cm2866283056text.xml"/></content-media>

<content-text><p><b>To Learn More</b></p><p> </p><p><b>Reflection Questions</b></p><p>Discuss the move of Ethernet from a LAN technology to also becoming a Metropolitan and Wide Area technology. What has made this possible?</p><p>Initially used only for data communications networks, Ethernet is now also being applied in real-time industrial control networking. Discuss the physical and operational challenges that Ethernet has to overcome to be fully applied in this area.</p></content-text>
</page>
</topic>
</section>
<section type="ChapterQuiz" id="en0609100000"><title><content-text>Chapter Quiz</content-text></title>
<topic type="" id="en0609100100"><title><content-text>Chapter Quiz</content-text></title>
<page type="FullScreen" id="en0609100101">
<content-media type="ChapterQuiz" id="cm2306476020"><title><content-text></content-text></title><media ref="en0609000000/en0609100000/en0609100100/en0609100101/cm2306476020/" mime="" scale="true" type="directory" width="100%" height="100%" external="en0609000000/en0609100000/en0609100100/en0609100101/cm2306476020/icontext.xml"/></content-media>

<content-text></content-text>
</page>
</topic>
</section>
</chapter>
